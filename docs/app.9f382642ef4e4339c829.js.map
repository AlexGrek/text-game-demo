{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/.fable/fable-library.3.1.11/List.js","webpack:///./src/.fable/fable-library.3.1.11/Reflection.js","webpack:///./src/.fable/fable-library.3.1.11/lib/long.js","webpack:///./src/.fable/fable-library.3.1.11/Long.js","webpack:///./src/.fable/fable-library.3.1.11/Util.js","webpack:///./src/.fable/fable-library.3.1.11/RegExp.js","webpack:///./src/.fable/fable-library.3.1.11/String.js","webpack:///./src/.fable/fable-library.3.1.11/Option.js","webpack:///./src/.fable/fable-library.3.1.11/Types.js","webpack:///./src/.fable/fable-library.3.1.11/Seq.js","webpack:///./src/.fable/fable-library.3.1.11/Array.js","webpack:///./src/.fable/fable-library.3.1.11/Map.js","webpack:///./src/.fable/fable-library.3.1.11/Numeric.js","webpack:///./src/.fable/fable-library.3.1.11/Date.js","webpack:///./src/.fable/Fable.Parsimmon.4.0.0/Parsimmon.js","webpack:///./src/.fable/fable-library.3.1.11/MapUtil.js","webpack:///./src/.fable/fable-library.3.1.11/Int32.js","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/TypeInfo.Converter.fs","webpack:///./src/.fable/fable-library.3.1.11/Set.js","webpack:///./src/.fable/Fable.Parsimmon.4.0.0/Parsimmon.fs","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/Parser.fs","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/SimpleJson.fs","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/TypeCheck.fs","webpack:///./src/.fable/fable-library.3.1.11/lib/big.js","webpack:///./src/.fable/fable-library.3.1.11/Decimal.js","webpack:///./src/.fable/fable-library.3.1.11/FSharp.Collections.js","webpack:///./src/.fable/fable-library.3.1.11/System.Text.js","webpack:///./src/.fable/fable-library.3.1.11/FSharp.Core.js","webpack:///./src/.fable/fable-library.3.1.11/MutableMap.js","webpack:///./src/.fable/fable-library.3.1.11/Double.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt/n.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt/z.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt.js","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/Json.Converter.fs","webpack:///./src/.fable/fable-library.3.1.11/DateOffset.js","webpack:///./src/.fable/fable-library.3.1.11/Guid.js","webpack:///./src/.fable/fable-library.3.1.11/BitConverter.js","webpack:///./src/.fable/fable-library.3.1.11/MutableSet.js","webpack:///./src/.fable/Fable.SimpleJson.3.21.0/quote.js","webpack:///./src/Data.fs","webpack:///./src/Utils.fs","webpack:///./src/State.fs","webpack:///./src/Props.fs","webpack:///./src/Actions.fs","webpack:///./src/RichText.fs","webpack:///./src/Dialog.fs","webpack:///./src/HubDesign.fs","webpack:///./src/LocationHub.fs","webpack:///./src/PersonHub.fs","webpack:///./src/Engine.fs","webpack:///./src/RoleModel.fs","webpack:///./src/Person.fs","webpack:///./src/Facts.fs","webpack:///./src/Game/GameDvaFacts.fs","webpack:///./src/DSL.fs","webpack:///./src/NPC.fs","webpack:///./src/GameDvaCharacters.fs","webpack:///./src/Game/GameDva.fs","webpack:///./src/ViewModel.fs","webpack:///./src/.fable/Feliz.1.52.0/ReactInterop.js","webpack:///./src/.fable/Feliz.1.52.0/React.fs","webpack:///./src/Serialization.fs","webpack:///./src/UserInterface/DevTools.fs","webpack:///./src/UiUtils.fs","webpack:///./src/FactsRenderer.fs","webpack:///./src/HistoryRenderer.fs","webpack:///./src/DebuggerRenderer.fs","webpack:///./src/UserInterface/RichTextRenderer.fs","webpack:///./src/UserInterface/DialogTextRenderer.fs","webpack:///./src/.fable/Feliz.UseListener.0.6.3/Listener.fs","webpack:///./src/.fable/Feliz.Router.3.8.0/Router.fs","webpack:///./src/UserInterface/Components.fs","webpack:///./src/Main.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SR_indexOutOfBounds","FSharpList","head","tail","join","this","other","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","equals","i_mut","h_mut","h","structuralHash","compare","xs","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","iterator","toIterator","GetEnumerator","getEnumerator","Record","it","current","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","x","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","Error","SR_inputListWasEmpty","FSharpList__get_Tail","empty","cons","singleton","isEmpty","tryHead","some","toArray","len","res","fill","Array","fold","folder","state","acc","reverse","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","ofSeq","xs_3","isArrayLike","root","node","enumerator","Dispose","xs_5","t_2","concat","lists","forEach","xs_6","append","ys","collect","mapping","zs","mapIndexed","acc_mut","foldIndexed","map","tryPick","f","tryFind","tryFindIndex","tryItem","item","index","FSharpList__get_Item_Z524259A4","filter","choose","value_1","contains","eq","v","Equals","reduce","skipWhile","predicate_mut","xs_mut","predicate","CaseInfo","declaringType","tag","fields","TypeInfo","fullname","generics","construct","parent","cases","enumCases","fullName","getHashCode","getGenerics","fullnameHash","stringHash","genHashes","combineHashCodes","t1","t2","equalArraysWith","getRecordElements","k1","v1","k2","v2","class_type","record_type","undefined","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","array_type","obj_type","unit_type","string_type","bool_type","int32_type","float64_type","info","isArray","lastIndexOf","substr","gen","endsWith","getElementType","_a","isEnum","getEnumUnderlyingType","getUnionCases","getTupleElements","isTuple","getFunctionElements","isFunction","isUnion","Union","isRecord","startsWith","getUnionFields","case_","getUnionCaseFields","uci","getRecordField","field","makeUnion","values","expectedLength","makeRecord","obj","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","isLong","GetHashCode","h1","CompareTo","toString","radix","toJSON","symbol","multiply","y","toPrecision","sd","String","toExponential","dp","toFixed","toHex","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","RangeError","indexOf","substring","radixToPower","size","min","parseInt","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Subtraction","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_LeftShift","op_BitwiseAnd","getLowBits","getHighBits","getLowBitsUnsigned","getHighBitsUnsigned","fromInteger","kind","xh","parse","style","_bitsize","isValid","sign","maxValue","getMaxValue","toUpperCase","padStart","tryParse","bitsize","defValue","contents","unixEpochMillisecondsToTicks","ms","offset","ticksToUnixEpochMilliseconds","ticks","isIterable","ArrayBuffer","isView","isHashable","isDisposable","sameConstructor","getPrototypeOf","constructor","Enumerator","iter","cur","next","done","en","hasNext","Lazy","factory","isValueCreated","createdValue","padWithZeros","dateOffset","date","date1","getTimezoneOffset","int32ToString","ObjectRef","idMap","has","set","count","charCodeAt","numberHash","hashes","h2","physicalHash","id","arrayHash","Date","getTime","dateHash","safeHash","equalArrays","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","isComparable","compareObjects","comparer","randomNext","random","clear","col","WeakMap","uncurry","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","escape","replace","fsFormatRegExp","formatRegExp","isLessThan","numericCompare","printf","input","cont","lastIndex","strParts","matches","strIdx","match","exec","matchIndex","createPrinter","_strParts","_matches","_result","padArg","arg","flags","_padLength","precision","format","padLength","formatReplacement","continuePrint","toConsole","console","toText","toFail","rep","isNumeric","toLowerCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_","idx","pattern","intPart","decimalPart","abs","search","isNullOrEmpty","isNullOrWhiteSpace","test","delimiter","from","notSupported","fromBase64String","b64Encoded","binary","atob","isRight","split","splitters","removeEmpty","arguments","splits","reg","RegExp","trim","chars","trimEnd","startIndex","Some","opt","defaultArg","defaultValue","binder","seqToString","self","callStack","entries","unionToString","fieldStr","withParens","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","FSharpRef","contentsOrGetter","setter","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","started","curr","x_1","finish","matchValue_1","indexNotFound","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","delay","generator","sources","outerOpt","innerOpt","finished","inner","outer","copyOfStruct","inner_1","outer_1","Enumerator_concat","unfold","st_1","Enumerator_unfold","singleton_1","toArray_1","toList","ofArray_1","ofSeq_1","generate","compareWith","e1","e2","b1","b2","chooser","e_1","forAll","found","exists","iterateIndexed","pick","Helpers_allocateArrayFromCons","differentLengths","array1","array2","len1","len2","newArray","i_1","target","targetIndex","start","source","mapFold","array","patternInput","mapFoldBack","arrays","arrays_1","totalIdx","totalLength","idx_1","arr_2","ar","initialize","initializer","pairwise","copy","scanBack","find","tryFindBack","tryFindIndexBack","delegateArg0","delegateArg1","permute","checkFlags","every","zip","chunkBySize","chunkSize","start_1","equalsWith","length1","length2","foldBack","reduceRight","foldBack2","foldBackIndexed2","_arg1","windowed","windowSize","max_1","splitInto","chunks","chunks_1","min_1","minChunkSize","chunksWithExtraItem","y_1","transpose","lenInner","a","MapTreeLeaf$2","k","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","Compare","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","MapTreeModule_spliceOutSuccessor","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_copyToArray","arr","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","fold_1","tupledArg","MapTreeModule_ofList","ie","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5203","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","kv","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","LanguagePrimitives_FastGenericComparer","FSharpMap__Add","FSharpMap__Change","MapTreeModule_change","u","c_1","matchValue_4","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","MapTreeModule_remove","FSharpMap__ToList","m_1_mut","MapTreeModule_toList","FSharpMap__ToArray","MapTreeModule_toArray","table","change","FSharpMap__TryFind","remove","containsKey","ofList","elements","Number","offsetRegex","dateOffsetToString","isMinus","hours","minutes","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","utc","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","parseRaw","baseDate","timeInSeconds","timeParts","parseFloat","offsetParts","offsetInMinutes","detectUTC","year","month","day","dateValue","UTC","setFullYear","isLeapYear","daysInMonth","Parsimmon","times","seed","elem","bufferExists","Buffer","isParser","isBuffer","makeSuccess","status","furthest","expected","makeFailure","mergeReplies","last","union","makeLineColumnIndex","line","column","lines","assertParser","charAt","assertNumber","assertRegexp","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkIndex","toChunks","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","prefix","re","anchoredRegexp","seq","parsers","numParsers","accum","seqMap","mapper","pop","results","alt","fail","sepBy1","parser","separator","then","many","rs","regexp","group","anchored","fullMatch","groupMatch","succeed","lookahead","oneOf","desc","noneOf","takeWhile","lazy","skip","eof","msg","err","type","or","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","tieWith","assertArray","tie","prevResult","atMost","atLeast","init","fn","contramap","promap","g","mark","end","sepBy","notFollowedBy","text","reply","fallback","ap","chain","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","tryGetValue","addToSet","addToDict","dict","getItemFromDict","NumberStyles","getRange","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","validResponse","umin","umax","op_UnaryNegation_Int32","typeDef","range","domain","resolvedType","primType","types","fieldType","fieldName","prop","caseTypes","caseName","caseInfo","elemType","genArgs","keyType","valueType","ti","case","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","SetTreeModule_empty","SetTreeModule_remove","SetTreeModule_spliceOutSuccessor","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofArray","SetTreeModule_ofSeq","fold_2","SetTreeModule_ofList","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","FSharpSet__Remove","content","others","skipped","ps","strings","dot","decimals","otherParser","escapedCharSnippet","normalCharSnippet","anyCharSnippet","jint","digitsLeft","digitsRight","jfloat","arg0","negativeJFloat","negJint","tuple","jnull","jbool","jnumber","jstring","jarray","comma","leftBrace","rightBrace","keyValues","stringLiteral","jobject","jvalue","number","arg10","arg20","jsObject","jsonValue","bigInt","P","cmp","_this","NAME","INVALID","INVALID_DP","NUMERIC","nl","round","Big","DP","RM","rm","more","xc","findIndex","xci","unshift","stringify","z","NE","PE","isneg","yc","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","one","sqrt","valueOf","_Big_","normalize","version","Decimal","ComparisonIdentity_Structural","Operators_FailurePattern","exn","message","Dictionary","pairs","hashMap","Map","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","outArg","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_maxInt","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_divbase","BigNatModule_modbase","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_add","rbound","c_mut","p_mut","q_mut","r_mut","z_1","i_2","BigNatModule_addP","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","patternInput_1","ad","a_1","f_1","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_toFloat","evalFloat","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_ofString","ten","build","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_posn_Z67CCE57D","BigInteger_negn_Z67CCE57D","BigInteger_$ctor_Z524259A4","BigInteger_$ctor_Z524259C1","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","BigInteger__get_ToDouble","BigInteger_Parse_Z721C83C5","text_1","arg00","fromInt32","toDecimal","BigInteger__get_ToDecimal","toString_1","json","leftMap","rightMap","linkedList","unionCases","typeInfo","foundCase","getlElemType","getElemType","genericJson","getTypes","optionalTypeDelayed","underlyingType","originalType","insideBrowser","otherType","seconds","unionType","expectedCases","deserialized","parsedOptional","parsedValues","caseType","_arg2","discriminators","foundDiscriminatorKey","keyword","discriminatorKey","discriminatorValueJson","discriminatorValue","foundUnionCase","record","otherwise","unexpectedJson","expectedType","caseIndex","fieldValues","_arg3","lowBytes","highBytes","combinedBytes","serializedRecord","caseValue","elementTypeDelayed","tupleTypesDelayed","tuples","getType","items","foundCaseName","elementType","flattenedList","tupleTypes","jsonType","recordValues","recordType","dictKeys","recordFields","arg30","keyValuePair","output","hashset","inputJson","internalMap","flattenedMap","unknownType","fieldTypes","serializedFields","element","existingValue","usedCase","serializedValues","serializedKey","serializedValue","DateTimeOffset","offsetMatch","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","getBytesInt32","DataView","buffer","byteOffset","byteLength","setInt32","toInt64","view","getInt32","HashSet","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","HashSet__get_Count","HashSet__Remove_2B595","HashSet__TryFindIndex_2B595","v_1","quote","inputText","escapable","meta","s2","s1","w","instance","repo","refs","inputRecord","ds","sold","popInner","pop1","targetRef","newStackRefs","newStack","mapUIStack","path","oValue","newData","defVal","propName","def","modifier","newMod","old","txt","rt","el","dialogWindow","reference","getFromUi","dialog","proxy","updatedState","person","rolesList","newState","REPO_FACTS","__","( arg10@ )","variant","actor","textGen","variants","onEntry","windows","lst","doPop","REPO_DISPLAY_NAMES_MAPPING","pers","REPO_PERSONS","facts","myself","( builder@ )","objectArg","wInit","w2","INITIAL_STATE","reason","getVariant","dwindow","actorId","act","loc","hub","personHub","Text","SpecialKeys","button","ref","UI","cast","prev","news","oldToMatch","newFacts","fact","messages","previous","actionText","historyRecord","oldState","recrd","getDisposable","useEffectReact","disposable","useLayoutEffectReact","renderElement","areEqual","withKey","memoElementType","props","effect","initialValue","createFunction","dependencies","callback","callbackFunction","lastRenderCallbackRef","callbackRef","initial","setGameState","enabled","errorText","onClose","header","onClick","icon","PopupMessage","FactRenderer","fid","records","HistoryRenderer","animationClasses","iteration","gameAnimation","animation","UIAnimationClass","author","options","maybeOptions","allowsPassiveEvents","suffix","segment","query","onChange","ev","urlChanged","routeMode","addOptions","removeOptions","eventType","initialState","setState","vm","uiWidgetToRender","PopupPanel","HeaderPanel","ss","genChildren","anyPanelStyle","close","renderSpecificPanel","renderer","setUpdatedGameState","setstate","renderVariant","toSimpleVariants","setgs","renderedVariants","render","renderedLocations","renderedPersons","specialKeys","SpecialDialogButton","uia","addClassesByAction","onClickAction","prp","addClassesByAnimation","specialClass","iconUrl","iconName","asDefault","game"],"mappings":"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","file":"app.9f382642ef4e4339c829.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([35,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\nimport { fill } from \"./Array.js\";\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, empty_1());\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = ((j + 1) | 0);\n    }, m);\n}\n\nexport function MapTreeModule_toArray(m) {\n    const n = MapTreeModule_size(m) | 0;\n    const res = fill(new Array(n), 0, n, [null, null]);\n    MapTreeModule_copyToArray(m, res, 0);\n    return res;\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const rest = tail(stack);\n            const m = head(stack);\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_1((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_1((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_1((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_1(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult5203 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (combineHash(res, structuralHash(activePatternResult5203[0])) | 0);\n            res = (combineHash(res, structuralHash(activePatternResult5203[1])) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","import { equals, getEnumUnderlyingType, isEnum, getTupleElements, isTuple, getElementType, isArray, getFunctionElements, isFunction, getUnionCases, getUnionCaseFields, isUnion, getGenerics, getRecordElements, name, isRecord, fullName } from \"../fable-library.3.1.11/Reflection.js\";\r\nimport { UnionCase, RecordField, TypeInfo } from \"./TypeInfo.fs.js\";\r\nimport { map } from \"../fable-library.3.1.11/Array.js\";\r\nimport { collect, singleton, append, delay, toArray } from \"../fable-library.3.1.11/Seq.js\";\r\nimport { structuralHash, Lazy } from \"../fable-library.3.1.11/Util.js\";\r\nimport { Dictionary } from \"../fable-library.3.1.11/MutableMap.js\";\r\nimport { tryGetValue } from \"../fable-library.3.1.11/MapUtil.js\";\r\nimport { FSharpRef } from \"../fable-library.3.1.11/Types.js\";\r\nimport { endsWith, isNullOrEmpty } from \"../fable-library.3.1.11/String.js\";\r\n\r\nexport function $007CPrimitiveType$007C_$007C(primType) {\r\n    const matchValue = fullName(primType);\r\n    switch (matchValue) {\r\n        case \"System.String\": {\r\n            return new TypeInfo(2);\r\n        }\r\n        case \"System.Char\": {\r\n            return new TypeInfo(1);\r\n        }\r\n        case \"System.Int16\": {\r\n            return new TypeInfo(11);\r\n        }\r\n        case \"System.Int32\": {\r\n            return new TypeInfo(6);\r\n        }\r\n        case \"Microsoft.FSharp.Core.int64`1\":\r\n        case \"System.Int64\": {\r\n            return new TypeInfo(12);\r\n        }\r\n        case \"System.UInt16\": {\r\n            return new TypeInfo(3);\r\n        }\r\n        case \"System.UInt32\": {\r\n            return new TypeInfo(4);\r\n        }\r\n        case \"System.UInt64\": {\r\n            return new TypeInfo(5);\r\n        }\r\n        case \"System.DateTime\": {\r\n            return new TypeInfo(15);\r\n        }\r\n        case \"System.TimeSpan\": {\r\n            return new TypeInfo(18);\r\n        }\r\n        case \"System.DateTimeOffset\": {\r\n            return new TypeInfo(16);\r\n        }\r\n        case \"System.Boolean\": {\r\n            return new TypeInfo(7);\r\n        }\r\n        case \"System.Single\": {\r\n            return new TypeInfo(8);\r\n        }\r\n        case \"System.Double\": {\r\n            return new TypeInfo(9);\r\n        }\r\n        case \"Microsoft.FSharp.Core.decimal`1\":\r\n        case \"System.Decimal\": {\r\n            return new TypeInfo(10);\r\n        }\r\n        case \"System.Numerics.BigInteger\": {\r\n            return new TypeInfo(17);\r\n        }\r\n        case \"Microsoft.FSharp.Core.Unit\": {\r\n            return new TypeInfo(0);\r\n        }\r\n        case \"System.Guid\": {\r\n            return new TypeInfo(19);\r\n        }\r\n        case \"System.Byte\": {\r\n            return new TypeInfo(13);\r\n        }\r\n        case \"System.SByte\": {\r\n            return new TypeInfo(14);\r\n        }\r\n        case \"System.Object\": {\r\n            return new TypeInfo(20);\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function $007CRecordType$007C_$007C(t) {\r\n    if (isRecord(t)) {\r\n        return map((field) => [field, name(field), field[1]], getRecordElements(t));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CSetType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpSet`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNullable$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Nullable`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CUnionType$007C_$007C(t) {\r\n    if (isUnion(t)) {\r\n        return map((info) => {\r\n            const caseName = name(info);\r\n            const caseTypes = map((prop) => prop[1], getUnionCaseFields(info));\r\n            return [caseName, info, caseTypes];\r\n        }, getUnionCases(t));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CMapType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpMap`2\") === 0) {\r\n        const genArgs = getGenerics(t);\r\n        return [genArgs[0], genArgs[1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CListType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpList`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function flattenFuncTypes(typeDef) {\r\n    return toArray(delay(() => {\r\n        if (isFunction(typeDef)) {\r\n            const patternInput = getFunctionElements(typeDef);\r\n            const range = patternInput[1];\r\n            const domain = patternInput[0];\r\n            return append(flattenFuncTypes(domain), delay(() => flattenFuncTypes(range)));\r\n        }\r\n        else {\r\n            return singleton(typeDef);\r\n        }\r\n    }));\r\n}\r\n\r\nexport function $007CFuncType$007C_$007C(t) {\r\n    if (isFunction(t)) {\r\n        return flattenFuncTypes(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CArrayType$007C_$007C(t) {\r\n    if (isArray(t)) {\r\n        return getElementType(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007COptionType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Core.FSharpOption`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CTupleType$007C_$007C(t) {\r\n    if (isTuple(t)) {\r\n        return getTupleElements(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CSeqType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.IEnumerable`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CDictionaryType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.Dictionary\") === 0) {\r\n        const genArgs = getGenerics(t);\r\n        return [genArgs[0], genArgs[1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CResizeArrayType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.List\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CHashSetType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.HashSet\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CAsyncType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Control.FSharpAsync`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CPromiseType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Fable.Core.JS.Promise`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nfunction lazyToDelayed(l, unitVar0) {\r\n    return l.Value;\r\n}\r\n\r\nexport function $007CEnumType$007C_$007C(t) {\r\n    if (isEnum(t)) {\r\n        return getEnumUnderlyingType(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nfunction _createTypeInfo(resolvedType) {\r\n    let l, l_3, l_4, l_5, l_6, l_7, l_8, l_9, l_10, l_11, l_12, l_13, l_14, l_15, l_16, l_17;\r\n    const activePatternResult2965 = $007CPrimitiveType$007C_$007C(resolvedType);\r\n    if (activePatternResult2965 != null) {\r\n        const typeInfo = activePatternResult2965;\r\n        return typeInfo;\r\n    }\r\n    else {\r\n        const activePatternResult2964 = $007CFuncType$007C_$007C(resolvedType);\r\n        if (activePatternResult2964 != null) {\r\n            const types = activePatternResult2964;\r\n            return new TypeInfo(34, (l = (new Lazy(() => map((resolvedType_1) => createTypeInfo(resolvedType_1), types))), () => lazyToDelayed(l, void 0)));\r\n        }\r\n        else {\r\n            const activePatternResult2963 = $007CRecordType$007C_$007C(resolvedType);\r\n            if (activePatternResult2963 != null) {\r\n                const fields = activePatternResult2963;\r\n                const l_1 = new Lazy(() => {\r\n                    const fields_1 = toArray(delay(() => collect((matchValue) => {\r\n                        const fieldType = matchValue[2];\r\n                        const fieldName = matchValue[1];\r\n                        const field = matchValue[0];\r\n                        return singleton(new RecordField(fieldName, createTypeInfo(fieldType), field));\r\n                    }, fields)));\r\n                    return [fields_1, resolvedType];\r\n                });\r\n                return new TypeInfo(36, () => lazyToDelayed(l_1, void 0));\r\n            }\r\n            else {\r\n                const activePatternResult2962 = $007CUnionType$007C_$007C(resolvedType);\r\n                if (activePatternResult2962 != null) {\r\n                    const cases = activePatternResult2962;\r\n                    const l_2 = new Lazy(() => [toArray(delay(() => collect((matchValue_1) => {\r\n                        const caseTypes = matchValue_1[2];\r\n                        const caseName = matchValue_1[0];\r\n                        const caseInfo = matchValue_1[1];\r\n                        return singleton(new UnionCase(caseName, map((resolvedType_2) => createTypeInfo(resolvedType_2), caseTypes), caseInfo));\r\n                    }, cases))), resolvedType]);\r\n                    return new TypeInfo(37, () => lazyToDelayed(l_2, void 0));\r\n                }\r\n                else {\r\n                    const activePatternResult2961 = $007CEnumType$007C_$007C(resolvedType);\r\n                    if (activePatternResult2961 != null) {\r\n                        const elemType = activePatternResult2961;\r\n                        return new TypeInfo(35, (l_3 = (new Lazy(() => [createTypeInfo(elemType), resolvedType])), () => lazyToDelayed(l_3, void 0)));\r\n                    }\r\n                    else {\r\n                        const activePatternResult2960 = $007CListType$007C_$007C(resolvedType);\r\n                        if (activePatternResult2960 != null) {\r\n                            const elemType_1 = activePatternResult2960;\r\n                            return new TypeInfo(25, (l_4 = (new Lazy(() => createTypeInfo(elemType_1))), () => lazyToDelayed(l_4, void 0)));\r\n                        }\r\n                        else {\r\n                            const activePatternResult2959 = $007CResizeArrayType$007C_$007C(resolvedType);\r\n                            if (activePatternResult2959 != null) {\r\n                                const elemType_2 = activePatternResult2959;\r\n                                return new TypeInfo(32, (l_5 = (new Lazy(() => createTypeInfo(elemType_2))), () => lazyToDelayed(l_5, void 0)));\r\n                            }\r\n                            else {\r\n                                const activePatternResult2958 = $007CHashSetType$007C_$007C(resolvedType);\r\n                                if (activePatternResult2958 != null) {\r\n                                    const elemType_3 = activePatternResult2958;\r\n                                    return new TypeInfo(33, (l_6 = (new Lazy(() => createTypeInfo(elemType_3))), () => lazyToDelayed(l_6, void 0)));\r\n                                }\r\n                                else {\r\n                                    const activePatternResult2957 = $007CArrayType$007C_$007C(resolvedType);\r\n                                    if (activePatternResult2957 != null) {\r\n                                        const elemType_4 = activePatternResult2957;\r\n                                        return new TypeInfo(27, (l_7 = (new Lazy(() => createTypeInfo(elemType_4))), () => lazyToDelayed(l_7, void 0)));\r\n                                    }\r\n                                    else {\r\n                                        const activePatternResult2956 = $007CTupleType$007C_$007C(resolvedType);\r\n                                        if (activePatternResult2956 != null) {\r\n                                            const types_1 = activePatternResult2956;\r\n                                            return new TypeInfo(29, (l_8 = (new Lazy(() => map((resolvedType_3) => createTypeInfo(resolvedType_3), types_1))), () => lazyToDelayed(l_8, void 0)));\r\n                                        }\r\n                                        else {\r\n                                            const activePatternResult2955 = $007COptionType$007C_$007C(resolvedType);\r\n                                            if (activePatternResult2955 != null) {\r\n                                                const elemType_5 = activePatternResult2955;\r\n                                                return new TypeInfo(24, (l_9 = (new Lazy(() => createTypeInfo(elemType_5))), () => lazyToDelayed(l_9, void 0)));\r\n                                            }\r\n                                            else {\r\n                                                const activePatternResult2954 = $007CNullable$007C_$007C(resolvedType);\r\n                                                if (activePatternResult2954 != null) {\r\n                                                    const elemType_6 = activePatternResult2954;\r\n                                                    return new TypeInfo(24, (l_10 = (new Lazy(() => createTypeInfo(elemType_6))), () => lazyToDelayed(l_10, void 0)));\r\n                                                }\r\n                                                else {\r\n                                                    const activePatternResult2953 = $007CSetType$007C_$007C(resolvedType);\r\n                                                    if (activePatternResult2953 != null) {\r\n                                                        const elemType_7 = activePatternResult2953;\r\n                                                        return new TypeInfo(26, (l_11 = (new Lazy(() => createTypeInfo(elemType_7))), () => lazyToDelayed(l_11, void 0)));\r\n                                                    }\r\n                                                    else {\r\n                                                        const activePatternResult2952 = $007CMapType$007C_$007C(resolvedType);\r\n                                                        if (activePatternResult2952 != null) {\r\n                                                            const keyType = activePatternResult2952[0];\r\n                                                            const valueType = activePatternResult2952[1];\r\n                                                            return new TypeInfo(30, (l_12 = (new Lazy(() => [createTypeInfo(keyType), createTypeInfo(valueType)])), () => lazyToDelayed(l_12, void 0)));\r\n                                                        }\r\n                                                        else {\r\n                                                            const activePatternResult2951 = $007CDictionaryType$007C_$007C(resolvedType);\r\n                                                            if (activePatternResult2951 != null) {\r\n                                                                const keyType_1 = activePatternResult2951[0];\r\n                                                                const valueType_1 = activePatternResult2951[1];\r\n                                                                return new TypeInfo(31, (l_13 = (new Lazy(() => [createTypeInfo(keyType_1), createTypeInfo(valueType_1), valueType_1])), () => lazyToDelayed(l_13, void 0)));\r\n                                                            }\r\n                                                            else {\r\n                                                                const activePatternResult2950 = $007CSeqType$007C_$007C(resolvedType);\r\n                                                                if (activePatternResult2950 != null) {\r\n                                                                    const elemType_8 = activePatternResult2950;\r\n                                                                    return new TypeInfo(28, (l_14 = (new Lazy(() => createTypeInfo(elemType_8))), () => lazyToDelayed(l_14, void 0)));\r\n                                                                }\r\n                                                                else {\r\n                                                                    const activePatternResult2949 = $007CAsyncType$007C_$007C(resolvedType);\r\n                                                                    if (activePatternResult2949 != null) {\r\n                                                                        const elemType_9 = activePatternResult2949;\r\n                                                                        return new TypeInfo(22, (l_15 = (new Lazy(() => createTypeInfo(elemType_9))), () => lazyToDelayed(l_15, void 0)));\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        const activePatternResult2948 = $007CPromiseType$007C_$007C(resolvedType);\r\n                                                                        if (activePatternResult2948 != null) {\r\n                                                                            const elemType_10 = activePatternResult2948;\r\n                                                                            return new TypeInfo(23, (l_16 = (new Lazy(() => createTypeInfo(elemType_10))), () => lazyToDelayed(l_16, void 0)));\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            return new TypeInfo(21, (l_17 = (new Lazy(() => resolvedType)), () => lazyToDelayed(l_17, void 0)));\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst typeInfoCache = new Dictionary([], {\r\n    Equals: (x, y) => equals(x, y),\r\n    GetHashCode: (x) => structuralHash(x),\r\n});\r\n\r\nexport function createTypeInfo(resolvedType) {\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [tryGetValue(typeInfoCache, resolvedType, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const ti = matchValue[1];\r\n        return ti;\r\n    }\r\n    else {\r\n        const ti_1 = _createTypeInfo(resolvedType);\r\n        const notAnonymousRecord = ((!isNullOrEmpty(fullName(resolvedType))) ? (!endsWith(fullName(resolvedType), \"`1[]\")) : false) ? (!endsWith(fullName(resolvedType), \"`2[]\")) : false;\r\n        if (notAnonymousRecord) {\r\n            typeInfoCache.set(resolvedType, ti_1);\r\n            return ti_1;\r\n        }\r\n        else {\r\n            return ti_1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isPrimitive(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 0:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n        case 11:\r\n        case 12:\r\n        case 13:\r\n        case 15:\r\n        case 16:\r\n        case 17:\r\n        case 19:\r\n        case 24: {\r\n            return true;\r\n        }\r\n        default: {\r\n            const otherwise = _arg1;\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function enumUnion(_arg1) {\r\n    if (_arg1.tag === 37) {\r\n        const getCases = _arg1.fields[0];\r\n        return getCases()[0].every((case$) => (case$.CaseTypes.length === 0));\r\n    }\r\n    else {\r\n        const otherwise = _arg1;\r\n        return false;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=TypeInfo.Converter.fs.js.map\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { toString, Record } from \"./Types.js\";\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\nimport { fold as fold_1, fill } from \"./Array.js\";\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const x = head(stack);\n            const rest = tail(stack);\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (isEmpty_1(matchValue)) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (head(matchValue) != null) {\n            const t = head(matchValue);\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const t = head(matchValue);\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (!isEmpty_1(matchValue[0])) {\n            if (!isEmpty_1(matchValue[1])) {\n                if (head(matchValue[1]) != null) {\n                    if (head(matchValue[0]) != null) {\n                        const x1_3 = head(matchValue[0]);\n                        const x2_3 = head(matchValue[1]);\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (!isEmpty_1(matchValue_3[0])) {\n                                            if (head(matchValue_3[0]) != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = tail(matchValue_3[0]);\n                                                x1_4 = head(matchValue_3[0]);\n                                            }\n                                            else if (!isEmpty_1(matchValue_3[1])) {\n                                                if (head(matchValue_3[1]) != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = tail(matchValue_3[1]);\n                                                    x2_4 = head(matchValue_3[1]);\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (!isEmpty_1(matchValue_3[1])) {\n                                            if (head(matchValue_3[1]) != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = tail(matchValue_3[1]);\n                                                x2_4 = head(matchValue_3[1]);\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (!isEmpty_1(matchValue_4[0])) {\n                                    if (head(matchValue_4[0]) != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = tail(matchValue_4[0]);\n                                        x1_5 = head(matchValue_4[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_4[1])) {\n                                        if (head(matchValue_4[1]) != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = tail(matchValue_4[1]);\n                                            x2_5 = head(matchValue_4[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_4[1])) {\n                                    if (head(matchValue_4[1]) != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = tail(matchValue_4[1]);\n                                        x2_5 = head(matchValue_4[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (!isEmpty_1(matchValue_5[0])) {\n                                    if (head(matchValue_5[0]) != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = tail(matchValue_5[0]);\n                                        x1_6 = head(matchValue_5[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_5[1])) {\n                                        if (head(matchValue_5[1]) != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = tail(matchValue_5[1]);\n                                            x2_6 = head(matchValue_5[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_5[1])) {\n                                    if (head(matchValue_5[1]) != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = tail(matchValue_5[1]);\n                                        x2_6 = head(matchValue_5[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = tail(matchValue[0]);\n                                l2_mut = tail(matchValue[1]);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = head(matchValue[1]);\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (!isEmpty_1(matchValue_1[0])) {\n                            if (head(matchValue_1[0]) != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = tail(matchValue_1[0]);\n                                x1 = head(matchValue_1[0]);\n                            }\n                            else if (!isEmpty_1(matchValue_1[1])) {\n                                if (head(matchValue_1[1]) != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = tail(matchValue_1[1]);\n                                    x2_1 = head(matchValue_1[1]);\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (!isEmpty_1(matchValue_1[1])) {\n                            if (head(matchValue_1[1]) != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = tail(matchValue_1[1]);\n                                x2_1 = head(matchValue_1[1]);\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (head(matchValue[0]) != null) {\n                    const x1_1 = head(matchValue[0]);\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (!isEmpty_1(matchValue_2[0])) {\n                        if (head(matchValue_2[0]) != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = tail(matchValue_2[0]);\n                            x1_2 = head(matchValue_2[0]);\n                        }\n                        else if (!isEmpty_1(matchValue_2[1])) {\n                            if (head(matchValue_2[1]) != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = tail(matchValue_2[1]);\n                                x2_2 = head(matchValue_2[1]);\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (!isEmpty_1(matchValue_2[1])) {\n                        if (head(matchValue_2[1]) != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = tail(matchValue_2[1]);\n                            x2_2 = head(matchValue_2[1]);\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = tail(matchValue[0]);\n                    l2_mut = tail(matchValue[1]);\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (isEmpty_1(matchValue[1])) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, empty_1());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = ((j + 1) | 0);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = fill(new Array(n), 0, n, null);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofList(comparer, l) {\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return SetTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return SetTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = ((((res << 1) + structuralHash(x_1)) + 631) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function unionWith(s1, s2) {\n    return fold_3((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                void s1.delete(x);\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","import { Record } from \"../fable-library.3.1.11/Types.js\";\r\nimport { string_type, record_type, int32_type } from \"../fable-library.3.1.11/Reflection.js\";\r\nimport { some } from \"../fable-library.3.1.11/Option.js\";\r\nimport { seq, noneOf, optWhitespace, whitespace, oneOf, string, takeWhile, test, fail, all, any, digit, lookahead, succeed, eof, letters, letter, lazy, index } from \"./Parsimmon.js\";\r\nimport { join } from \"../fable-library.3.1.11/String.js\";\r\nimport { reduce } from \"../fable-library.3.1.11/List.js\";\r\n\r\nexport class TokenPosition extends Record {\r\n    constructor(offset, line, column) {\r\n        super();\r\n        this.offset = (offset | 0);\r\n        this.line = (line | 0);\r\n        this.column = (column | 0);\r\n    }\r\n}\r\n\r\nexport function TokenPosition$reflection() {\r\n    return record_type(\"Fable.Parsimmon.TokenPosition\", [], TokenPosition, () => [[\"offset\", int32_type], [\"line\", int32_type], [\"column\", int32_type]]);\r\n}\r\n\r\nexport class NodeResult$1 extends Record {\r\n    constructor(name, value, start, end) {\r\n        super();\r\n        this.name = name;\r\n        this.value = value;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nexport function NodeResult$1$reflection(gen0) {\r\n    return record_type(\"Fable.Parsimmon.NodeResult`1\", [gen0], NodeResult$1, () => [[\"name\", string_type], [\"value\", gen0], [\"start\", TokenPosition$reflection()], [\"end\", TokenPosition$reflection()]]);\r\n}\r\n\r\nexport function Parsimmon_parseRaw(input, parser) {\r\n    return parser.parse(input);\r\n}\r\n\r\nexport function Parsimmon_parse(input, parser) {\r\n    const result = parser.parse(input);\r\n    if (result.status) {\r\n        return some(result.value);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const Parsimmon_index = index;\r\n\r\nexport function Parsimmon_orTry(otherParser, parser) {\r\n    return parser.or(otherParser);\r\n}\r\n\r\nexport function Parsimmon_times(n, parser) {\r\n    return parser.times(n);\r\n}\r\n\r\nexport function Parsimmon_atLeast(n, parser) {\r\n    return parser.atLeast(n);\r\n}\r\n\r\nexport function Parsimmon_atMost(n, parser) {\r\n    return parser.atMost(n);\r\n}\r\n\r\nexport function Parsimmon_skip(skipped, keep) {\r\n    return keep.skip(skipped);\r\n}\r\n\r\nexport function Parsimmon_many(parser) {\r\n    return parser.many();\r\n}\r\n\r\nexport const Parsimmon_ofLazy = lazy;\r\n\r\nexport function Parsimmon_seperateByAtLeastOne(seperator, parser) {\r\n    return parser.sepBy1(seperator);\r\n}\r\n\r\nexport function Parsimmon_chain(after, before) {\r\n    return before.then(after);\r\n}\r\n\r\nexport function Parsimmon_bind(f, p) {\r\n    return p.chain(f);\r\n}\r\n\r\nexport const Parsimmon_letter = letter;\r\n\r\nexport function Parsimmon_timesBetween(min, max, parser) {\r\n    return parser.times(min, max);\r\n}\r\n\r\nexport const Parsimmon_letters = letters;\r\n\r\nexport const Parsimmon_endOfFile = eof;\r\n\r\nexport function Parsimmon_notFollowedBy(p, before) {\r\n    return before.notFollowedBy(p);\r\n}\r\n\r\nexport const Parsimmon_succeed = succeed;\r\n\r\nexport const Parsimmon_lookahead = lookahead;\r\n\r\nexport const Parsimmon_digit = digit;\r\n\r\nexport const Parsimmon_digits = Parsimmon_many(Parsimmon_digit);\r\n\r\nexport function Parsimmon_fallback(value, parser) {\r\n    return parser.fallback(value);\r\n}\r\n\r\nexport function Parsimmon_seperateBy(content, others) {\r\n    return others.sepBy(content);\r\n}\r\n\r\nexport function Parsimmon_between(left, right, middle) {\r\n    return Parsimmon_skip(right, Parsimmon_chain(middle, left));\r\n}\r\n\r\nexport function Parsimmon_map(f, parser) {\r\n    return parser.map(f);\r\n}\r\n\r\nexport function Parsimmon_tie(parser) {\r\n    return Parsimmon_map((strings) => join(\"\", strings), parser);\r\n}\r\n\r\nexport const Parsimmon_any = any;\r\n\r\nexport function Parsimmon_choose(ps) {\r\n    return reduce((acc, parser) => (acc.or(parser)), ps);\r\n}\r\n\r\nexport const Parsimmon_all = all;\r\n\r\nexport const Parsimmon_fail = fail;\r\n\r\nexport const Parsimmon_satisfy = test;\r\n\r\nexport const Parsimmon_takeWhile = takeWhile;\r\n\r\nexport const Parsimmon_str = string;\r\n\r\nexport const Parsimmon_oneOf = oneOf;\r\n\r\nexport const Parsimmon_whitespace = whitespace;\r\n\r\nexport const Parsimmon_optionalWhitespace = optWhitespace;\r\n\r\nexport function Parsimmon_atLeastOneOrMany(parser) {\r\n    return Parsimmon_atLeast(1, parser);\r\n}\r\n\r\nexport function Parsimmon_stringReturn(input, value) {\r\n    return Parsimmon_map((_arg1) => value, Parsimmon_str(input));\r\n}\r\n\r\nexport const Parsimmon_noneOf = noneOf;\r\n\r\nexport const Parsimmon_seq2 = seq;\r\n\r\nexport function Parsimmon_trim(trimmed, p) {\r\n    return p.trim(trimmed);\r\n}\r\n\r\nexport function Parsimmon_concat(parser) {\r\n    return parser.map((strings) => join(\"\", strings));\r\n}\r\n\r\nexport const Parsimmon_seq3 = seq;\r\n\r\nexport const Parsimmon_seq4 = seq;\r\n\r\nexport const Parsimmon_seq5 = seq;\r\n\r\nexport function Parsimmon_node(description, p) {\r\n    return p.node(description);\r\n}\r\n\r\n//# sourceMappingURL=Parsimmon.fs.js.map\r\n","import { Parsimmon_seperateBy, Parsimmon_ofLazy, Parsimmon_optionalWhitespace, Parsimmon_between, Parsimmon_orTry, Parsimmon_satisfy, Parsimmon_oneOf, Parsimmon_stringReturn, Parsimmon_choose, Parsimmon_seq3, Parsimmon_many, Parsimmon_str, Parsimmon_seq2, Parsimmon_map, Parsimmon_digit, Parsimmon_atLeastOneOrMany, Parsimmon_concat } from \"../Fable.Parsimmon.4.0.0/Parsimmon.fs.js\";\r\nimport { parse } from \"../fable-library.3.1.11/Double.js\";\r\nimport { join } from \"../fable-library.3.1.11/String.js\";\r\nimport { Json } from \"./Json.fs.js\";\r\nimport { map, ofArray } from \"../fable-library.3.1.11/List.js\";\r\nimport { ofList } from \"../fable-library.3.1.11/Map.js\";\r\nimport { Lazy } from \"../fable-library.3.1.11/Util.js\";\r\n\r\nexport const digits = Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit));\r\n\r\nexport const jint = Parsimmon_map((value) => parse(value), digits);\r\n\r\nexport const negJint = Parsimmon_map((tupledArg) => {\r\n    const sign = tupledArg[0];\r\n    const number = tupledArg[1];\r\n    return -number;\r\n}, Parsimmon_seq2(Parsimmon_str(\"-\"), jint));\r\n\r\nexport const jfloat = (() => {\r\n    const digits_1 = Parsimmon_concat(Parsimmon_many(Parsimmon_digit));\r\n    const dot = Parsimmon_str(\".\");\r\n    const decimals = Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit));\r\n    return Parsimmon_map((tupledArg) => {\r\n        let other;\r\n        const digitsLeft = tupledArg[0];\r\n        const dot_1 = tupledArg[1];\r\n        const digitsRight = tupledArg[2];\r\n        return parse(join(\"\", [(digitsLeft === \"\") ? \"0\" : (other = digitsLeft, other), dot_1, digitsRight]));\r\n    }, Parsimmon_seq3(digits_1, dot, decimals));\r\n})();\r\n\r\nexport const negativeJFloat = Parsimmon_map((tupledArg) => {\r\n    const sign = tupledArg[0];\r\n    const number = tupledArg[1];\r\n    return -number;\r\n}, Parsimmon_seq2(Parsimmon_str(\"-\"), jfloat));\r\n\r\nexport const jnumber = Parsimmon_map((arg0) => (new Json(0, arg0)), Parsimmon_choose(ofArray([jfloat, negativeJFloat, jint, negJint])));\r\n\r\nexport const jbool = Parsimmon_choose(ofArray([Parsimmon_stringReturn(\"true\", new Json(2, true)), Parsimmon_stringReturn(\"false\", new Json(2, false))]));\r\n\r\nexport const jnull = Parsimmon_stringReturn(\"null\", new Json(3));\r\n\r\nexport const stringLiteral = (() => {\r\n    const escape = Parsimmon_map((_arg1) => {\r\n        switch (_arg1) {\r\n            case \"b\": {\r\n                return \"\\b\";\r\n            }\r\n            case \"f\": {\r\n                return \"\\f\";\r\n            }\r\n            case \"n\": {\r\n                return \"\\n\";\r\n            }\r\n            case \"r\": {\r\n                return \"\\r\";\r\n            }\r\n            case \"t\": {\r\n                return \"\\t\";\r\n            }\r\n            default: {\r\n                const c = _arg1;\r\n                return c;\r\n            }\r\n        }\r\n    }, Parsimmon_oneOf(\"\\\"\\\\/bfnrt\"));\r\n    const escapedCharSnippet = Parsimmon_map((tuple) => tuple[1], Parsimmon_seq2(Parsimmon_str(\"\\\\\"), escape));\r\n    const normalCharSnippet = Parsimmon_satisfy((c_1) => ((c_1 !== \"\\\"\") ? (c_1 !== \"\\\\\") : false));\r\n    const anyCharSnippet = Parsimmon_concat(Parsimmon_many(Parsimmon_orTry(escapedCharSnippet, normalCharSnippet)));\r\n    return Parsimmon_between(Parsimmon_str(\"\\\"\"), Parsimmon_str(\"\\\"\"), anyCharSnippet);\r\n})();\r\n\r\nexport const jstring = stringLiteral.map((arg0) => (new Json(1, arg0)));\r\n\r\nexport function withWhitespace(p) {\r\n    return Parsimmon_between(Parsimmon_optionalWhitespace, Parsimmon_optionalWhitespace, p);\r\n}\r\n\r\nexport const jvalue = Parsimmon_choose(map((p) => withWhitespace(p), ofArray([jnull, jbool, jnumber, jstring])));\r\n\r\nexport const comma = withWhitespace(Parsimmon_str(\",\"));\r\n\r\nfunction json$004099() {\r\n    return Parsimmon_ofLazy(() => {\r\n        const leftBracket = withWhitespace(Parsimmon_str(\"[\"));\r\n        const rightBracket = withWhitespace(Parsimmon_str(\"]\"));\r\n        const arrayValue = Parsimmon_seperateBy(comma, json$004099$002D1.Value);\r\n        const jarray = Parsimmon_map((arg) => (new Json(4, ofArray(arg))), Parsimmon_between(leftBracket, rightBracket, arrayValue));\r\n        const leftBrace = withWhitespace(Parsimmon_str(\"{\"));\r\n        const rightBrace = withWhitespace(Parsimmon_str(\"}\"));\r\n        const keyValues = Parsimmon_seperateBy(comma, Parsimmon_map((tupledArg) => {\r\n            const key = tupledArg[0];\r\n            const value = tupledArg[2];\r\n            return [key, value];\r\n        }, Parsimmon_seq3(withWhitespace(stringLiteral), withWhitespace(Parsimmon_str(\":\")), withWhitespace(json$004099$002D1.Value))));\r\n        const jobject = Parsimmon_map((arg_2) => (new Json(5, ofList(ofArray(arg_2)))), Parsimmon_between(leftBrace, rightBrace, keyValues));\r\n        return Parsimmon_choose(ofArray([jvalue, jarray, jobject]));\r\n    });\r\n}\r\n\r\nconst json$004099$002D1 = new Lazy(json$004099);\r\n\r\nexport const json = json$004099$002D1.Value;\r\n\r\nexport const jsonParser = withWhitespace(json);\r\n\r\n//# sourceMappingURL=Parser.fs.js.map\r\n","import { Parsimmon_parse } from \"../Fable.Parsimmon.4.0.0/Parsimmon.fs.js\";\r\nimport { jsonParser } from \"./Parser.fs.js\";\r\nimport { join, toText, printf, toFail } from \"../fable-library.3.1.11/String.js\";\r\nimport { head, tail, isEmpty, empty, singleton, concat, ofArray, map as map_1 } from \"../fable-library.3.1.11/List.js\";\r\nimport { tryFind, ofList, toList } from \"../fable-library.3.1.11/Map.js\";\r\nimport { partialApply, isIterable, getEnumerator } from \"../fable-library.3.1.11/Util.js\";\r\nimport { toString } from \"../fable-library.3.1.11/Decimal.js\";\r\nimport { toDecimal } from \"../fable-library.3.1.11/BigInt.js\";\r\nimport { toString as toString_1 } from \"../fable-library.3.1.11/Date.js\";\r\nimport { value as value_5, some } from \"../fable-library.3.1.11/Option.js\";\r\nimport { $007CNativeObject$007C_$007C, $007CNativeArray$007C_$007C, $007CNull$007C_$007C, $007CNativeBool$007C_$007C, $007CNativeNumber$007C_$007C, $007CNativeString$007C_$007C } from \"./TypeCheck.fs.js\";\r\nimport { Json } from \"./Json.fs.js\";\r\nimport { map as map_2 } from \"../fable-library.3.1.11/Array.js\";\r\nimport { map as map_3, delay, toList as toList_1 } from \"../fable-library.3.1.11/Seq.js\";\r\n\r\nexport function InteropUtil_isDateOffset(x) {\r\n    if (x instanceof Date) {\r\n        return \"offset\" in x;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function InteropUtil_isObjectLiteral(x) {\r\n    return (typeof x) === \"object\";\r\n}\r\n\r\nexport function InteropUtil_isBigInt(x) {\r\n    if (((((!(x == null)) ? InteropUtil_isObjectLiteral(x) : false) ? (\"signInt\" in x) : false) ? (\"v\" in x) : false) ? (\"digits\" in (x[\"v\"])) : false) {\r\n        return \"bound\" in (x[\"v\"]);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_tryParse(input) {\r\n    return Parsimmon_parse(input, jsonParser);\r\n}\r\n\r\nexport function SimpleJson_parse(input) {\r\n    const matchValue = SimpleJson_tryParse(input);\r\n    if (matchValue == null) {\r\n        return toFail(printf(\"Could not parse the JSON input: %s\"))(input);\r\n    }\r\n    else {\r\n        const result = matchValue;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_toString(_arg1) {\r\n    if (_arg1.tag === 2) {\r\n        if (_arg1.fields[0]) {\r\n            return \"true\";\r\n        }\r\n        else {\r\n            return \"false\";\r\n        }\r\n    }\r\n    else if (_arg1.tag === 0) {\r\n        const number = _arg1.fields[0];\r\n        return number.toString();\r\n    }\r\n    else if (_arg1.tag === 1) {\r\n        const text = _arg1.fields[0];\r\n        return toText(printf(\"\\\"%s\\\"\"))(text);\r\n    }\r\n    else if (_arg1.tag === 4) {\r\n        const elements = _arg1.fields[0];\r\n        const arg10_1 = join(\",\", map_1((_arg1_1) => SimpleJson_toString(_arg1_1), elements));\r\n        return toText(printf(\"[%s]\"))(arg10_1);\r\n    }\r\n    else if (_arg1.tag === 5) {\r\n        const map = _arg1.fields[0];\r\n        const arg10_3 = join(\",\", map_1((tupledArg) => {\r\n            const key = tupledArg[0];\r\n            const value = tupledArg[1];\r\n            const arg20 = SimpleJson_toString(value);\r\n            return toText(printf(\"\\\"%s\\\":%s\"))(key)(arg20);\r\n        }, toList(map)));\r\n        return toText(printf(\"{%s}\"))(arg10_3);\r\n    }\r\n    else {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport function SimpleJson_toPlainObject(input) {\r\n    switch (input.tag) {\r\n        case 2: {\r\n            const value = input.fields[0];\r\n            return value;\r\n        }\r\n        case 0: {\r\n            const value_1 = input.fields[0];\r\n            return value_1;\r\n        }\r\n        case 1: {\r\n            const value_2 = input.fields[0];\r\n            return value_2;\r\n        }\r\n        case 4: {\r\n            const values = input.fields[0];\r\n            const array = [];\r\n            const enumerator = getEnumerator(values);\r\n            try {\r\n                while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    const value_3 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    void (array.push(SimpleJson_toPlainObject(value_3)));\r\n                }\r\n            }\r\n            finally {\r\n                enumerator.Dispose();\r\n            }\r\n            return array;\r\n        }\r\n        case 5: {\r\n            const map = input.fields[0];\r\n            const jsObject = ({});\r\n            const enumerator_1 = getEnumerator(toList(map));\r\n            try {\r\n                while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    const forLoopVar = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    const value_4 = forLoopVar[1];\r\n                    const key = forLoopVar[0];\r\n                    jsObject[key] = SimpleJson_toPlainObject(value_4);\r\n                }\r\n            }\r\n            finally {\r\n                enumerator_1.Dispose();\r\n            }\r\n            return jsObject;\r\n        }\r\n        default: {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_stringify(value) {\r\n    if (value == null) {\r\n        return JSON.stringify(null);\r\n    }\r\n    else {\r\n        return JSON.stringify(value, (key, jsonValue) => {\r\n            let copyOfStruct;\r\n            if (InteropUtil_isBigInt(jsonValue)) {\r\n                const bigInt = jsonValue;\r\n                return toString(toDecimal(bigInt));\r\n            }\r\n            else if (jsonValue instanceof Date) {\r\n                const dateOffset = jsonValue;\r\n                return toString_1(dateOffset, \"o\");\r\n            }\r\n            else {\r\n                return ((typeof jsonValue) === \"string\") ? jsonValue : (isIterable(jsonValue) ? (Array.isArray(jsonValue) ? jsonValue : (Array.from(jsonValue))) : (InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : (InteropUtil_isDateOffset(jsonValue) ? (copyOfStruct = jsonValue, toString_1(copyOfStruct, \"O\")) : jsonValue)));\r\n            }\r\n        }, some(0));\r\n    }\r\n}\r\n\r\nexport function SimpleJson_parseNative$0027(x) {\r\n    const activePatternResult3050 = $007CNativeString$007C_$007C(x);\r\n    if (activePatternResult3050 != null) {\r\n        const str = activePatternResult3050;\r\n        return new Json(1, str);\r\n    }\r\n    else {\r\n        const activePatternResult3049 = $007CNativeNumber$007C_$007C(x);\r\n        if (activePatternResult3049 != null) {\r\n            const number = activePatternResult3049;\r\n            return new Json(0, number);\r\n        }\r\n        else {\r\n            const activePatternResult3048 = $007CNativeBool$007C_$007C(x);\r\n            if (activePatternResult3048 != null) {\r\n                const value = activePatternResult3048;\r\n                return new Json(2, value);\r\n            }\r\n            else if ($007CNull$007C_$007C(x) != null) {\r\n                return new Json(3);\r\n            }\r\n            else {\r\n                const activePatternResult3046 = $007CNativeArray$007C_$007C(x);\r\n                if (activePatternResult3046 != null) {\r\n                    const arr = activePatternResult3046;\r\n                    return new Json(4, ofArray(map_2((x_1) => SimpleJson_parseNative$0027(x_1), arr)));\r\n                }\r\n                else {\r\n                    const activePatternResult3045 = $007CNativeObject$007C_$007C(x);\r\n                    if (activePatternResult3045 != null) {\r\n                        const object = value_5(activePatternResult3045);\r\n                        return new Json(5, ofList(toList_1(delay(() => map_3((key) => [key, SimpleJson_parseNative$0027(object[key])], Object.keys(object))))));\r\n                    }\r\n                    else {\r\n                        return new Json(3);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_parseNative(input) {\r\n    const parsed = JSON.parse(input);\r\n    return SimpleJson_parseNative$0027(parsed);\r\n}\r\n\r\nexport function SimpleJson_tryParseNative(input) {\r\n    try {\r\n        return SimpleJson_parseNative(input);\r\n    }\r\n    catch (ex) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_fromObjectLiteral(x) {\r\n    try {\r\n        return SimpleJson_parseNative$0027(x);\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapKeys(f, _arg1) {\r\n    switch (_arg1.tag) {\r\n        case 5: {\r\n            const dictionary = _arg1.fields[0];\r\n            return new Json(5, ofList(map_1((tupledArg) => {\r\n                const key = tupledArg[0];\r\n                const value = tupledArg[1];\r\n                return [f(key), SimpleJson_mapKeys(f, value)];\r\n            }, toList(dictionary))));\r\n        }\r\n        case 4: {\r\n            const values = _arg1.fields[0];\r\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapKeys(f, _arg1_1), values));\r\n        }\r\n        default: {\r\n            const otherJsonValue = _arg1;\r\n            return otherJsonValue;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapbyKey(f, _arg1) {\r\n    switch (_arg1.tag) {\r\n        case 5: {\r\n            const dictionary = _arg1.fields[0];\r\n            return new Json(5, ofList(map_1((tupledArg) => {\r\n                const key = tupledArg[0];\r\n                const value = tupledArg[1];\r\n                return [key, f(key, value)];\r\n            }, toList(dictionary))));\r\n        }\r\n        case 4: {\r\n            const values = _arg1.fields[0];\r\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapbyKey(f, _arg1_1), values));\r\n        }\r\n        default: {\r\n            const otherJsonValue = _arg1;\r\n            return otherJsonValue;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapKeysByPath(f, json) {\r\n    const mapKey = (xs, _arg1) => {\r\n        switch (_arg1.tag) {\r\n            case 5: {\r\n                const dictionary = _arg1.fields[0];\r\n                return new Json(5, ofList(map_1((tupledArg) => {\r\n                    const key = tupledArg[0];\r\n                    const value = tupledArg[1];\r\n                    const keyPath = concat([xs, singleton(key)]);\r\n                    const matchValue = f(keyPath);\r\n                    if (matchValue == null) {\r\n                        return [key, mapKey(keyPath, value)];\r\n                    }\r\n                    else {\r\n                        const nextKey = matchValue;\r\n                        return [nextKey, mapKey(keyPath, value)];\r\n                    }\r\n                }, toList(dictionary))));\r\n            }\r\n            case 4: {\r\n                const values = _arg1.fields[0];\r\n                return new Json(4, map_1(partialApply(1, mapKey, [xs]), values));\r\n            }\r\n            default: {\r\n                const otherJsonValue = _arg1;\r\n                return otherJsonValue;\r\n            }\r\n        }\r\n    };\r\n    return mapKey(empty(), json);\r\n}\r\n\r\nexport function SimpleJson_readPath(keys_mut, input_mut) {\r\n    SimpleJson_readPath:\r\n    while (true) {\r\n        const keys = keys_mut, input = input_mut;\r\n        const matchValue = [keys, input];\r\n        let pattern_matching_result, dict, key, dict_1, firstKey, rest;\r\n        if (!isEmpty(matchValue[0])) {\r\n            if (isEmpty(tail(matchValue[0]))) {\r\n                if (matchValue[1].tag === 5) {\r\n                    pattern_matching_result = 1;\r\n                    dict = matchValue[1].fields[0];\r\n                    key = head(matchValue[0]);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 3;\r\n                }\r\n            }\r\n            else if (matchValue[1].tag === 5) {\r\n                pattern_matching_result = 2;\r\n                dict_1 = matchValue[1].fields[0];\r\n                firstKey = head(matchValue[0]);\r\n                rest = tail(matchValue[0]);\r\n            }\r\n            else {\r\n                pattern_matching_result = 3;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 0;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return void 0;\r\n            }\r\n            case 1: {\r\n                return tryFind(key, dict);\r\n            }\r\n            case 2: {\r\n                const matchValue_1 = tryFind(firstKey, dict_1);\r\n                let pattern_matching_result_1, nextDict;\r\n                if (matchValue_1 != null) {\r\n                    if (matchValue_1.tag === 5) {\r\n                        pattern_matching_result_1 = 0;\r\n                        nextDict = matchValue_1.fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        keys_mut = rest;\r\n                        input_mut = (new Json(5, nextDict));\r\n                        continue SimpleJson_readPath;\r\n                    }\r\n                    case 1: {\r\n                        return void 0;\r\n                    }\r\n                }\r\n            }\r\n            case 3: {\r\n                return void 0;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=SimpleJson.fs.js.map\r\n","import { some } from \"../fable-library.3.1.11/Option.js\";\r\n\r\nexport function $007CNativeString$007C_$007C(x) {\r\n    if (typeof (x) === 'string') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeBool$007C_$007C(x) {\r\n    if (typeof (x) === 'boolean') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeNumber$007C_$007C(x) {\r\n    if (typeof (x) === 'number') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeObject$007C_$007C(x) {\r\n    if (typeof (x) === 'object') {\r\n        return some(x);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNull$007C_$007C(x) {\r\n    if (x == null) {\r\n        return some(x);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeArray$007C_$007C(x) {\r\n    if (Array.isArray(x)) {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=TypeCheck.fs.js.map\r\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    let len = 0;\n    for (let i = x.buf.length - 1; i >= 0; i--) {\n        len = ((len + x.buf[i].length) | 0);\n    }\n    return len | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { equals, toIterator, getEnumerator } from \"./Util.js\";\nimport { iterate, map, iterateIndexed, concat } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                void Dictionary__Remove_2B595(this$, item[0]);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    let count = 0;\n    let enumerator = getEnumerator(this$.hashMap.values());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const pairs = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            count = ((count + pairs.length) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return count | 0;\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3, y_5;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            wj = (y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = (v | 0);\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = (v | 0);\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = ((n.digits[i] + (res << 3)) | 0);\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = (bound | 0);\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = (x_1 | 0);\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = (n.digits[i] | 0);\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = (n.digits[i + d] | 0);\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = (x_3 | 0);\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = ((k + 1) | 0);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = (i | 0);\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = ((n - 1) | 0);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = ((n - 1) | 0);\n                        p = ((p - 1) | 0);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return cons([k, ten2k], prior);\n            }\n            else {\n                prior_mut = cons([k, ten2k], prior);\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const prior_1 = tail(_arg1);\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return cons(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\n    if (isEmpty(digits_4)) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", toArray(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { toString, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = (signInt | 0);\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { toString as toString_1 } from \"./Types.js\";\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), 0, bytes.length, false);\n    }\n}\n\n","import { FSharpRef, Union } from \"../fable-library.3.1.11/Types.js\";\r\nimport { getUnionFields, getRecordField, makeRecord, fullName, makeUnion, name as name_2, union_type, string_type } from \"../fable-library.3.1.11/Reflection.js\";\r\nimport { Json, Json$reflection } from \"./Json.fs.js\";\r\nimport { map as map_3, choose, tryFind as tryFind_2, ofArray, toArray, length, tail as tail_1, head, isEmpty, empty, singleton } from \"../fable-library.3.1.11/List.js\";\r\nimport { toArray as toArray_1, map as map_4, collect, tryFind as tryFind_3, forAll, empty as empty_1, singleton as singleton_1, append, delay, toList } from \"../fable-library.3.1.11/Seq.js\";\r\nimport { value as value_87, some, map as map_1 } from \"../fable-library.3.1.11/Option.js\";\r\nimport { toArray as toArray_2, isEmpty as isEmpty_1, ofList as ofList_1, find, count, containsKey, toList as toList_1, tryFind, remove } from \"../fable-library.3.1.11/Map.js\";\r\nimport { join, toText, fromBase64String, printf, toFail, substring, endsWith } from \"../fable-library.3.1.11/String.js\";\r\nimport { parse } from \"../fable-library.3.1.11/Double.js\";\r\nimport { tryParse, parse as parse_1 } from \"../fable-library.3.1.11/Int32.js\";\r\nimport { toString as toString_2 } from \"../fable-library.3.1.11/Decimal.js\";\r\nimport Decimal from \"../fable-library.3.1.11/Decimal.js\";\r\nimport { toString, fromInteger, toNumber, tryParse as tryParse_1, fromInt, parse as parse_2, fromNumber } from \"../fable-library.3.1.11/Long.js\";\r\nimport { SimpleJson_stringify, SimpleJson_parseNative, SimpleJson_parse, SimpleJson_toString, SimpleJson_toPlainObject } from \"./SimpleJson.fs.js\";\r\nimport { toString as toString_1, fromInt32, parse as parse_3 } from \"../fable-library.3.1.11/BigInt.js\";\r\nimport { toString as toString_3, parse as parse_4 } from \"../fable-library.3.1.11/Date.js\";\r\nimport { parse as parse_5 } from \"../fable-library.3.1.11/DateOffset.js\";\r\nimport DateOffset from \"../fable-library.3.1.11/DateOffset.js\";\r\nimport { concat, mapIndexed, equalsWith, zip, map as map_2, tryFind as tryFind_1 } from \"../fable-library.3.1.11/Array.js\";\r\nimport { int32ToString, getEnumerator, structuralHash, safeHash, equals, compare } from \"../fable-library.3.1.11/Util.js\";\r\nimport { parse as parse_6 } from \"../fable-library.3.1.11/Guid.js\";\r\nimport { toInt64, getBytesInt32 } from \"../fable-library.3.1.11/BitConverter.js\";\r\nimport { ofList } from \"../fable-library.3.1.11/Set.js\";\r\nimport { TypeInfo } from \"./TypeInfo.fs.js\";\r\nimport { Dictionary } from \"../fable-library.3.1.11/MutableMap.js\";\r\nimport { addToSet, addToDict } from \"../fable-library.3.1.11/MapUtil.js\";\r\nimport { HashSet } from \"../fable-library.3.1.11/MutableSet.js\";\r\nimport { enumUnion, isPrimitive } from \"./TypeInfo.Converter.fs.js\";\r\nimport quote from \"./quote.js\";\r\n\r\nexport const Convert_insideBrowser = (new Function(\"try {return this===window;}catch(e){ return false;}\"))();\r\n\r\nfunction Convert_isDefined(value) {\r\n    return !((value === undefined));\r\n}\r\n\r\nexport function Convert_usingFable3() {\r\n    return true;\r\n}\r\n\r\nexport const Convert_isUsingFable3 = Convert_usingFable3();\r\n\r\nexport class Convert_InternalMap extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"MapEmpty\", \"MapOne\", \"MapNode\"];\r\n    }\r\n}\r\n\r\nexport function Convert_InternalMap$reflection() {\r\n    return union_type(\"Fable.SimpleJson.Convert.InternalMap\", [], Convert_InternalMap, () => [[], [[\"Item1\", string_type], [\"Item2\", Json$reflection()]], [[\"Item1\", string_type], [\"Item2\", Json$reflection()], [\"Item3\", Convert_InternalMap$reflection()], [\"Item4\", Convert_InternalMap$reflection()]]]);\r\n}\r\n\r\nexport function Convert_flattenMap(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            const value = _arg1.fields[1];\r\n            const key = _arg1.fields[0];\r\n            return singleton([key, value]);\r\n        }\r\n        case 2: {\r\n            const value_1 = _arg1.fields[1];\r\n            const right = _arg1.fields[3];\r\n            const left = _arg1.fields[2];\r\n            const key_1 = _arg1.fields[0];\r\n            return toList(delay(() => append(Convert_flattenMap(left), delay(() => append(Convert_flattenMap(right), delay(() => singleton_1([key_1, value_1])))))));\r\n        }\r\n        default: {\r\n            return empty();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CKeyValue$007C_$007C(key, map) {\r\n    return map_1((value) => [key, value, remove(key, map)], tryFind(key, map));\r\n}\r\n\r\nexport function Convert_$007CNonArray$007C_$007C(_arg1) {\r\n    if (_arg1.tag === 4) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        const json = _arg1;\r\n        return json;\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapEmpty$007C_$007C(json) {\r\n    let pattern_matching_result;\r\n    if (json.tag === 1) {\r\n        if (json.fields[0] === \"MapEmpty\") {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return json;\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapKey$007C_$007C(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 0: {\r\n            const number = _arg1.fields[0];\r\n            return number.toString();\r\n        }\r\n        case 1: {\r\n            const key = _arg1.fields[0];\r\n            return key;\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapOne$007C_$007C(_arg1) {\r\n    let pattern_matching_result, key, value;\r\n    if (_arg1.tag === 4) {\r\n        if (!isEmpty(_arg1.fields[0])) {\r\n            if (head(_arg1.fields[0]).tag === 1) {\r\n                if (head(_arg1.fields[0]).fields[0] === \"MapOne\") {\r\n                    if (!isEmpty(tail_1(_arg1.fields[0]))) {\r\n                        const activePatternResult3123 = Convert_$007CMapKey$007C_$007C(head(tail_1(_arg1.fields[0])));\r\n                        if (activePatternResult3123 != null) {\r\n                            if (!isEmpty(tail_1(tail_1(_arg1.fields[0])))) {\r\n                                if (isEmpty(tail_1(tail_1(tail_1(_arg1.fields[0]))))) {\r\n                                    pattern_matching_result = 0;\r\n                                    key = activePatternResult3123;\r\n                                    value = head(tail_1(tail_1(_arg1.fields[0])));\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [key, value];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapNode$007C_$007C(_arg1) {\r\n    let pattern_matching_result, key, left, right, value;\r\n    if (_arg1.tag === 4) {\r\n        if (!isEmpty(_arg1.fields[0])) {\r\n            if (head(_arg1.fields[0]).tag === 1) {\r\n                if (head(_arg1.fields[0]).fields[0] === \"MapNode\") {\r\n                    if (!isEmpty(tail_1(_arg1.fields[0]))) {\r\n                        const activePatternResult3125 = Convert_$007CMapKey$007C_$007C(head(tail_1(_arg1.fields[0])));\r\n                        if (activePatternResult3125 != null) {\r\n                            if (!isEmpty(tail_1(tail_1(_arg1.fields[0])))) {\r\n                                if (!isEmpty(tail_1(tail_1(tail_1(_arg1.fields[0]))))) {\r\n                                    if (!isEmpty(tail_1(tail_1(tail_1(tail_1(_arg1.fields[0])))))) {\r\n                                        if (!isEmpty(tail_1(tail_1(tail_1(tail_1(tail_1(_arg1.fields[0]))))))) {\r\n                                            if (head(tail_1(tail_1(tail_1(tail_1(tail_1(_arg1.fields[0])))))).tag === 0) {\r\n                                                if (isEmpty(tail_1(tail_1(tail_1(tail_1(tail_1(tail_1(_arg1.fields[0])))))))) {\r\n                                                    pattern_matching_result = 0;\r\n                                                    key = activePatternResult3125;\r\n                                                    left = head(tail_1(tail_1(tail_1(_arg1.fields[0]))));\r\n                                                    right = head(tail_1(tail_1(tail_1(tail_1(_arg1.fields[0])))));\r\n                                                    value = head(tail_1(tail_1(_arg1.fields[0])));\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 1;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [key, value, left, right];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_generateMap(json) {\r\n    if (Convert_$007CMapEmpty$007C_$007C(json) != null) {\r\n        return new Convert_InternalMap(0);\r\n    }\r\n    else {\r\n        const activePatternResult3128 = Convert_$007CMapOne$007C_$007C(json);\r\n        if (activePatternResult3128 != null) {\r\n            const key = activePatternResult3128[0];\r\n            const value = activePatternResult3128[1];\r\n            return new Convert_InternalMap(1, key, value);\r\n        }\r\n        else {\r\n            const activePatternResult3127 = Convert_$007CMapNode$007C_$007C(json);\r\n            if (activePatternResult3127 != null) {\r\n                const key_1 = activePatternResult3127[0];\r\n                const left = activePatternResult3127[2];\r\n                const right = activePatternResult3127[3];\r\n                const value_1 = activePatternResult3127[1];\r\n                const matchValue = [Convert_generateMap(left), Convert_generateMap(right)];\r\n                let pattern_matching_result, leftMap, rightMap;\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        pattern_matching_result = 0;\r\n                        leftMap = matchValue[0];\r\n                        rightMap = matchValue[1];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                switch (pattern_matching_result) {\r\n                    case 0: {\r\n                        return new Convert_InternalMap(2, key_1, value_1, leftMap, rightMap);\r\n                    }\r\n                    case 1: {\r\n                        return void 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_flatteFable3Map(tree) {\r\n    return toList(delay(() => {\r\n        let matchValue, key, value;\r\n        return append((matchValue = [tryFind(\"k\", tree), tryFind(\"v\", tree)], (matchValue[0] != null) ? ((matchValue[0].tag === 1) ? ((matchValue[1] != null) ? (key = matchValue[0].fields[0], (value = matchValue[1], singleton_1([key, value]))) : (void 0, empty_1())) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\r\n            let matchValue_1, left;\r\n            return append((matchValue_1 = tryFind(\"left\", tree), (matchValue_1 != null) ? ((matchValue_1.tag === 5) ? (left = matchValue_1.fields[0], Convert_flatteFable3Map(left)) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\r\n                const matchValue_2 = tryFind(\"right\", tree);\r\n                let pattern_matching_result, right;\r\n                if (matchValue_2 != null) {\r\n                    if (matchValue_2.tag === 5) {\r\n                        pattern_matching_result = 0;\r\n                        right = matchValue_2.fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                switch (pattern_matching_result) {\r\n                    case 0: {\r\n                        return Convert_flatteFable3Map(right);\r\n                    }\r\n                    case 1: {\r\n                        return empty_1();\r\n                    }\r\n                }\r\n            }));\r\n        }));\r\n    }));\r\n}\r\n\r\nexport function Convert_flattenFable3Lists(linkedList) {\r\n    return toList(delay(() => {\r\n        let matchValue, value;\r\n        return append((matchValue = tryFind(\"head\", linkedList), (matchValue == null) ? (void 0, empty_1()) : (value = matchValue, singleton_1(value))), delay(() => {\r\n            const matchValue_1 = tryFind(\"tail\", linkedList);\r\n            let pattern_matching_result, tail;\r\n            if (matchValue_1 != null) {\r\n                if (matchValue_1.tag === 5) {\r\n                    pattern_matching_result = 0;\r\n                    tail = matchValue_1.fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    return Convert_flattenFable3Lists(tail);\r\n                }\r\n                case 1: {\r\n                    return empty_1();\r\n                }\r\n            }\r\n        }));\r\n    }));\r\n}\r\n\r\nexport function Convert_arrayLike(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 27: {\r\n            return true;\r\n        }\r\n        case 25: {\r\n            return true;\r\n        }\r\n        case 28: {\r\n            return true;\r\n        }\r\n        case 29: {\r\n            return true;\r\n        }\r\n        case 26: {\r\n            return true;\r\n        }\r\n        case 32: {\r\n            return true;\r\n        }\r\n        case 33: {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_isRecord(_arg1) {\r\n    if (_arg1.tag === 36) {\r\n        const recordType = _arg1.fields[0];\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_unionOfRecords(_arg1) {\r\n    if (_arg1.tag === 37) {\r\n        const getCases = _arg1.fields[0];\r\n        const patternInput = getCases();\r\n        const unionType = patternInput[1];\r\n        const unionCases = patternInput[0];\r\n        return forAll((case$) => {\r\n            if (case$.CaseTypes.length === 1) {\r\n                return Convert_isRecord(case$.CaseTypes[0]);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }, unionCases);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_optional(_arg1) {\r\n    if (_arg1.tag === 24) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_isQuoted(input) {\r\n    if (input.indexOf(\"\\\"\") === 0) {\r\n        return endsWith(input, \"\\\"\");\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_betweenQuotes(input) {\r\n    return (\"\\\"\" + input) + \"\\\"\";\r\n}\r\n\r\nexport function Convert_removeQuotes(input) {\r\n    return substring(input, 1, input.length - 2);\r\n}\r\n\r\nexport function Convert_fromJsonAs(input_mut, typeInfo_mut) {\r\n    let foundCase, foundCase_2, testExpr, otherwise, otherwise_2, tree_2, comparer_2, tree, comparer, getTypes_1, caseName_3, optionalTypeDelayed, jsonValue, optionalTypeDelayed_1, jsonValue_1, optionalTypeDelayed_2, jsonValue_2, optionalTypeDelayed_3, jsonValue_3, optionalTypeDelayed_4, jsonValue_4, value_3, value;\r\n    Convert_fromJsonAs:\r\n    while (true) {\r\n        const input = input_mut, typeInfo = typeInfo_mut;\r\n        const matchValue = [input, typeInfo];\r\n        let pattern_matching_result, value_1;\r\n        if (matchValue[0].tag === 0) {\r\n            if (matchValue[1].tag === 9) {\r\n                pattern_matching_result = 0;\r\n                value_1 = matchValue[0].fields[0];\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[0].tag === 1) {\r\n            if (matchValue[1].tag === 9) {\r\n                if (value = matchValue[0].fields[0], value.toLocaleLowerCase() === \"nan\") {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 2;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 2;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return value_1;\r\n            }\r\n            case 1: {\r\n                return NaN;\r\n            }\r\n            case 2: {\r\n                let pattern_matching_result_1, value_4, value_5;\r\n                if (matchValue[0].tag === 1) {\r\n                    if (matchValue[1].tag === 9) {\r\n                        pattern_matching_result_1 = 0;\r\n                        value_4 = matchValue[0].fields[0];\r\n                    }\r\n                    else if (matchValue[1].tag === 8) {\r\n                        if (value_3 = matchValue[0].fields[0], value_3.toLocaleLowerCase() === \"nan\") {\r\n                            pattern_matching_result_1 = 2;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 3;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 3;\r\n                    }\r\n                }\r\n                else if (matchValue[0].tag === 0) {\r\n                    if (matchValue[1].tag === 8) {\r\n                        pattern_matching_result_1 = 1;\r\n                        value_5 = matchValue[0].fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 3;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 3;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        return parse(value_4);\r\n                    }\r\n                    case 1: {\r\n                        return value_5;\r\n                    }\r\n                    case 2: {\r\n                        return NaN;\r\n                    }\r\n                    case 3: {\r\n                        let pattern_matching_result_2, value_7, value_8, value_9, value_10, value_11, value_12, value_13, value_14, value_15, value_16, value_17, value_18, value_19, value_20, value_21, value_22, value_23, value_24, value_25, getlElemType, value_26, getElemType, value_27, getElemType_1, value_28, genericJson, value_29, value_30, value_31, value_32, value_33, value_34, value_35, value_36, value_37, value_38, getTypes, values, jsonValue_5, optionalTypeDelayed_5;\r\n                        if (matchValue[0].tag === 1) {\r\n                            if (matchValue[1].tag === 8) {\r\n                                pattern_matching_result_2 = 0;\r\n                                value_7 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 6) {\r\n                                pattern_matching_result_2 = 3;\r\n                                value_10 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 1) {\r\n                                pattern_matching_result_2 = 4;\r\n                                value_11 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 2) {\r\n                                pattern_matching_result_2 = 6;\r\n                                value_13 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 10) {\r\n                                pattern_matching_result_2 = 8;\r\n                                value_15 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 11) {\r\n                                pattern_matching_result_2 = 10;\r\n                                value_17 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 3) {\r\n                                pattern_matching_result_2 = 13;\r\n                                value_20 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 4) {\r\n                                pattern_matching_result_2 = 15;\r\n                                value_22 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 5) {\r\n                                pattern_matching_result_2 = 17;\r\n                                value_24 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 35) {\r\n                                pattern_matching_result_2 = 19;\r\n                                getlElemType = matchValue[1].fields[0];\r\n                                value_26 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 27) {\r\n                                pattern_matching_result_2 = 21;\r\n                                getElemType_1 = matchValue[1].fields[0];\r\n                                value_28 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 20) {\r\n                                pattern_matching_result_2 = 24;\r\n                                genericJson = matchValue[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 12) {\r\n                                pattern_matching_result_2 = 25;\r\n                                value_29 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 13) {\r\n                                pattern_matching_result_2 = 26;\r\n                                value_30 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 14) {\r\n                                pattern_matching_result_2 = 29;\r\n                                value_33 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 17) {\r\n                                pattern_matching_result_2 = 30;\r\n                                value_34 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 15) {\r\n                                pattern_matching_result_2 = 32;\r\n                                value_36 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 16) {\r\n                                pattern_matching_result_2 = 33;\r\n                                value_37 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                if (optionalTypeDelayed = matchValue[1].fields[0], (jsonValue = matchValue[0], !equals(jsonValue, new Json(3)))) {\r\n                                    pattern_matching_result_2 = 37;\r\n                                    jsonValue_5 = matchValue[0];\r\n                                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 38;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 0) {\r\n                            if (matchValue[1].tag === 6) {\r\n                                pattern_matching_result_2 = 1;\r\n                                value_8 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 1) {\r\n                                pattern_matching_result_2 = 5;\r\n                                value_12 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 2) {\r\n                                pattern_matching_result_2 = 7;\r\n                                value_14 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 10) {\r\n                                pattern_matching_result_2 = 9;\r\n                                value_16 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 11) {\r\n                                pattern_matching_result_2 = 11;\r\n                                value_18 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 3) {\r\n                                pattern_matching_result_2 = 12;\r\n                                value_19 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 4) {\r\n                                pattern_matching_result_2 = 14;\r\n                                value_21 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 5) {\r\n                                pattern_matching_result_2 = 16;\r\n                                value_23 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 18) {\r\n                                pattern_matching_result_2 = 18;\r\n                                value_25 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 35) {\r\n                                pattern_matching_result_2 = 20;\r\n                                getElemType = matchValue[1].fields[0];\r\n                                value_27 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 20) {\r\n                                pattern_matching_result_2 = 24;\r\n                                genericJson = matchValue[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 13) {\r\n                                pattern_matching_result_2 = 27;\r\n                                value_31 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 14) {\r\n                                pattern_matching_result_2 = 28;\r\n                                value_32 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 17) {\r\n                                pattern_matching_result_2 = 31;\r\n                                value_35 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 16) {\r\n                                pattern_matching_result_2 = 34;\r\n                                value_38 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                if (optionalTypeDelayed_1 = matchValue[1].fields[0], (jsonValue_1 = matchValue[0], !equals(jsonValue_1, new Json(3)))) {\r\n                                    pattern_matching_result_2 = 37;\r\n                                    jsonValue_5 = matchValue[0];\r\n                                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 38;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 2) {\r\n                            if (matchValue[1].tag === 7) {\r\n                                pattern_matching_result_2 = 2;\r\n                                value_9 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 20) {\r\n                                pattern_matching_result_2 = 24;\r\n                                genericJson = matchValue[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                if (optionalTypeDelayed_2 = matchValue[1].fields[0], (jsonValue_2 = matchValue[0], !equals(jsonValue_2, new Json(3)))) {\r\n                                    pattern_matching_result_2 = 37;\r\n                                    jsonValue_5 = matchValue[0];\r\n                                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 38;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 3) {\r\n                            if (matchValue[1].tag === 2) {\r\n                                pattern_matching_result_2 = 22;\r\n                            }\r\n                            else if (matchValue[1].tag === 0) {\r\n                                pattern_matching_result_2 = 23;\r\n                            }\r\n                            else if (matchValue[1].tag === 20) {\r\n                                pattern_matching_result_2 = 24;\r\n                                genericJson = matchValue[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                pattern_matching_result_2 = 36;\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 5) {\r\n                            if (matchValue[1].tag === 20) {\r\n                                pattern_matching_result_2 = 24;\r\n                                genericJson = matchValue[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 37) {\r\n                                pattern_matching_result_2 = 35;\r\n                                getTypes = matchValue[1].fields[0];\r\n                                values = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                if (optionalTypeDelayed_3 = matchValue[1].fields[0], (jsonValue_3 = matchValue[0], !equals(jsonValue_3, new Json(3)))) {\r\n                                    pattern_matching_result_2 = 37;\r\n                                    jsonValue_5 = matchValue[0];\r\n                                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 38;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else if (matchValue[1].tag === 20) {\r\n                            pattern_matching_result_2 = 24;\r\n                            genericJson = matchValue[0];\r\n                        }\r\n                        else if (matchValue[1].tag === 24) {\r\n                            if (optionalTypeDelayed_4 = matchValue[1].fields[0], (jsonValue_4 = matchValue[0], !equals(jsonValue_4, new Json(3)))) {\r\n                                pattern_matching_result_2 = 37;\r\n                                jsonValue_5 = matchValue[0];\r\n                                optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 38;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_2 = 38;\r\n                        }\r\n                        switch (pattern_matching_result_2) {\r\n                            case 0: {\r\n                                return parse(value_7);\r\n                            }\r\n                            case 1: {\r\n                                return Math.floor(value_8);\r\n                            }\r\n                            case 2: {\r\n                                return value_9;\r\n                            }\r\n                            case 3: {\r\n                                return parse_1(value_10, 511, false, 32);\r\n                            }\r\n                            case 4: {\r\n                                return value_11;\r\n                            }\r\n                            case 5: {\r\n                                return String.fromCharCode(value_12);\r\n                            }\r\n                            case 6: {\r\n                                return value_13;\r\n                            }\r\n                            case 7: {\r\n                                return value_14.toString();\r\n                            }\r\n                            case 8: {\r\n                                return new Decimal(value_15);\r\n                            }\r\n                            case 9: {\r\n                                return new Decimal(value_16);\r\n                            }\r\n                            case 10: {\r\n                                return parse_1(value_17, 511, false, 16);\r\n                            }\r\n                            case 11: {\r\n                                return (value_18 + 0x8000 & 0xFFFF) - 0x8000;\r\n                            }\r\n                            case 12: {\r\n                                return value_19 & 0xFFFF;\r\n                            }\r\n                            case 13: {\r\n                                return parse_1(value_20, 511, true, 16);\r\n                            }\r\n                            case 14: {\r\n                                return value_21 >>> 0;\r\n                            }\r\n                            case 15: {\r\n                                return parse_1(value_22, 511, true, 32);\r\n                            }\r\n                            case 16: {\r\n                                return fromNumber(value_23, true);\r\n                            }\r\n                            case 17: {\r\n                                return parse_2(value_24, 511, true, 64);\r\n                            }\r\n                            case 18: {\r\n                                return Math.floor(value_25);\r\n                            }\r\n                            case 19: {\r\n                                const patternInput = getlElemType();\r\n                                const underlyingType = patternInput[0];\r\n                                const originalType = patternInput[1];\r\n                                switch (underlyingType.tag) {\r\n                                    case 6: {\r\n                                        let matchValue_1;\r\n                                        let outArg = 0;\r\n                                        matchValue_1 = [tryParse(value_26, 511, false, 32, new FSharpRef(() => outArg, (v) => {\r\n                                            outArg = v;\r\n                                        })), outArg];\r\n                                        if (matchValue_1[0]) {\r\n                                            const parsedNumber = matchValue_1[1] | 0;\r\n                                            return parsedNumber;\r\n                                        }\r\n                                        else {\r\n                                            const arg20 = name_2(originalType);\r\n                                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_26)(arg20);\r\n                                        }\r\n                                    }\r\n                                    case 12: {\r\n                                        let matchValue_2;\r\n                                        let outArg_1 = fromInt(0);\r\n                                        matchValue_2 = [tryParse_1(value_26, 511, false, 64, new FSharpRef(() => outArg_1, (v_1) => {\r\n                                            outArg_1 = v_1;\r\n                                        })), outArg_1];\r\n                                        if (matchValue_2[0]) {\r\n                                            const parsedNumber_1 = matchValue_2[1];\r\n                                            return parsedNumber_1;\r\n                                        }\r\n                                        else {\r\n                                            const arg20_1 = name_2(originalType);\r\n                                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_26)(arg20_1);\r\n                                        }\r\n                                    }\r\n                                    default: {\r\n                                        const other = underlyingType;\r\n                                        const arg20_2 = name_2(originalType);\r\n                                        return toFail(printf(\"The value \\u0027%s\\u0027 cannot be converted to enum of type \\u0027%s\\u0027\"))(value_26)(arg20_2);\r\n                                    }\r\n                                }\r\n                            }\r\n                            case 20: {\r\n                                const originalType_1 = getElemType()[1];\r\n                                return value_27;\r\n                            }\r\n                            case 21: {\r\n                                const elemType = getElemType_1();\r\n                                if (elemType.tag === 13) {\r\n                                    if ((typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) ? true : Convert_insideBrowser) {\r\n                                        return fromBase64String(value_28);\r\n                                    }\r\n                                    else {\r\n                                        return Array.prototype.slice.call(Buffer.from(value_28, 'base64'));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const otherType = elemType;\r\n                                    return toFail(printf(\"Cannot convert arbitrary string \\u0027%s\\u0027 to %A\"))(value_28)(otherType);\r\n                                }\r\n                            }\r\n                            case 22: {\r\n                                return null;\r\n                            }\r\n                            case 23: {\r\n                                return void 0;\r\n                            }\r\n                            case 24: {\r\n                                return SimpleJson_toPlainObject(genericJson);\r\n                            }\r\n                            case 25: {\r\n                                return parse_2(value_29, 511, false, 64);\r\n                            }\r\n                            case 26: {\r\n                                return parse_1(value_30, 511, true, 8);\r\n                            }\r\n                            case 27: {\r\n                                return value_31 & 0xFF;\r\n                            }\r\n                            case 28: {\r\n                                return (value_32 + 0x80 & 0xFF) - 0x80;\r\n                            }\r\n                            case 29: {\r\n                                return parse_1(value_33, 511, false, 8);\r\n                            }\r\n                            case 30: {\r\n                                return parse_3(value_34);\r\n                            }\r\n                            case 31: {\r\n                                return fromInt32(Math.floor(value_35));\r\n                            }\r\n                            case 32: {\r\n                                return parse_4(value_36);\r\n                            }\r\n                            case 33: {\r\n                                return parse_5(value_37);\r\n                            }\r\n                            case 34: {\r\n                                const seconds = fromNumber(Math.floor(value_38), false);\r\n                                return DateOffset(toNumber(seconds) * 1000, 0);\r\n                            }\r\n                            case 35: {\r\n                                const patternInput_2 = getTypes();\r\n                                const unionType = patternInput_2[1];\r\n                                const cases = patternInput_2[0];\r\n                                const matchValue_3 = toList_1(values);\r\n                                let pattern_matching_result_3, caseName, values_1, caseName_1, json;\r\n                                if (!isEmpty(matchValue_3)) {\r\n                                    if (head(matchValue_3)[1].tag === 4) {\r\n                                        if (isEmpty(tail_1(matchValue_3))) {\r\n                                            pattern_matching_result_3 = 0;\r\n                                            caseName = head(matchValue_3)[0];\r\n                                            values_1 = head(matchValue_3)[1].fields[0];\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_3 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const activePatternResult3157 = Convert_$007CNonArray$007C_$007C(head(matchValue_3)[1]);\r\n                                        if (activePatternResult3157 != null) {\r\n                                            if (isEmpty(tail_1(matchValue_3))) {\r\n                                                pattern_matching_result_3 = 1;\r\n                                                caseName_1 = head(matchValue_3)[0];\r\n                                                json = activePatternResult3157;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_3 = 2;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_3 = 2;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_3) {\r\n                                    case 0: {\r\n                                        const _arg1 = tryFind_1((case$) => (case$.CaseName === caseName), cases);\r\n                                        if (_arg1 != null) {\r\n                                            if (foundCase = _arg1, (foundCase.CaseTypes.length === 1) ? Convert_arrayLike(foundCase.CaseTypes[0]) : false) {\r\n                                                const foundCase_1 = _arg1;\r\n                                                const deserialized = Convert_fromJsonAs(new Json(4, values_1), foundCase_1.CaseTypes[0]);\r\n                                                return makeUnion(foundCase_1.Info, [deserialized]);\r\n                                            }\r\n                                            else {\r\n                                                let pattern_matching_result_4, foundCase_3;\r\n                                                if (_arg1 != null) {\r\n                                                    if (foundCase_2 = _arg1, (foundCase_2.CaseTypes.length === 1) ? Convert_optional(foundCase_2.CaseTypes[0]) : false) {\r\n                                                        pattern_matching_result_4 = 0;\r\n                                                        foundCase_3 = _arg1;\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_4 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_4 = 1;\r\n                                                }\r\n                                                switch (pattern_matching_result_4) {\r\n                                                    case 0: {\r\n                                                        const parsedOptional = Convert_fromJsonAs(new Json(4, values_1), foundCase_3.CaseTypes[0]);\r\n                                                        return makeUnion(foundCase_3.Info, [parsedOptional]);\r\n                                                    }\r\n                                                    case 1: {\r\n                                                        if (_arg1 != null) {\r\n                                                            const foundCase_4 = _arg1;\r\n                                                            if (((foundCase_4.CaseTypes.length === 1) ? (!Convert_arrayLike(foundCase_4.CaseTypes[0])) : false) ? (foundCase_4.CaseTypes.length !== length(values_1)) : false) {\r\n                                                                const arg30_1 = length(values_1) | 0;\r\n                                                                const arg20_5 = foundCase_4.CaseTypes.length | 0;\r\n                                                                toFail(printf(\"Expected case \\u0027%s\\u0027 to have %d argument types but the JSON data only contained %d values\"))(foundCase_4.CaseName)(arg20_5)(arg30_1);\r\n                                                            }\r\n                                                            const parsedValues = map_2((tupledArg) => {\r\n                                                                const valueType = tupledArg[0];\r\n                                                                const value_41 = tupledArg[1];\r\n                                                                return Convert_fromJsonAs(value_41, valueType);\r\n                                                            }, zip(foundCase_4.CaseTypes, toArray(values_1)));\r\n                                                            return makeUnion(foundCase_4.Info, parsedValues);\r\n                                                        }\r\n                                                        else {\r\n                                                            throw (new Error(\"Match failure\"));\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            const caseNames = map_2((case$_1) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_1.CaseName), cases);\r\n                                            const expectedCases = join(\", \", caseNames);\r\n                                            const arg20_4 = name_2(unionType);\r\n                                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName)(arg20_4)(expectedCases);\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        const _arg2 = tryFind_1((case$_2) => (case$_2.CaseName === caseName_1), cases);\r\n                                        let pattern_matching_result_5, caseInfo, caseName_2, caseType;\r\n                                        if (_arg2 != null) {\r\n                                            if (testExpr = _arg2.CaseTypes, (!equalsWith((x, y) => compare(x, y), testExpr, null)) ? (testExpr.length === 1) : false) {\r\n                                                pattern_matching_result_5 = 0;\r\n                                                caseInfo = _arg2.Info;\r\n                                                caseName_2 = _arg2.CaseName;\r\n                                                caseType = _arg2.CaseTypes[0];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_5 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_5 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_5) {\r\n                                            case 0: {\r\n                                                return makeUnion(caseInfo, [((input_1) => ((typeInfo_1) => Convert_fromJsonAs(input_1, typeInfo_1)))(json)(caseType)]);\r\n                                            }\r\n                                            case 1: {\r\n                                                const caseNames_1 = map_2((case$_3) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_3.CaseName), cases);\r\n                                                const expectedCases_1 = join(\", \", caseNames_1);\r\n                                                const arg20_7 = name_2(unionType);\r\n                                                return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_1)(arg20_7)(expectedCases_1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        if (otherwise = matchValue_3, (containsKey(\"tag\", values) ? containsKey(\"fields\", values) : false) ? (count(values) === 2) : false) {\r\n                                            const otherwise_1 = matchValue_3;\r\n                                            const matchValue_4 = [tryFind(\"tag\", values), tryFind(\"fields\", values)];\r\n                                            let pattern_matching_result_6, caseIndex, fieldValues;\r\n                                            if (matchValue_4[0] != null) {\r\n                                                if (matchValue_4[0].tag === 0) {\r\n                                                    if (matchValue_4[1] != null) {\r\n                                                        if (matchValue_4[1].tag === 4) {\r\n                                                            pattern_matching_result_6 = 0;\r\n                                                            caseIndex = matchValue_4[0].fields[0];\r\n                                                            fieldValues = matchValue_4[1].fields[0];\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_6 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_6 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_6 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_6 = 1;\r\n                                            }\r\n                                            switch (pattern_matching_result_6) {\r\n                                                case 0: {\r\n                                                    const foundCase_5 = cases[~(~caseIndex)];\r\n                                                    const values_2 = mapIndexed((index, value_44) => Convert_fromJsonAs(value_44, foundCase_5.CaseTypes[index]), toArray(fieldValues));\r\n                                                    return makeUnion(foundCase_5.Info, values_2);\r\n                                                }\r\n                                                case 1: {\r\n                                                    const arg20_8 = fullName(unionType);\r\n                                                    const arg10_10 = SimpleJson_toString(new Json(5, values));\r\n                                                    return toFail(printf(\"Could not deserialize JSON(%s) into type %s\"))(arg10_10)(arg20_8);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if (otherwise_2 = matchValue_3, Convert_unionOfRecords(typeInfo)) {\r\n                                            const otherwise_3 = matchValue_3;\r\n                                            const discriminators = ofArray([\"__typename\", \"$typename\", \"$type\"]);\r\n                                            const foundDiscriminatorKey = tryFind_2((keyword) => containsKey(keyword, values), discriminators);\r\n                                            if (foundDiscriminatorKey != null) {\r\n                                                const discriminatorKey = foundDiscriminatorKey;\r\n                                                const discriminatorValueJson = find(discriminatorKey, values);\r\n                                                if (discriminatorValueJson.tag === 1) {\r\n                                                    const discriminatorValue = discriminatorValueJson.fields[0];\r\n                                                    const foundUnionCase = tryFind_3((case$_4) => (case$_4.CaseName.toUpperCase() === discriminatorValue.toUpperCase()), cases);\r\n                                                    if (foundUnionCase != null) {\r\n                                                        const case$_5 = foundUnionCase;\r\n                                                        const record = Convert_fromJsonAs(new Json(5, values), case$_5.CaseTypes[0]);\r\n                                                        return makeUnion(case$_5.Info, [record]);\r\n                                                    }\r\n                                                    else {\r\n                                                        const arg10_12 = name_2(unionType);\r\n                                                        return toFail(printf(\"Union of records of type \\u0027%s\\u0027 does not have a matching case \\u0027%s\\u0027\"))(arg10_12)(discriminatorValue);\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    const otherwise_4 = discriminatorValueJson;\r\n                                                    const arg10_13 = name_2(unionType);\r\n                                                    return toFail(printf(\"Union of records of type \\u0027%s\\u0027 cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\"))(arg10_13);\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                const arg10_11 = name_2(unionType);\r\n                                                return toFail(printf(\"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected \\u0027__typename\\u0027, \\u0027$typeName\\u0027 or \\u0027$type\\u0027\"))(arg10_11);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            const otherwise_5 = matchValue_3;\r\n                                            const unexpectedJson = JSON.stringify(otherwise_5);\r\n                                            const expectedType = JSON.stringify(cases);\r\n                                            return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson)(expectedType);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            case 36: {\r\n                                return void 0;\r\n                            }\r\n                            case 37: {\r\n                                const optionalType = optionalTypeDelayed_5();\r\n                                const parsedOptional_1 = Convert_fromJsonAs(jsonValue_5, optionalType);\r\n                                return ((arg0) => some(arg0))(parsedOptional_1);\r\n                            }\r\n                            case 38: {\r\n                                let pattern_matching_result_7, value_45, value_46, dict, caseName_4, getTypes_2;\r\n                                if (matchValue[0].tag === 1) {\r\n                                    if (matchValue[1].tag === 19) {\r\n                                        pattern_matching_result_7 = 0;\r\n                                        value_45 = matchValue[0].fields[0];\r\n                                    }\r\n                                    else if (matchValue[1].tag === 37) {\r\n                                        if (getTypes_1 = matchValue[1].fields[0], (caseName_3 = matchValue[0].fields[0], Convert_isQuoted(caseName_3))) {\r\n                                            pattern_matching_result_7 = 3;\r\n                                            caseName_4 = matchValue[0].fields[0];\r\n                                            getTypes_2 = matchValue[1].fields[0];\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_7 = 4;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_7 = 4;\r\n                                    }\r\n                                }\r\n                                else if (matchValue[0].tag === 0) {\r\n                                    if (matchValue[1].tag === 12) {\r\n                                        pattern_matching_result_7 = 1;\r\n                                        value_46 = matchValue[0].fields[0];\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_7 = 4;\r\n                                    }\r\n                                }\r\n                                else if (matchValue[0].tag === 5) {\r\n                                    if (matchValue[1].tag === 12) {\r\n                                        pattern_matching_result_7 = 2;\r\n                                        dict = matchValue[0].fields[0];\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_7 = 4;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_7 = 4;\r\n                                }\r\n                                switch (pattern_matching_result_7) {\r\n                                    case 0: {\r\n                                        return parse_6(value_45);\r\n                                    }\r\n                                    case 1: {\r\n                                        return ((value_47) => fromInteger(value_47, false, 2))(~(~value_46));\r\n                                    }\r\n                                    case 2: {\r\n                                        const get$ = (key) => tryFind(key, dict);\r\n                                        const _arg3 = choose((x_1) => x_1, ofArray([get$(\"low\"), get$(\"high\"), get$(\"unsigned\")]));\r\n                                        let pattern_matching_result_8, high, low;\r\n                                        if (!isEmpty(_arg3)) {\r\n                                            if (head(_arg3).tag === 0) {\r\n                                                if (!isEmpty(tail_1(_arg3))) {\r\n                                                    if (head(tail_1(_arg3)).tag === 0) {\r\n                                                        if (!isEmpty(tail_1(tail_1(_arg3)))) {\r\n                                                            if (head(tail_1(tail_1(_arg3))).tag === 2) {\r\n                                                                if (isEmpty(tail_1(tail_1(tail_1(_arg3))))) {\r\n                                                                    pattern_matching_result_8 = 0;\r\n                                                                    high = head(tail_1(_arg3)).fields[0];\r\n                                                                    low = head(_arg3).fields[0];\r\n                                                                }\r\n                                                                else {\r\n                                                                    pattern_matching_result_8 = 1;\r\n                                                                }\r\n                                                            }\r\n                                                            else {\r\n                                                                pattern_matching_result_8 = 1;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_8 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_8 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_8 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_8 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_8 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_8) {\r\n                                            case 0: {\r\n                                                const lowBytes = getBytesInt32(~(~low));\r\n                                                const highBytes = getBytesInt32(~(~high));\r\n                                                const combinedBytes = concat([lowBytes, highBytes], Uint8Array);\r\n                                                return toInt64(combinedBytes, 0);\r\n                                            }\r\n                                            case 1: {\r\n                                                return toFail(printf(\"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    case 3: {\r\n                                        const patternInput_3 = getTypes_2();\r\n                                        const unionType_1 = patternInput_3[1];\r\n                                        const caseTypes = patternInput_3[0];\r\n                                        const _arg4 = tryFind_1((case$_6) => (case$_6.CaseName === Convert_removeQuotes(caseName_4)), caseTypes);\r\n                                        if (_arg4 == null) {\r\n                                            const caseNames_2 = map_2((case$_7) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_7.CaseName), caseTypes);\r\n                                            const expectedCases_2 = join(\", \", caseNames_2);\r\n                                            const arg20_11 = name_2(unionType_1);\r\n                                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_4)(arg20_11)(expectedCases_2);\r\n                                        }\r\n                                        else {\r\n                                            const caseInfo_1 = _arg4.Info;\r\n                                            return makeUnion(caseInfo_1, []);\r\n                                        }\r\n                                    }\r\n                                    case 4: {\r\n                                        let pattern_matching_result_9, caseName_5, getTypes_3, getFields, serializedRecord, caseValue, getTypes_4, elementTypeDelayed, values_4, elementTypeDelayed_1, values_5, elementTypeDelayed_2, linkedList, elementTypeDelayed_3, values_6, elementTypeDelayed_4, values_7, array_9, tupleTypesDelayed, dict_1, getTypes_5, getTypes_6, tuples, getTypes_7, tuples_1, dict_2, getTypes_8, getType, items, getTypes_9, map, getType_1;\r\n                                        if (matchValue[0].tag === 1) {\r\n                                            if (matchValue[1].tag === 37) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                                caseName_5 = matchValue[0].fields[0];\r\n                                                getTypes_3 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 36) {\r\n                                                pattern_matching_result_9 = 1;\r\n                                                getFields = matchValue[1].fields[0];\r\n                                                serializedRecord = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 21) {\r\n                                                pattern_matching_result_9 = 15;\r\n                                                getType_1 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 16;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue[0].tag === 4) {\r\n                                            if (matchValue[1].tag === 37) {\r\n                                                pattern_matching_result_9 = 2;\r\n                                                caseValue = matchValue[0].fields[0];\r\n                                                getTypes_4 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 27) {\r\n                                                pattern_matching_result_9 = 3;\r\n                                                elementTypeDelayed = matchValue[1].fields[0];\r\n                                                values_4 = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 25) {\r\n                                                pattern_matching_result_9 = 4;\r\n                                                elementTypeDelayed_1 = matchValue[1].fields[0];\r\n                                                values_5 = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 26) {\r\n                                                pattern_matching_result_9 = 6;\r\n                                                elementTypeDelayed_3 = matchValue[1].fields[0];\r\n                                                values_6 = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 28) {\r\n                                                pattern_matching_result_9 = 7;\r\n                                                elementTypeDelayed_4 = matchValue[1].fields[0];\r\n                                                values_7 = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 29) {\r\n                                                pattern_matching_result_9 = 8;\r\n                                                array_9 = matchValue[0].fields[0];\r\n                                                tupleTypesDelayed = matchValue[1].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 30) {\r\n                                                pattern_matching_result_9 = 10;\r\n                                                getTypes_6 = matchValue[1].fields[0];\r\n                                                tuples = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 31) {\r\n                                                pattern_matching_result_9 = 11;\r\n                                                getTypes_7 = matchValue[1].fields[0];\r\n                                                tuples_1 = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 33) {\r\n                                                pattern_matching_result_9 = 13;\r\n                                                getType = matchValue[1].fields[0];\r\n                                                items = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 21) {\r\n                                                pattern_matching_result_9 = 15;\r\n                                                getType_1 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 16;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue[0].tag === 5) {\r\n                                            if (matchValue[1].tag === 25) {\r\n                                                pattern_matching_result_9 = 5;\r\n                                                elementTypeDelayed_2 = matchValue[1].fields[0];\r\n                                                linkedList = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 36) {\r\n                                                pattern_matching_result_9 = 9;\r\n                                                dict_1 = matchValue[0].fields[0];\r\n                                                getTypes_5 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 31) {\r\n                                                pattern_matching_result_9 = 12;\r\n                                                dict_2 = matchValue[0].fields[0];\r\n                                                getTypes_8 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 30) {\r\n                                                pattern_matching_result_9 = 14;\r\n                                                getTypes_9 = matchValue[1].fields[0];\r\n                                                map = matchValue[0].fields[0];\r\n                                            }\r\n                                            else if (matchValue[1].tag === 21) {\r\n                                                pattern_matching_result_9 = 15;\r\n                                                getType_1 = matchValue[1].fields[0];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 16;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue[1].tag === 21) {\r\n                                            pattern_matching_result_9 = 15;\r\n                                            getType_1 = matchValue[1].fields[0];\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_9 = 16;\r\n                                        }\r\n                                        switch (pattern_matching_result_9) {\r\n                                            case 0: {\r\n                                                const patternInput_4 = getTypes_3();\r\n                                                const unionType_2 = patternInput_4[1];\r\n                                                const caseTypes_1 = patternInput_4[0];\r\n                                                const _arg5 = tryFind_1((case$_8) => (case$_8.CaseName === caseName_5), caseTypes_1);\r\n                                                if (_arg5 == null) {\r\n                                                    const caseNames_3 = map_2((case$_9) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_9.CaseName), caseTypes_1);\r\n                                                    const expectedCases_3 = join(\", \", caseNames_3);\r\n                                                    const arg20_12 = name_2(unionType_2);\r\n                                                    return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_5)(arg20_12)(expectedCases_3);\r\n                                                }\r\n                                                else {\r\n                                                    const caseInfo_2 = _arg5.Info;\r\n                                                    return makeUnion(caseInfo_2, []);\r\n                                                }\r\n                                            }\r\n                                            case 1: {\r\n                                                input_mut = SimpleJson_parse(serializedRecord);\r\n                                                typeInfo_mut = typeInfo;\r\n                                                continue Convert_fromJsonAs;\r\n                                            }\r\n                                            case 2: {\r\n                                                const patternInput_5 = getTypes_4();\r\n                                                const unionType_3 = patternInput_5[1];\r\n                                                const cases_1 = patternInput_5[0];\r\n                                                let pattern_matching_result_10, caseName_6, caseName_8, values_3, otherwise_6;\r\n                                                if (!isEmpty(caseValue)) {\r\n                                                    if (head(caseValue).tag === 1) {\r\n                                                        if (isEmpty(tail_1(caseValue))) {\r\n                                                            pattern_matching_result_10 = 0;\r\n                                                            caseName_6 = head(caseValue).fields[0];\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_10 = 1;\r\n                                                            caseName_8 = head(caseValue).fields[0];\r\n                                                            values_3 = tail_1(caseValue);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_10 = 2;\r\n                                                        otherwise_6 = caseValue;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_10 = 2;\r\n                                                    otherwise_6 = caseValue;\r\n                                                }\r\n                                                switch (pattern_matching_result_10) {\r\n                                                    case 0: {\r\n                                                        const _arg6 = tryFind_1((case$_10) => (case$_10.CaseName === caseName_6), cases_1);\r\n                                                        if (_arg6 == null) {\r\n                                                            const caseNames_4 = map_2((case$_11) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_11.CaseName), cases_1);\r\n                                                            const expectedCases_4 = join(\", \", caseNames_4);\r\n                                                            const arg20_13 = name_2(unionType_3);\r\n                                                            return toFail(printf(\"Case \\u0027%s\\u0027 was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_6)(arg20_13)(expectedCases_4);\r\n                                                        }\r\n                                                        else {\r\n                                                            const caseName_7 = _arg6.CaseName;\r\n                                                            const caseInfoTypes = _arg6.CaseTypes;\r\n                                                            const caseInfo_3 = _arg6.Info;\r\n                                                            return makeUnion(caseInfo_3, []);\r\n                                                        }\r\n                                                    }\r\n                                                    case 1: {\r\n                                                        const _arg7 = tryFind_1((case$_12) => (case$_12.CaseName === caseName_8), cases_1);\r\n                                                        if (_arg7 != null) {\r\n                                                            const types = _arg7.CaseTypes;\r\n                                                            const foundCaseName = _arg7.CaseName;\r\n                                                            const caseInfo_4 = _arg7.Info;\r\n                                                            if (types.length !== length(values_3)) {\r\n                                                                toFail(printf(\"The number of union case parameters for \\u0027%s\\u0027 is different\"))(foundCaseName);\r\n                                                            }\r\n                                                            const parsedValues_1 = map_2((tupledArg_1) => {\r\n                                                                const valueType_1 = tupledArg_1[0];\r\n                                                                const value_49 = tupledArg_1[1];\r\n                                                                return Convert_fromJsonAs(value_49, valueType_1);\r\n                                                            }, zip(types, toArray(values_3)));\r\n                                                            return makeUnion(caseInfo_4, parsedValues_1);\r\n                                                        }\r\n                                                        else {\r\n                                                            const caseNames_5 = map_2((_arg1_1) => {\r\n                                                                const name = _arg1_1.CaseName;\r\n                                                                return name;\r\n                                                            }, cases_1);\r\n                                                            const expectedCases_5 = join(\", \", caseNames_5);\r\n                                                            return toFail(printf(\"Case %s was not valid, expected one of [%s]\"))(caseName_8)(expectedCases_5);\r\n                                                        }\r\n                                                    }\r\n                                                    case 2: {\r\n                                                        const unexpectedJson_1 = JSON.stringify(otherwise_6);\r\n                                                        const expectedType_1 = JSON.stringify(cases_1);\r\n                                                        return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson_1)(expectedType_1);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            case 3: {\r\n                                                const elementType = elementTypeDelayed();\r\n                                                return toArray(map_3((value_51) => Convert_fromJsonAs(value_51, elementType), values_4));\r\n                                            }\r\n                                            case 4: {\r\n                                                const elementType_1 = elementTypeDelayed_1();\r\n                                                return map_3((value_53) => Convert_fromJsonAs(value_53, elementType_1), values_5);\r\n                                            }\r\n                                            case 5: {\r\n                                                const elementType_2 = elementTypeDelayed_2();\r\n                                                const flattenedList = Convert_flattenFable3Lists(linkedList);\r\n                                                return map_3((value_55) => Convert_fromJsonAs(value_55, elementType_2), flattenedList);\r\n                                            }\r\n                                            case 6: {\r\n                                                const elementType_3 = elementTypeDelayed_3();\r\n                                                return ofList(map_3((value_57) => Convert_fromJsonAs(value_57, elementType_3), values_6), {\r\n                                                    Compare: (x_2, y_1) => compare(x_2, y_1),\r\n                                                });\r\n                                            }\r\n                                            case 7: {\r\n                                                const elementType_4 = elementTypeDelayed_4();\r\n                                                const converted = map_3((value_59) => Convert_fromJsonAs(value_59, elementType_4), values_7);\r\n                                                return converted;\r\n                                            }\r\n                                            case 8: {\r\n                                                const tupleTypes = tupleTypesDelayed();\r\n                                                return map_2((tupledArg_2) => {\r\n                                                    const jsonType = tupledArg_2[0];\r\n                                                    const jsonData = tupledArg_2[1];\r\n                                                    return Convert_fromJsonAs(jsonData, jsonType);\r\n                                                }, zip(tupleTypes, toArray(array_9)));\r\n                                            }\r\n                                            case 9: {\r\n                                                const patternInput_6 = getTypes_5();\r\n                                                const recordType = patternInput_6[1];\r\n                                                const fields = patternInput_6[0];\r\n                                                let recordValues;\r\n                                                const values_8 = toList_1(dict_1);\r\n                                                recordValues = map_2((_arg3_1) => {\r\n                                                    const fieldType = _arg3_1.FieldType;\r\n                                                    const fieldName = _arg3_1.FieldName;\r\n                                                    const _arg8 = tryFind_2((tupledArg_3) => {\r\n                                                        const key_1 = tupledArg_3[0];\r\n                                                        const value_61 = tupledArg_3[1];\r\n                                                        return fieldName === key_1;\r\n                                                    }, values_8);\r\n                                                    if (_arg8 == null) {\r\n                                                        if (fieldType.tag === 24) {\r\n                                                            return void 0;\r\n                                                        }\r\n                                                        else {\r\n                                                            let dictKeys;\r\n                                                            const arg10_27 = join(\", \", map_3((arg) => toText(printf(\"\\u0027%s\\u0027\"))(arg[0]), toList_1(dict_1)));\r\n                                                            dictKeys = toText(printf(\"[ %s ]\"))(arg10_27);\r\n                                                            let recordFields;\r\n                                                            const arg10_30 = join(\", \", map_2((_arg2_1) => {\r\n                                                                const name_1 = _arg2_1.FieldName;\r\n                                                                const innerFieldType = _arg2_1.FieldType;\r\n                                                                if (innerFieldType.tag === 24) {\r\n                                                                    return toText(printf(\"optional(\\u0027%s\\u0027)\"))(name_1);\r\n                                                                }\r\n                                                                else {\r\n                                                                    return toText(printf(\"required(\\u0027%s\\u0027)\"))(name_1);\r\n                                                                }\r\n                                                            }, fields));\r\n                                                            recordFields = toText(printf(\"[ %s ]\"))(arg10_30);\r\n                                                            const arg30_6 = name_2(recordType);\r\n                                                            return toFail(printf(\"Could not find the required key \\u0027%s\\u0027 in the JSON object literal with keys %s to match with record type \\u0027%s\\u0027 that has fields %s\"))(fieldName)(dictKeys)(arg30_6)(recordFields);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        const value_62 = _arg8[1];\r\n                                                        const key_2 = _arg8[0];\r\n                                                        return Convert_fromJsonAs(value_62, fieldType);\r\n                                                    }\r\n                                                }, fields);\r\n                                                return makeRecord(recordType, recordValues);\r\n                                            }\r\n                                            case 10: {\r\n                                                const patternInput_7 = getTypes_6();\r\n                                                const valueType_2 = patternInput_7[1];\r\n                                                const keyType = patternInput_7[0];\r\n                                                const pairs = toList(delay(() => collect((keyValuePair) => {\r\n                                                    let a;\r\n                                                    const tuple_1 = Convert_fromJsonAs(keyValuePair, new TypeInfo(29, (a = [keyType, valueType_2], () => a)));\r\n                                                    return singleton_1(tuple_1);\r\n                                                }, tuples)));\r\n                                                switch (keyType.tag) {\r\n                                                    case 6:\r\n                                                    case 2:\r\n                                                    case 7: {\r\n                                                        return ofList_1(pairs);\r\n                                                    }\r\n                                                    default: {\r\n                                                        return ofList_1(pairs);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            case 11: {\r\n                                                const patternInput_8 = getTypes_7();\r\n                                                const valueType_3 = patternInput_8[1];\r\n                                                const originalType_2 = patternInput_8[2];\r\n                                                const keyType_1 = patternInput_8[0];\r\n                                                const pairs_1 = toList(delay(() => collect((keyValuePair_1) => {\r\n                                                    const tuple_2 = Convert_fromJsonAs(keyValuePair_1, new TypeInfo(29, () => [keyType_1, valueType_3]));\r\n                                                    return singleton_1(tuple_2);\r\n                                                }, tuples_1)));\r\n                                                const output = (keyType_1.tag === 37) ? (new Dictionary([], {\r\n                                                    Equals: (x_3, y_2) => equals(x_3, y_2),\r\n                                                    GetHashCode: (x_3) => safeHash(x_3),\r\n                                                })) : ((keyType_1.tag === 36) ? (new Dictionary([], {\r\n                                                    Equals: (x_4, y_3) => equals(x_4, y_3),\r\n                                                    GetHashCode: (x_4) => structuralHash(x_4),\r\n                                                })) : (new Dictionary([], {\r\n                                                    Equals: (x_5, y_4) => equals(x_5, y_4),\r\n                                                    GetHashCode: (x_5) => structuralHash(x_5),\r\n                                                })));\r\n                                                const enumerator = getEnumerator(pairs_1);\r\n                                                try {\r\n                                                    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                                        const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                                        const value_69 = forLoopVar[1];\r\n                                                        const key_3 = forLoopVar[0];\r\n                                                        addToDict(output, key_3, value_69);\r\n                                                    }\r\n                                                }\r\n                                                finally {\r\n                                                    enumerator.Dispose();\r\n                                                }\r\n                                                return output;\r\n                                            }\r\n                                            case 12: {\r\n                                                const patternInput_9 = getTypes_8();\r\n                                                const valueType_4 = patternInput_9[1];\r\n                                                const originalType_3 = patternInput_9[2];\r\n                                                const keyType_2 = patternInput_9[0];\r\n                                                const pairs_2 = map_3((tupledArg_4) => {\r\n                                                    const key_4 = tupledArg_4[0];\r\n                                                    const value_70 = tupledArg_4[1];\r\n                                                    return [Convert_fromJsonAs(new Json(1, key_4), keyType_2), Convert_fromJsonAs(value_70, valueType_4)];\r\n                                                }, toList_1(dict_2));\r\n                                                const output_1 = (keyType_2.tag === 37) ? (new Dictionary([], {\r\n                                                    Equals: (x_6, y_5) => equals(x_6, y_5),\r\n                                                    GetHashCode: (x_6) => safeHash(x_6),\r\n                                                })) : ((keyType_2.tag === 36) ? (new Dictionary([], {\r\n                                                    Equals: (x_7, y_6) => equals(x_7, y_6),\r\n                                                    GetHashCode: (x_7) => structuralHash(x_7),\r\n                                                })) : (new Dictionary([], {\r\n                                                    Equals: (x_8, y_7) => equals(x_8, y_7),\r\n                                                    GetHashCode: (x_8) => structuralHash(x_8),\r\n                                                })));\r\n                                                const enumerator_1 = getEnumerator(pairs_2);\r\n                                                try {\r\n                                                    while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                                        const forLoopVar_1 = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                                        const value_73 = forLoopVar_1[1];\r\n                                                        const key_5 = forLoopVar_1[0];\r\n                                                        addToDict(output_1, key_5, value_73);\r\n                                                    }\r\n                                                }\r\n                                                finally {\r\n                                                    enumerator_1.Dispose();\r\n                                                }\r\n                                                return output_1;\r\n                                            }\r\n                                            case 13: {\r\n                                                const elemType_1 = getType();\r\n                                                const hashset = (elemType_1.tag === 37) ? (new HashSet([], {\r\n                                                    Equals: (x_9, y_8) => equals(x_9, y_8),\r\n                                                    GetHashCode: (x_9) => safeHash(x_9),\r\n                                                })) : ((elemType_1.tag === 36) ? (new HashSet([], {\r\n                                                    Equals: (x_10, y_9) => equals(x_10, y_9),\r\n                                                    GetHashCode: (x_10) => structuralHash(x_10),\r\n                                                })) : (new HashSet([], {\r\n                                                    Equals: (x_11, y_10) => equals(x_11, y_10),\r\n                                                    GetHashCode: (x_11) => structuralHash(x_11),\r\n                                                })));\r\n                                                const enumerator_2 = getEnumerator(items);\r\n                                                try {\r\n                                                    while (enumerator_2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                                        const item = enumerator_2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                                        const deserialized_1 = Convert_fromJsonAs(item, elemType_1);\r\n                                                        void addToSet(deserialized_1, hashset);\r\n                                                    }\r\n                                                }\r\n                                                finally {\r\n                                                    enumerator_2.Dispose();\r\n                                                }\r\n                                                return hashset;\r\n                                            }\r\n                                            case 14: {\r\n                                                const patternInput_10 = getTypes_9();\r\n                                                const valueType_5 = patternInput_10[1];\r\n                                                const keyType_3 = patternInput_10[0];\r\n                                                const matchValue_5 = [tryFind(\"comparer\", map), tryFind(\"tree\", map)];\r\n                                                let pattern_matching_result_11, comparer_1, tree_1;\r\n                                                if (matchValue_5[0] != null) {\r\n                                                    if (matchValue_5[0].tag === 5) {\r\n                                                        if (matchValue_5[1] != null) {\r\n                                                            if (matchValue_5[1].tag === 4) {\r\n                                                                if (tree = matchValue_5[1].fields[0], (comparer = matchValue_5[0].fields[0], isEmpty_1(comparer))) {\r\n                                                                    pattern_matching_result_11 = 0;\r\n                                                                    comparer_1 = matchValue_5[0].fields[0];\r\n                                                                    tree_1 = matchValue_5[1].fields[0];\r\n                                                                }\r\n                                                                else {\r\n                                                                    pattern_matching_result_11 = 1;\r\n                                                                }\r\n                                                            }\r\n                                                            else {\r\n                                                                pattern_matching_result_11 = 1;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_11 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_11 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_11 = 1;\r\n                                                }\r\n                                                switch (pattern_matching_result_11) {\r\n                                                    case 0: {\r\n                                                        const matchValue_6 = Convert_generateMap(new Json(4, tree_1));\r\n                                                        if (matchValue_6 == null) {\r\n                                                            const inputJson = SimpleJson_toString(new Json(4, tree_1));\r\n                                                            return toFail(printf(\"Could not generate map from JSON\\n %s\"))(inputJson);\r\n                                                        }\r\n                                                        else {\r\n                                                            const internalMap = matchValue_6;\r\n                                                            const pairs_3 = map_3((tupledArg_5) => {\r\n                                                                const key_6 = tupledArg_5[0];\r\n                                                                const value_77 = tupledArg_5[1];\r\n                                                                const nextKey = (!Convert_isQuoted(key_6)) ? Convert_fromJsonAs(new Json(1, key_6), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_6), keyType_3);\r\n                                                                const nextValue = Convert_fromJsonAs(value_77, valueType_5);\r\n                                                                return [nextKey, nextValue];\r\n                                                            }, Convert_flattenMap(internalMap));\r\n                                                            switch (keyType_3.tag) {\r\n                                                                case 6:\r\n                                                                case 2:\r\n                                                                case 7: {\r\n                                                                    return ofList_1(pairs_3);\r\n                                                                }\r\n                                                                default: {\r\n                                                                    return ofList_1(pairs_3);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    case 1: {\r\n                                                        let pattern_matching_result_12, comparer_3, tree_3;\r\n                                                        if (matchValue_5[0] != null) {\r\n                                                            if (matchValue_5[0].tag === 5) {\r\n                                                                if (matchValue_5[1] != null) {\r\n                                                                    if (matchValue_5[1].tag === 5) {\r\n                                                                        if (tree_2 = matchValue_5[1].fields[0], (comparer_2 = matchValue_5[0].fields[0], isEmpty_1(comparer_2))) {\r\n                                                                            pattern_matching_result_12 = 0;\r\n                                                                            comparer_3 = matchValue_5[0].fields[0];\r\n                                                                            tree_3 = matchValue_5[1].fields[0];\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            pattern_matching_result_12 = 1;\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        pattern_matching_result_12 = 1;\r\n                                                                    }\r\n                                                                }\r\n                                                                else {\r\n                                                                    pattern_matching_result_12 = 1;\r\n                                                                }\r\n                                                            }\r\n                                                            else {\r\n                                                                pattern_matching_result_12 = 1;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_12 = 1;\r\n                                                        }\r\n                                                        switch (pattern_matching_result_12) {\r\n                                                            case 0: {\r\n                                                                const flattenedMap = ofList_1(Convert_flatteFable3Map(tree_3));\r\n                                                                input_mut = (new Json(5, flattenedMap));\r\n                                                                typeInfo_mut = typeInfo;\r\n                                                                continue Convert_fromJsonAs;\r\n                                                            }\r\n                                                            case 1: {\r\n                                                                const pairs_4 = map_3((tupledArg_6) => {\r\n                                                                    const key_7 = tupledArg_6[0];\r\n                                                                    const value_82 = tupledArg_6[1];\r\n                                                                    const nextKey_1 = (!Convert_isQuoted(key_7)) ? ((isPrimitive(keyType_3) ? true : enumUnion(keyType_3)) ? Convert_fromJsonAs(new Json(1, key_7), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3)) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3);\r\n                                                                    const nextValue_1 = Convert_fromJsonAs(value_82, valueType_5);\r\n                                                                    return [nextKey_1, nextValue_1];\r\n                                                                }, toList_1(map));\r\n                                                                switch (keyType_3.tag) {\r\n                                                                    case 6:\r\n                                                                    case 2:\r\n                                                                    case 7: {\r\n                                                                        return ofList_1(pairs_4);\r\n                                                                    }\r\n                                                                    default: {\r\n                                                                        return ofList_1(pairs_4);\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            case 15: {\r\n                                                const unknownType = getType_1();\r\n                                                const arg20_17 = fullName(unknownType);\r\n                                                const arg10_33 = SimpleJson_toString(input);\r\n                                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_33)(arg20_17);\r\n                                            }\r\n                                            case 16: {\r\n                                                const arg20_18 = JSON.stringify(typeInfo);\r\n                                                const arg10_34 = SimpleJson_toString(input);\r\n                                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_34)(arg20_18);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function Convert_fromJson(json, typeInfo) {\r\n    return Convert_fromJsonAs(json, typeInfo);\r\n}\r\n\r\nexport const Convert_quoteText = quote;\r\n\r\nexport function Convert_serialize(value_mut, typeInfo_mut) {\r\n    let copyOfStruct, copyOfStruct_1, copyOfStruct_2;\r\n    Convert_serialize:\r\n    while (true) {\r\n        const value = value_mut, typeInfo = typeInfo_mut;\r\n        switch (typeInfo.tag) {\r\n            case 2: {\r\n                const content = value;\r\n                if (content == null) {\r\n                    return \"null\";\r\n                }\r\n                else {\r\n                    return Convert_quoteText(content);\r\n                }\r\n            }\r\n            case 0: {\r\n                return \"null\";\r\n            }\r\n            case 9:\r\n            case 8: {\r\n                if (Number.isNaN(value)) {\r\n                    return Convert_quoteText(\"NaN\");\r\n                }\r\n                else {\r\n                    return value.toString();\r\n                }\r\n            }\r\n            case 1: {\r\n                return Convert_quoteText(value);\r\n            }\r\n            case 13:\r\n            case 14:\r\n            case 3:\r\n            case 4:\r\n            case 11:\r\n            case 35:\r\n            case 18:\r\n            case 6: {\r\n                return int32ToString(value);\r\n            }\r\n            case 5:\r\n            case 12: {\r\n                return Convert_betweenQuotes(toString(value));\r\n            }\r\n            case 17: {\r\n                return Convert_betweenQuotes(toString_1(value));\r\n            }\r\n            case 10: {\r\n                return Convert_betweenQuotes(toString_2(value));\r\n            }\r\n            case 7: {\r\n                if (value) {\r\n                    return \"true\";\r\n                }\r\n                else {\r\n                    return \"false\";\r\n                }\r\n            }\r\n            case 19: {\r\n                return Convert_betweenQuotes((copyOfStruct = value, copyOfStruct));\r\n            }\r\n            case 15: {\r\n                return Convert_betweenQuotes((copyOfStruct_1 = value, toString_3(copyOfStruct_1, \"O\")));\r\n            }\r\n            case 16: {\r\n                return Convert_betweenQuotes((copyOfStruct_2 = value, toString_3(copyOfStruct_2, \"O\")));\r\n            }\r\n            case 36: {\r\n                const getFields = typeInfo.fields[0];\r\n                const patternInput = getFields();\r\n                const recordType = patternInput[1];\r\n                const fieldTypes = patternInput[0];\r\n                const serializedFields = map_2((field) => {\r\n                    const fieldValue = getRecordField(value, field.PropertyInfo);\r\n                    const arg20 = Convert_serialize(fieldValue, field.FieldType);\r\n                    return toText(printf(\"\\\"%s\\\": %s\"))(field.FieldName)(arg20);\r\n                }, fieldTypes);\r\n                return (\"{\" + join(\", \", serializedFields)) + \"}\";\r\n            }\r\n            case 32: {\r\n                const getElementType = typeInfo.fields[0];\r\n                const elementType = getElementType();\r\n                const values = join(\", \", map_4((element) => Convert_serialize(element, elementType), value));\r\n                return (\"[\" + values) + \"]\";\r\n            }\r\n            case 33: {\r\n                const getElementType_1 = typeInfo.fields[0];\r\n                const elementType_1 = getElementType_1();\r\n                const values_1 = join(\", \", map_4((element_1) => Convert_serialize(element_1, elementType_1), value));\r\n                return (\"[\" + values_1) + \"]\";\r\n            }\r\n            case 26: {\r\n                const getElementType_2 = typeInfo.fields[0];\r\n                const elementType_2 = getElementType_2();\r\n                const values_2 = join(\", \", map_4((element_2) => Convert_serialize(element_2, elementType_2), value));\r\n                return (\"[\" + values_2) + \"]\";\r\n            }\r\n            case 27: {\r\n                const getElementType_3 = typeInfo.fields[0];\r\n                const elementType_3 = getElementType_3();\r\n                const values_3 = join(\", \", map_2((element_3) => Convert_serialize(element_3, elementType_3), value));\r\n                return (\"[\" + values_3) + \"]\";\r\n            }\r\n            case 25: {\r\n                const getElementType_4 = typeInfo.fields[0];\r\n                const elementType_4 = getElementType_4();\r\n                const values_4 = join(\", \", map_3((element_4) => Convert_serialize(element_4, elementType_4), value));\r\n                return (\"[\" + values_4) + \"]\";\r\n            }\r\n            case 28: {\r\n                const getElementType_5 = typeInfo.fields[0];\r\n                const elementType_5 = getElementType_5();\r\n                const values_5 = join(\", \", map_2((element_5) => Convert_serialize(element_5, elementType_5), toArray_1(value)));\r\n                return (\"[\" + values_5) + \"]\";\r\n            }\r\n            case 24: {\r\n                const getElementType_6 = typeInfo.fields[0];\r\n                const matchValue = value;\r\n                if (matchValue != null) {\r\n                    const existingValue = value_87(matchValue);\r\n                    value_mut = existingValue;\r\n                    typeInfo_mut = getElementType_6();\r\n                    continue Convert_serialize;\r\n                }\r\n                else {\r\n                    return \"null\";\r\n                }\r\n            }\r\n            case 37: {\r\n                const getCases = typeInfo.fields[0];\r\n                const patternInput_1 = getCases();\r\n                const unionType = patternInput_1[1];\r\n                const unionCases = patternInput_1[0];\r\n                const patternInput_2 = getUnionFields(value, unionType);\r\n                const usedCase = patternInput_2[0];\r\n                const fields = patternInput_2[1];\r\n                const caseTypes = unionCases.find((case$) => (case$.CaseName === name_2(usedCase))).CaseTypes;\r\n                if (enumUnion(typeInfo) ? true : (caseTypes.length === 0)) {\r\n                    return Convert_betweenQuotes(name_2(usedCase));\r\n                }\r\n                else if (caseTypes.length === 1) {\r\n                    return (((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + Convert_serialize(fields[0], caseTypes[0])) + \"}\";\r\n                }\r\n                else {\r\n                    const serializedFields_1 = join(\", \", mapIndexed((index, caseType) => Convert_serialize(fields[index], caseType), caseTypes));\r\n                    return ((((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + \"[\") + serializedFields_1) + \"] }\";\r\n                }\r\n            }\r\n            case 30: {\r\n                const getPairTypes = typeInfo.fields[0];\r\n                const patternInput_3 = getPairTypes();\r\n                const valueType = patternInput_3[1];\r\n                const keyType = patternInput_3[0];\r\n                const serializedValues = join(\", \", map_2((tupledArg) => {\r\n                    const key = tupledArg[0];\r\n                    const value_8 = tupledArg[1];\r\n                    const serializedKey = Convert_serialize(key, keyType);\r\n                    const serializedValue = Convert_serialize(value_8, valueType);\r\n                    if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\r\n                        if (!Convert_isQuoted(serializedKey)) {\r\n                            return (Convert_quoteText(serializedKey) + \": \") + serializedValue;\r\n                        }\r\n                        else {\r\n                            return (serializedKey + \": \") + serializedValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return (((\"[\" + serializedKey) + \", \") + serializedValue) + \"]\";\r\n                    }\r\n                }, toArray_2(value)));\r\n                if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\r\n                    return (\"{\" + serializedValues) + \"}\";\r\n                }\r\n                else {\r\n                    return (\"[\" + serializedValues) + \"]\";\r\n                }\r\n            }\r\n            case 31: {\r\n                const getPairTypes_1 = typeInfo.fields[0];\r\n                const patternInput_4 = getPairTypes_1();\r\n                const valueType_1 = patternInput_4[1];\r\n                const originalType = patternInput_4[2];\r\n                const keyType_1 = patternInput_4[0];\r\n                const serializedValues_1 = join(\", \", map_4((pair) => {\r\n                    const patternInput_5 = [pair[0], pair[1]];\r\n                    const value_10 = patternInput_5[1];\r\n                    const key_1 = patternInput_5[0];\r\n                    const serializedKey_1 = Convert_serialize(key_1, keyType_1);\r\n                    const serializedValue_1 = Convert_serialize(value_10, valueType_1);\r\n                    if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\r\n                        if (!Convert_isQuoted(serializedKey_1)) {\r\n                            return (Convert_betweenQuotes(serializedKey_1) + \": \") + serializedValue_1;\r\n                        }\r\n                        else {\r\n                            return (serializedKey_1 + \": \") + serializedValue_1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return (((\"[\" + serializedKey_1) + \", \") + serializedValue_1) + \"]\";\r\n                    }\r\n                }, value));\r\n                if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\r\n                    return (\"{\" + serializedValues_1) + \"}\";\r\n                }\r\n                else {\r\n                    return (\"[\" + serializedValues_1) + \"]\";\r\n                }\r\n            }\r\n            case 29: {\r\n                const getTupleTypes = typeInfo.fields[0];\r\n                const tupleTypes = getTupleTypes();\r\n                if (tupleTypes.length === 1) {\r\n                    return (\"[\" + Convert_serialize(value, tupleTypes[0])) + \"]\";\r\n                }\r\n                else {\r\n                    const serializedValues_2 = join(\", \", mapIndexed((index_1, element_6) => Convert_serialize(element_6, tupleTypes[index_1]), value));\r\n                    return (\"[\" + serializedValues_2) + \"]\";\r\n                }\r\n            }\r\n            case 20: {\r\n                return SimpleJson_stringify(value);\r\n            }\r\n            case 21: {\r\n                const getType = typeInfo.fields[0];\r\n                return SimpleJson_stringify(value);\r\n            }\r\n            default: {\r\n                return \"null\";\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function Fable_SimpleJson_Json__Json_stringify_Static_4E60E31B(value) {\r\n    if (Convert_isUsingFable3) {\r\n        console.warn(some(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\"));\r\n    }\r\n    return SimpleJson_stringify(value);\r\n}\r\n\r\n//# sourceMappingURL=Json.Converter.fs.js.map\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long.js\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (offset != null && count != null) {\n        buffer = buffer.subarray(offset, offset + count);\n    }\n    else if (offset != null) {\n        buffer = buffer.subarray(offset);\n    }\n    return Array.from(buffer).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n","import { toIterator, getEnumerator } from \"./Util.js\";\nimport { iterate, map, iterateIndexed, concat } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                void HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, k);\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            f(x, x, this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    let count = 0;\n    let enumerator = getEnumerator(this$.hashMap.values());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const items = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            count = ((count + items.length) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return count | 0;\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","export default function quote(inputText) {\r\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var meta = {\r\n        '\\b': '\\\\b',\r\n        '\\t': '\\\\t',\r\n        '\\n': '\\\\n',\r\n        '\\f': '\\\\f',\r\n        '\\r': '\\\\r',\r\n        '\"': '\\\\\"',\r\n        '\\\\': '\\\\\\\\'\r\n    }\r\n\r\n    escapable.lastIndex = 0;\r\n    return escapable.test(inputText) ?\r\n        '\"' + inputText.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string' ? c :\r\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' :\r\n        '\"' + inputText + '\"';\r\n}","import { printf, toText } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { class_type, record_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { splitByDot2 } from \"./Utils.fs.js\";\r\nimport { addToDict, getItemFromDict } from \"./.fable/fable-library.3.1.11/MapUtil.js\";\r\nimport { toList } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\n\r\nexport class UReference extends Record {\r\n    constructor(D, W) {\r\n        super();\r\n        this.D = D;\r\n        this.W = W;\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return toText(printf(\"%s.%s\"))(this$.D)(this$.W);\r\n    }\r\n}\r\n\r\nexport function UReference$reflection() {\r\n    return record_type(\"Data.UReference\", [], UReference, () => [[\"D\", string_type], [\"W\", string_type]]);\r\n}\r\n\r\nexport function UReference__IsFull(this$) {\r\n    return this$.D !== \"\";\r\n}\r\n\r\nexport function UReference_Stub_Z721C83C5(w) {\r\n    return new UReference(\"\", w);\r\n}\r\n\r\nexport function UReference_Parse_Z721C83C5(str) {\r\n    const patternInput = splitByDot2(str);\r\n    const w = patternInput[1];\r\n    const d = patternInput[0];\r\n    return new UReference(d, w);\r\n}\r\n\r\nexport class GlobalRepository$1 {\r\n    constructor() {\r\n        this[\"Repo@\"] = (new Map([]));\r\n    }\r\n}\r\n\r\nexport function GlobalRepository$1$reflection(gen0) {\r\n    return class_type(\"Data.GlobalRepository`1\", [gen0], GlobalRepository$1);\r\n}\r\n\r\nexport function GlobalRepository$1_$ctor() {\r\n    return new GlobalRepository$1();\r\n}\r\n\r\n(() => {\r\n    const instance = GlobalRepository$1_$ctor();\r\n})();\r\n\r\nexport function GlobalRepository$1__get_Repo(__) {\r\n    return __[\"Repo@\"];\r\n}\r\n\r\nexport function GlobalRepository$1__Get_Z721C83C5(instance, key) {\r\n    return getItemFromDict(GlobalRepository$1__get_Repo(instance), key);\r\n}\r\n\r\nexport function GlobalRepository$1__ContainsKey_Z721C83C5(instance, key) {\r\n    return GlobalRepository$1__get_Repo(instance).has(key);\r\n}\r\n\r\nexport function GlobalRepository$1__Add(instance, key, value) {\r\n    addToDict(GlobalRepository$1__get_Repo(instance), key, value);\r\n}\r\n\r\nexport function GlobalRepository$1__Keys(instance) {\r\n    return toList(GlobalRepository$1__get_Repo(instance).keys());\r\n}\r\n\r\nexport function GlobalRepository$1__Vals(instance) {\r\n    return GlobalRepository$1__get_Repo(instance).values();\r\n}\r\n\r\nexport function GlobalRepository$1__Pairs(instance) {\r\n    return map((x) => [x, getItemFromDict(GlobalRepository$1__get_Repo(instance), x)], toList(GlobalRepository$1__get_Repo(instance).keys()));\r\n}\r\n\r\nexport function GlobalRepository$1__Reset(instance) {\r\n    GlobalRepository$1__get_Repo(instance).clear();\r\n}\r\n\r\nexport function dumpGlobalKeys(repo) {\r\n    return GlobalRepository$1__Keys(repo);\r\n}\r\n\r\nexport function dumpGlobalPairs(repo) {\r\n    return GlobalRepository$1__Pairs(repo);\r\n}\r\n\r\nexport function values(repo) {\r\n    return GlobalRepository$1__Vals(repo);\r\n}\r\n\r\nexport function keyExists(repo, key) {\r\n    return GlobalRepository$1__ContainsKey_Z721C83C5(repo, key);\r\n}\r\n\r\nexport function save(repo, key, value) {\r\n    GlobalRepository$1__Add(repo, key, value);\r\n    return value;\r\n}\r\n\r\nexport function getGlobal(repo, key) {\r\n    if (GlobalRepository$1__ContainsKey_Z721C83C5(repo, key)) {\r\n        return GlobalRepository$1__Get_Z721C83C5(repo, key);\r\n    }\r\n    else {\r\n        let message;\r\n        const arg20 = dumpGlobalKeys(repo);\r\n        message = toText(printf(\"Missing global key \\u003c\\u003c%A\\u003e\\u003e\\n Dump keys: %A\"))(key)(arg20);\r\n        throw (new Error(message));\r\n    }\r\n}\r\n\r\nexport function resetGlobal(repo) {\r\n    GlobalRepository$1__Reset(repo);\r\n}\r\n\r\nexport function resetAll() {\r\n}\r\n\r\n//# sourceMappingURL=Data.fs.js.map\r\n","import { printf, toConsole, split } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { equalsWith } from \"./.fable/fable-library.3.1.11/Array.js\";\r\nimport { randomNext, comparePrimitives } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { item, length } from \"./.fable/fable-library.3.1.11/List.js\";\r\n\r\nexport function splitByDot2(str) {\r\n    const matchValue = split(str, [\".\"], null, 0);\r\n    if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 2) : false) {\r\n        const s2 = matchValue[1];\r\n        const s1 = matchValue[0];\r\n        return [s1, s2];\r\n    }\r\n    else {\r\n        const message = (\"cannot split string into 2 by dot: \\u0027\" + str) + \"\\u0027\";\r\n        throw (new Error(message));\r\n    }\r\n}\r\n\r\nexport const random = {};\r\n\r\nexport function randomOfList(lst) {\r\n    const max = length(lst) | 0;\r\n    const rand = randomNext(0, max) | 0;\r\n    toConsole(printf(\"Chosen %d\"))(rand);\r\n    return item(rand, lst);\r\n}\r\n\r\nexport function randomOfListWithSeed(lst, seed) {\r\n    const random_1 = {};\r\n    const max = length(lst) | 0;\r\n    const rand = randomNext(0, max) | 0;\r\n    toConsole(printf(\"Chosen %d\"))(rand);\r\n    return item(rand, lst);\r\n}\r\n\r\n//# sourceMappingURL=Utils.fs.js.map\r\n","import { Union, Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { UReference, UReference$reflection } from \"./Data.fs.js\";\r\nimport { obj_type, int32_type, class_type, list_type, option_type, union_type, string_type, record_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { map, head as head_1, tail as tail_1, isEmpty, cons, empty } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { empty as empty_1 } from \"./.fable/fable-library.3.1.11/Set.js\";\r\nimport { comparePrimitives } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { empty as empty_2 } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { printf, toText } from \"./.fable/fable-library.3.1.11/String.js\";\r\n\r\nexport class DialogState extends Record {\r\n    constructor(Reference) {\r\n        super();\r\n        this.Reference = Reference;\r\n    }\r\n}\r\n\r\nexport function DialogState$reflection() {\r\n    return record_type(\"State.DialogState\", [], DialogState, () => [[\"Reference\", UReference$reflection()]]);\r\n}\r\n\r\nexport class LocationHubState extends Record {\r\n    constructor(LocReference) {\r\n        super();\r\n        this.LocReference = LocReference;\r\n    }\r\n}\r\n\r\nexport function LocationHubState$reflection() {\r\n    return record_type(\"State.LocationHubState\", [], LocationHubState, () => [[\"LocReference\", string_type]]);\r\n}\r\n\r\nexport class PersonHubState extends Record {\r\n    constructor(PersonHubReference) {\r\n        super();\r\n        this.PersonHubReference = PersonHubReference;\r\n    }\r\n}\r\n\r\nexport function PersonHubState$reflection() {\r\n    return record_type(\"State.PersonHubState\", [], PersonHubState, () => [[\"PersonHubReference\", string_type]]);\r\n}\r\n\r\nexport class UiState extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"DialogMode\", \"LocationHubMode\", \"PersonHubMode\"];\r\n    }\r\n}\r\n\r\nexport function UiState$reflection() {\r\n    return union_type(\"State.UiState\", [], UiState, () => [[[\"Item\", DialogState$reflection()]], [[\"Item\", LocationHubState$reflection()]], [[\"Item\", PersonHubState$reflection()]]]);\r\n}\r\n\r\nexport class InteractionHistoryRecord extends Record {\r\n    constructor(Actor, Text$, UserReply) {\r\n        super();\r\n        this.Actor = Actor;\r\n        this.Text = Text$;\r\n        this.UserReply = UserReply;\r\n    }\r\n}\r\n\r\nexport function InteractionHistoryRecord$reflection() {\r\n    return record_type(\"State.InteractionHistoryRecord\", [], InteractionHistoryRecord, () => [[\"Actor\", option_type(string_type)], [\"Text\", string_type], [\"UserReply\", string_type]]);\r\n}\r\n\r\nexport class ErrorInfo extends Record {\r\n    constructor(Message) {\r\n        super();\r\n        this.Message = Message;\r\n    }\r\n}\r\n\r\nexport function ErrorInfo$reflection() {\r\n    return record_type(\"State.ErrorInfo\", [], ErrorInfo, () => [[\"Message\", string_type]]);\r\n}\r\n\r\nexport class UIAnimation extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"NoAnimation\", \"Success\", \"Fail\", \"Warning\", \"Shock\", \"Custom\"];\r\n    }\r\n}\r\n\r\nexport function UIAnimation$reflection() {\r\n    return union_type(\"State.UIAnimation\", [], UIAnimation, () => [[], [], [], [], [], [[\"Item\", string_type]]]);\r\n}\r\n\r\nexport class State extends Record {\r\n    constructor(UI, UIStack, Animation, Previous, InteractionHistory, Log, KnownFacts, KnownPersons, Iteration, Data, Error$) {\r\n        super();\r\n        this.UI = UI;\r\n        this.UIStack = UIStack;\r\n        this.Animation = Animation;\r\n        this.Previous = Previous;\r\n        this.InteractionHistory = InteractionHistory;\r\n        this.Log = Log;\r\n        this.KnownFacts = KnownFacts;\r\n        this.KnownPersons = KnownPersons;\r\n        this.Iteration = (Iteration | 0);\r\n        this.Data = Data;\r\n        this.Error = Error$;\r\n    }\r\n}\r\n\r\nexport function State$reflection() {\r\n    return record_type(\"State.State\", [], State, () => [[\"UI\", UiState$reflection()], [\"UIStack\", list_type(UiState$reflection())], [\"Animation\", UIAnimation$reflection()], [\"Previous\", option_type(State$reflection())], [\"InteractionHistory\", list_type(InteractionHistoryRecord$reflection())], [\"Log\", list_type(string_type)], [\"KnownFacts\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [string_type])], [\"KnownPersons\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [string_type])])], [\"Iteration\", int32_type], [\"Data\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, obj_type])], [\"Error\", option_type(ErrorInfo$reflection())]]);\r\n}\r\n\r\nexport function makeInitialStateInDialog(r) {\r\n    return new State(new UiState(0, new DialogState(r)), empty(), new UIAnimation(0), void 0, empty(), empty(), empty_1({\r\n        Compare: (x, y) => comparePrimitives(x, y),\r\n    }), empty_2(), 0, empty_2(), void 0);\r\n}\r\n\r\nexport function currentDialogRef(s) {\r\n    const matchValue = s.UI;\r\n    if (matchValue.tag === 0) {\r\n        const ds = matchValue.fields[0];\r\n        return ds.Reference.D;\r\n    }\r\n    else {\r\n        const s_1 = matchValue;\r\n        const message = toText(printf(\"cannot get current dialog ref while in %A\"))(s_1);\r\n        throw (new Error(message));\r\n    }\r\n}\r\n\r\nfunction changeUIDialogWindow(refs, _arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            throw (new Error(\"cannot move to dialog window while in location hub\"));\r\n        }\r\n        case 2: {\r\n            throw (new Error(\"cannot move to dialog window while in person hub\"));\r\n        }\r\n        default: {\r\n            const ds = _arg1.fields[0];\r\n            return new UiState(0, new DialogState(new UReference(ds.Reference.D, refs)));\r\n        }\r\n    }\r\n}\r\n\r\nfunction setUIDialog(d, w) {\r\n    return new UiState(0, new DialogState(new UReference(d, w)));\r\n}\r\n\r\nfunction setUIDialogRef(dw) {\r\n    return new UiState(0, new DialogState(dw));\r\n}\r\n\r\nfunction iterate(s) {\r\n    return new State(s.UI, s.UIStack, new UIAnimation(0), s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, s.KnownPersons, s.Iteration + 1, s.Data, s.Error);\r\n}\r\n\r\nexport function gotoDialogWindow(refs, s) {\r\n    const inputRecord = iterate(s);\r\n    return new State(changeUIDialogWindow(refs, s.UI), inputRecord.UIStack, inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function toDialog(d, w, state) {\r\n    const inputRecord = iterate(state);\r\n    return new State(setUIDialog(d, w), inputRecord.UIStack, inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function pushDialog(d, w, s) {\r\n    const inputRecord = iterate(s);\r\n    return new State(setUIDialog(d, w), cons(s.UI, s.UIStack), inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function pushLocation(name, s) {\r\n    const inputRecord = iterate(s);\r\n    return new State(new UiState(1, new LocationHubState(name)), cons(s.UI, s.UIStack), inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function pushPerson(name, s) {\r\n    const inputRecord = iterate(s);\r\n    return new State(new UiState(2, new PersonHubState(name)), cons(s.UI, s.UIStack), inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function popDialog(s) {\r\n    const matchValue = s.UIStack;\r\n    if (!isEmpty(matchValue)) {\r\n        const tail = tail_1(matchValue);\r\n        const head = head_1(matchValue);\r\n        const inputRecord = iterate(s);\r\n        return new State(head, tail, inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n    }\r\n    else {\r\n        throw (new Error(\"Attempt to pop UI stack when it was empty (popDialog)\"));\r\n    }\r\n}\r\n\r\nexport function popToLocation(sold) {\r\n    const popInner = (s_mut) => {\r\n        popInner:\r\n        while (true) {\r\n            const s = s_mut;\r\n            const matchValue = s.UIStack;\r\n            if (!isEmpty(matchValue)) {\r\n                const tail = tail_1(matchValue);\r\n                const head = head_1(matchValue);\r\n                const pop1 = new State(head, tail, s.Animation, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, s.KnownPersons, s.Iteration, s.Data, s.Error);\r\n                if (pop1.UI.tag === 1) {\r\n                    return pop1;\r\n                }\r\n                else {\r\n                    s_mut = pop1;\r\n                    continue popInner;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Attempt to pop UI stack when it was empty (popToLocation)\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return popInner(iterate(sold));\r\n}\r\n\r\nexport function changeLocation(name, s) {\r\n    if (s.UI.tag === 1) {\r\n        const inputRecord = iterate(s);\r\n        return new State(new UiState(1, new LocationHubState(name)), inputRecord.UIStack, inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n    }\r\n    else {\r\n        const inputRecord_1 = popToLocation(s);\r\n        return new State(new UiState(1, new LocationHubState(name)), inputRecord_1.UIStack, inputRecord_1.Animation, inputRecord_1.Previous, inputRecord_1.InteractionHistory, inputRecord_1.Log, inputRecord_1.KnownFacts, inputRecord_1.KnownPersons, inputRecord_1.Iteration, inputRecord_1.Data, inputRecord_1.Error);\r\n    }\r\n}\r\n\r\nexport function jumpWithDialogStackTo(targetRef, newStackRefs, s) {\r\n    const mapUIStack = (u) => (new UiState(0, new DialogState(u)));\r\n    const newStack = map(mapUIStack, newStackRefs);\r\n    const inputRecord = iterate(s);\r\n    return new State(setUIDialogRef(targetRef), newStack, inputRecord.Animation, inputRecord.Previous, inputRecord.InteractionHistory, inputRecord.Log, inputRecord.KnownFacts, inputRecord.KnownPersons, inputRecord.Iteration, inputRecord.Data, inputRecord.Error);\r\n}\r\n\r\nexport function ands(cond1, cond2, state) {\r\n    if (cond1(state)) {\r\n        return cond2(state);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function ors(cond1, cond2, state) {\r\n    if (cond1(state)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return cond2(state);\r\n    }\r\n}\r\n\r\nexport function withAnimation(a, s) {\r\n    return new State(s.UI, s.UIStack, a, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, s.KnownPersons, s.Iteration, s.Data, s.Error);\r\n}\r\n\r\nexport const gameVersion = \"0.2.1 alpha\";\r\n\r\n//# sourceMappingURL=State.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { change, FSharpMap__get_Item, containsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { map, defaultArg, some } from \"./.fable/fable-library.3.1.11/Option.js\";\r\nimport { State } from \"./State.fs.js\";\r\nimport { contains, append } from \"./.fable/fable-library.3.1.11/Array.js\";\r\nimport { stringHash } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { ofArray } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { printf, toText } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { toArray } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\n\r\nexport class Property {\r\n    constructor(path) {\r\n        this.path = path;\r\n        const x = this.path;\r\n    }\r\n}\r\n\r\nexport function Property$reflection() {\r\n    return class_type(\"Props.Property\", void 0, Property);\r\n}\r\n\r\nexport function Property_$ctor_Z721C83C5(path) {\r\n    return new Property(path);\r\n}\r\n\r\nexport function Property__GetRawOption_Z745B8E35(x, state) {\r\n    if (containsKey(x.path, state.Data)) {\r\n        return some(FSharpMap__get_Item(state.Data, x.path));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Property__SetRaw(x, value, state) {\r\n    return new State(state.UI, state.UIStack, state.Animation, state.Previous, state.InteractionHistory, state.Log, state.KnownFacts, state.KnownPersons, state.Iteration, change(x.path, (_arg1) => some(value), state.Data), state.Error);\r\n}\r\n\r\nexport function asBool(f) {\r\n    return f;\r\n}\r\n\r\nexport class BoolProperty extends Property {\r\n    constructor(path, defv) {\r\n        super(path);\r\n        this.path_1 = path;\r\n        this.defv = defv;\r\n    }\r\n}\r\n\r\nexport function BoolProperty$reflection() {\r\n    return class_type(\"Props.BoolProperty\", void 0, BoolProperty, Property$reflection());\r\n}\r\n\r\nexport function BoolProperty_$ctor_Z55EFCE8F(path, defv) {\r\n    return new BoolProperty(path, defv);\r\n}\r\n\r\nexport function BoolProperty__get_DefaultValue(x) {\r\n    return x.defv;\r\n}\r\n\r\nexport function BoolProperty__Set(x, value, state) {\r\n    const oValue = value;\r\n    const newData = change(x.path_1, (_arg1) => some(oValue), state.Data);\r\n    return new State(state.UI, state.UIStack, state.Animation, state.Previous, state.InteractionHistory, state.Log, state.KnownFacts, state.KnownPersons, state.Iteration, newData, state.Error);\r\n}\r\n\r\nexport function BoolProperty__Get_Z745B8E35(x, state) {\r\n    return defaultArg(map((f) => asBool(f), Property__GetRawOption_Z745B8E35(x, state)), BoolProperty__get_DefaultValue(x));\r\n}\r\n\r\nexport function BoolProperty__GetOr(x, defVal, state) {\r\n    return defaultArg(map((f) => asBool(f), Property__GetRawOption_Z745B8E35(x, state)), defVal);\r\n}\r\n\r\nexport function BoolProperty__get_GetOrFalse(x) {\r\n    return (arg10) => BoolProperty__GetOr(x, false, arg10);\r\n}\r\n\r\nexport function BoolProperty__get_GetOrTrue(x) {\r\n    return (arg10) => BoolProperty__GetOr(x, true, arg10);\r\n}\r\n\r\nexport function BoolProperty_Personal(name, propName, def) {\r\n    return BoolProperty_$ctor_Z55EFCE8F((name + \".\") + propName, def);\r\n}\r\n\r\nexport class IterationCounter extends Property {\r\n    constructor(path) {\r\n        super(path);\r\n        this.path_1 = path;\r\n        this[\"IsStarted@\"] = BoolProperty_$ctor_Z55EFCE8F((this.path_1 + \".\") + \"started\", false);\r\n    }\r\n}\r\n\r\nexport function IterationCounter$reflection() {\r\n    return class_type(\"Props.IterationCounter\", void 0, IterationCounter, Property$reflection());\r\n}\r\n\r\nexport function IterationCounter_$ctor_Z721C83C5(path) {\r\n    return new IterationCounter(path);\r\n}\r\n\r\nexport function IterationCounter__get_IsStarted(__) {\r\n    return __[\"IsStarted@\"];\r\n}\r\n\r\nexport function IterationCounter__get_DefaultValue(x) {\r\n    return 0;\r\n}\r\n\r\nexport function IterationCounter__Set(x, value, state) {\r\n    return Property__SetRaw(x, value, state);\r\n}\r\n\r\nexport function IterationCounter__Start_Z745B8E35(x, state) {\r\n    const arg10_1 = IterationCounter__Set(x, state.Iteration, state);\r\n    return BoolProperty__Set(IterationCounter__get_IsStarted(x), true, arg10_1);\r\n}\r\n\r\nexport function IterationCounter__Get_Z745B8E35(x, state) {\r\n    if (containsKey(x.path_1, state.Data) ? BoolProperty__Get_Z745B8E35(IterationCounter__get_IsStarted(x), state) : false) {\r\n        const o = FSharpMap__get_Item(state.Data, x.path_1);\r\n        return o;\r\n    }\r\n    else {\r\n        return state.Iteration | 0;\r\n    }\r\n}\r\n\r\nexport function IterationCounter__Elapsed_Z745B8E35(x, state) {\r\n    const was = IterationCounter__Get_Z745B8E35(x, state) | 0;\r\n    return (state.Iteration - was) | 0;\r\n}\r\n\r\nexport function IterationCounter_Personal(name, propName) {\r\n    return IterationCounter_$ctor_Z721C83C5((name + \".\") + propName);\r\n}\r\n\r\nexport class ListStringProperty extends Property {\r\n    constructor(path, defv) {\r\n        super(path);\r\n        this.path_1 = path;\r\n        this.defv = defv;\r\n    }\r\n}\r\n\r\nexport function ListStringProperty$reflection() {\r\n    return class_type(\"Props.ListStringProperty\", void 0, ListStringProperty, Property$reflection());\r\n}\r\n\r\nexport function ListStringProperty_$ctor_Z211F87FA(path, defv) {\r\n    return new ListStringProperty(path, defv);\r\n}\r\n\r\nexport function ListStringProperty__get_DefaultValue(x) {\r\n    return x.defv;\r\n}\r\n\r\nexport function ListStringProperty__Set(x, value, state) {\r\n    return Property__SetRaw(x, value, state);\r\n}\r\n\r\nexport function ListStringProperty__Get_Z745B8E35(x, state) {\r\n    if (containsKey(x.path_1, state.Data)) {\r\n        const o = FSharpMap__get_Item(state.Data, x.path_1);\r\n        return o;\r\n    }\r\n    else {\r\n        return ListStringProperty__get_DefaultValue(x);\r\n    }\r\n}\r\n\r\nexport function ListStringProperty__Add(x, item, state) {\r\n    const updated = append(ListStringProperty__Get_Z745B8E35(x, state), [item]);\r\n    return ListStringProperty__Set(x, updated, state);\r\n}\r\n\r\nexport function ListStringProperty__Contains(x, item, state) {\r\n    return contains(item, ListStringProperty__Get_Z745B8E35(x, state), {\r\n        Equals: (x_1, y) => (x_1 === y),\r\n        GetHashCode: (x_1) => stringHash(x_1),\r\n    });\r\n}\r\n\r\nexport function ListStringProperty__get_AsList(x) {\r\n    return (arg) => ofArray(ListStringProperty__Get_Z745B8E35(x, arg));\r\n}\r\n\r\nexport function ListStringProperty__AddNew(x, item, state) {\r\n    if (!ListStringProperty__Contains(x, item, state)) {\r\n        return ListStringProperty__Add(x, item, state);\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport function ListStringProperty__RemoveOrDie(x, item, state) {\r\n    if (ListStringProperty__Contains(x, item, state)) {\r\n        return ListStringProperty__RemoveIfPresent(x, item, state);\r\n    }\r\n    else {\r\n        let message;\r\n        const arg20 = ListStringProperty__get_AsList(x)(state);\r\n        message = toText(printf(\"Cannot remove item %A, found only %A\"))(item)(arg20);\r\n        throw (new Error(message));\r\n    }\r\n}\r\n\r\nexport function ListStringProperty__RemoveIfPresent(x, item, state) {\r\n    const newOne = ListStringProperty__Get_Z745B8E35(x, state).filter((x_1) => (x_1 !== item));\r\n    return ListStringProperty__Set(x, newOne, state);\r\n}\r\n\r\nexport function ListStringProperty_Personal(name, propName) {\r\n    return ListStringProperty_$ctor_Z211F87FA((name + \".\") + propName, []);\r\n}\r\n\r\nexport function ListStringProperty_PersonalWithDefault(name, propName, defv) {\r\n    return ListStringProperty_$ctor_Z211F87FA((name + \".\") + propName, toArray(defv));\r\n}\r\n\r\nexport function asString(f) {\r\n    return f;\r\n}\r\n\r\nexport class StringProperty extends Property {\r\n    constructor(path, defv) {\r\n        super(path);\r\n        this.path_1 = path;\r\n        this.defv = defv;\r\n    }\r\n}\r\n\r\nexport function StringProperty$reflection() {\r\n    return class_type(\"Props.StringProperty\", void 0, StringProperty, Property$reflection());\r\n}\r\n\r\nexport function StringProperty_$ctor_Z384F8060(path, defv) {\r\n    return new StringProperty(path, defv);\r\n}\r\n\r\nexport function StringProperty__get_DefaultValue(x) {\r\n    return x.defv;\r\n}\r\n\r\nexport function StringProperty__Set(x, value, state) {\r\n    const oValue = value;\r\n    const newData = change(x.path_1, (_arg1) => some(oValue), state.Data);\r\n    return new State(state.UI, state.UIStack, state.Animation, state.Previous, state.InteractionHistory, state.Log, state.KnownFacts, state.KnownPersons, state.Iteration, newData, state.Error);\r\n}\r\n\r\nexport function StringProperty__Get_Z745B8E35(x, state) {\r\n    return defaultArg(map((f) => asString(f), Property__GetRawOption_Z745B8E35(x, state)), StringProperty__get_DefaultValue(x));\r\n}\r\n\r\nexport function StringProperty_Personal(name, propName, defv) {\r\n    return StringProperty_$ctor_Z384F8060((name + \".\") + propName, defv);\r\n}\r\n\r\n//# sourceMappingURL=Props.fs.js.map\r\n","import { Record, Union } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { list_type, bool_type, option_type, record_type, lambda_type, class_type, union_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { UReference$reflection } from \"./Data.fs.js\";\r\nimport { concat, singleton, empty } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { jumpWithDialogStackTo, changeLocation, pushPerson, pushLocation, toDialog, pushDialog, popToLocation, popDialog, State$reflection, gotoDialogWindow } from \"./State.fs.js\";\r\nimport { defaultArg } from \"./.fable/fable-library.3.1.11/Option.js\";\r\nimport { BoolProperty$reflection, BoolProperty__Set, BoolProperty__get_GetOrFalse } from \"./Props.fs.js\";\r\n\r\nexport class Link extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"OptionalLink\", \"StaticLink\", \"PopLink\", \"PushLink\", \"JumpLink\", \"PushLocationLink\", \"PushPersonLink\", \"UnknownLink\"];\r\n    }\r\n}\r\n\r\nexport function Link$reflection() {\r\n    return union_type(\"Actions.Link\", [], Link, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [], [[\"Item\", UReference$reflection()]], [[\"Item\", UReference$reflection()]], [[\"Item\", string_type]], [[\"Item\", string_type]], []]);\r\n}\r\n\r\nexport class NoAction {\r\n    constructor() {\r\n    }\r\n    Exec(s) {\r\n        return s;\r\n    }\r\n    Links() {\r\n        return empty();\r\n    }\r\n    ComposeAfter(_arg1) {\r\n        throw (new Error(\"cannot compose NoAction\"));\r\n    }\r\n}\r\n\r\nexport function NoAction$reflection() {\r\n    return class_type(\"Actions.NoAction\", void 0, NoAction);\r\n}\r\n\r\nexport function NoAction_$ctor() {\r\n    return new NoAction();\r\n}\r\n\r\nexport function updateStateOptional(modify, s) {\r\n    if (modify != null) {\r\n        const m = modify;\r\n        return m(s);\r\n    }\r\n    else {\r\n        return s;\r\n    }\r\n}\r\n\r\nexport class ToWindowMod extends Record {\r\n    constructor(Target, Mod) {\r\n        super();\r\n        this.Target = Target;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(1, this$.Target));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return gotoDialogWindow(x.Target, x.Mod(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        return new ToWindowMod(x.Target, (arg) => x.Mod(m(arg)));\r\n    }\r\n}\r\n\r\nexport function ToWindowMod$reflection() {\r\n    return record_type(\"Actions.ToWindowMod\", [], ToWindowMod, () => [[\"Target\", string_type], [\"Mod\", lambda_type(State$reflection(), State$reflection())]]);\r\n}\r\n\r\nexport class ToWindow extends Record {\r\n    constructor(Target) {\r\n        super();\r\n        this.Target = Target;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(1, this$.Target));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return gotoDialogWindow(x.Target, state);\r\n    }\r\n    ComposeAfter(modifier) {\r\n        const x = this;\r\n        return new ToWindowMod(x.Target, modifier);\r\n    }\r\n}\r\n\r\nexport function ToWindow$reflection() {\r\n    return record_type(\"Actions.ToWindow\", [], ToWindow, () => [[\"Target\", string_type]]);\r\n}\r\n\r\nexport class Pop extends Record {\r\n    constructor(Mod) {\r\n        super();\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        return singleton(new Link(2));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return popDialog(defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new Pop(newMod);\r\n    }\r\n}\r\n\r\nexport function Pop$reflection() {\r\n    return record_type(\"Actions.Pop\", [], Pop, () => [[\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class PopToLocation extends Record {\r\n    constructor(Mod) {\r\n        super();\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        return singleton(new Link(2));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return popToLocation(defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new PopToLocation(newMod);\r\n    }\r\n}\r\n\r\nexport function PopToLocation$reflection() {\r\n    return record_type(\"Actions.PopToLocation\", [], PopToLocation, () => [[\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class Push extends Record {\r\n    constructor(TargetRef, Mod) {\r\n        super();\r\n        this.TargetRef = TargetRef;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(3, this$.TargetRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return pushDialog(x.TargetRef.D, x.TargetRef.W, defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new Push(x.TargetRef, newMod);\r\n    }\r\n}\r\n\r\nexport function Push$reflection() {\r\n    return record_type(\"Actions.Push\", [], Push, () => [[\"TargetRef\", UReference$reflection()], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class PopPush extends Record {\r\n    constructor(TargetRef, Mod) {\r\n        super();\r\n        this.TargetRef = TargetRef;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(3, this$.TargetRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return pushDialog(x.TargetRef.D, x.TargetRef.W, popDialog(defaultArg(x.Mod, (x_1) => x_1)(state)));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new PopPush(x.TargetRef, newMod);\r\n    }\r\n}\r\n\r\nexport function PopPush$reflection() {\r\n    return record_type(\"Actions.PopPush\", [], PopPush, () => [[\"TargetRef\", UReference$reflection()], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class Jump extends Record {\r\n    constructor(TargetRef, Mod) {\r\n        super();\r\n        this.TargetRef = TargetRef;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(4, this$.TargetRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return toDialog(x.TargetRef.D, x.TargetRef.W, defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new Jump(x.TargetRef, newMod);\r\n    }\r\n}\r\n\r\nexport function Jump$reflection() {\r\n    return record_type(\"Actions.Jump\", [], Jump, () => [[\"TargetRef\", UReference$reflection()], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class PushLocation extends Record {\r\n    constructor(LocationRef, Mod) {\r\n        super();\r\n        this.LocationRef = LocationRef;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(5, this$.LocationRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return pushLocation(x.LocationRef, defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new PushLocation(x.LocationRef, newMod);\r\n    }\r\n}\r\n\r\nexport function PushLocation$reflection() {\r\n    return record_type(\"Actions.PushLocation\", [], PushLocation, () => [[\"LocationRef\", string_type], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class PushPersonDialog extends Record {\r\n    constructor(PersonHubRef, Mod, SpecificAction) {\r\n        super();\r\n        this.PersonHubRef = PersonHubRef;\r\n        this.Mod = Mod;\r\n        this.SpecificAction = SpecificAction;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(6, this$.PersonHubRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        const newState = pushPerson(x.PersonHubRef, defaultArg(x.Mod, (x_1) => x_1)(state));\r\n        const matchValue = x.SpecificAction;\r\n        if (matchValue == null) {\r\n            return newState;\r\n        }\r\n        else {\r\n            const act = matchValue;\r\n            return act.Exec(newState);\r\n        }\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new PushPersonDialog(x.PersonHubRef, newMod, x.SpecificAction);\r\n    }\r\n}\r\n\r\nexport function PushPersonDialog$reflection() {\r\n    return record_type(\"Actions.PushPersonDialog\", [], PushPersonDialog, () => [[\"PersonHubRef\", string_type], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))], [\"SpecificAction\", option_type(class_type(\"Actions.IAction\"))]]);\r\n}\r\n\r\nexport class ChangeLocation extends Record {\r\n    constructor(LocationRef, Mod) {\r\n        super();\r\n        this.LocationRef = LocationRef;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(5, this$.LocationRef));\r\n    }\r\n    Exec(state) {\r\n        const x = this;\r\n        return changeLocation(x.LocationRef, defaultArg(x.Mod, (x_1) => x_1)(state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new ChangeLocation(x.LocationRef, newMod);\r\n    }\r\n}\r\n\r\nexport function ChangeLocation$reflection() {\r\n    return record_type(\"Actions.ChangeLocation\", [], ChangeLocation, () => [[\"LocationRef\", string_type], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nfunction linksFromTwo(a, b) {\r\n    return concat([a.Links(), b.Links()]);\r\n}\r\n\r\nexport class Conditional extends Record {\r\n    constructor(Predicate, OnTrue, OnFalse) {\r\n        super();\r\n        this.Predicate = Predicate;\r\n        this.OnTrue = OnTrue;\r\n        this.OnFalse = OnFalse;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return linksFromTwo(this$.OnTrue, this$.OnFalse);\r\n    }\r\n    Exec(state) {\r\n        const this$ = this;\r\n        return this$.Predicate(state) ? this$.OnTrue.Exec(state) : this$.OnFalse.Exec(state);\r\n    }\r\n    ComposeAfter(m) {\r\n        const this$ = this;\r\n        return new Conditional(this$.Predicate, this$.OnTrue.ComposeAfter(m), this$.OnFalse.ComposeAfter(m));\r\n    }\r\n}\r\n\r\nexport function Conditional$reflection() {\r\n    return record_type(\"Actions.Conditional\", [], Conditional, () => [[\"Predicate\", lambda_type(State$reflection(), bool_type)], [\"OnTrue\", class_type(\"Actions.IAction\")], [\"OnFalse\", class_type(\"Actions.IAction\")]]);\r\n}\r\n\r\nexport class MoveWithNewStack extends Record {\r\n    constructor(Stack, Target, Mod) {\r\n        super();\r\n        this.Stack = Stack;\r\n        this.Target = Target;\r\n        this.Mod = Mod;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return singleton(new Link(4, this$.Target));\r\n    }\r\n    Exec(state) {\r\n        const this$ = this;\r\n        return jumpWithDialogStackTo(this$.Target, this$.Stack, updateStateOptional(this$.Mod, state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const x = this;\r\n        let newMod;\r\n        const matchValue = x.Mod;\r\n        if (matchValue != null) {\r\n            const old = matchValue;\r\n            newMod = ((arg) => old(m(arg)));\r\n        }\r\n        else {\r\n            newMod = m;\r\n        }\r\n        return new MoveWithNewStack(x.Stack, x.Target, newMod);\r\n    }\r\n}\r\n\r\nexport function MoveWithNewStack$reflection() {\r\n    return record_type(\"Actions.MoveWithNewStack\", [], MoveWithNewStack, () => [[\"Stack\", list_type(UReference$reflection())], [\"Target\", UReference$reflection()], [\"Mod\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class OnlyOnce extends Record {\r\n    constructor(Property, DoOnce, DoOther) {\r\n        super();\r\n        this.Property = Property;\r\n        this.DoOnce = DoOnce;\r\n        this.DoOther = DoOther;\r\n    }\r\n    Links() {\r\n        const this$ = this;\r\n        return linksFromTwo(this$.DoOnce, this$.DoOther);\r\n    }\r\n    Exec(state) {\r\n        const this$ = this;\r\n        return BoolProperty__get_GetOrFalse(this$.Property)(state) ? this$.DoOther.Exec(state) : this$.DoOnce.Exec(BoolProperty__Set(this$.Property, true, state));\r\n    }\r\n    ComposeAfter(m) {\r\n        const this$ = this;\r\n        return new OnlyOnce(this$.Property, this$.DoOnce.ComposeAfter(m), this$.DoOther.ComposeAfter(m));\r\n    }\r\n}\r\n\r\nexport function OnlyOnce$reflection() {\r\n    return record_type(\"Actions.OnlyOnce\", [], OnlyOnce, () => [[\"Property\", BoolProperty$reflection()], [\"DoOnce\", class_type(\"Actions.IAction\")], [\"DoOther\", class_type(\"Actions.IAction\")]]);\r\n}\r\n\r\n//# sourceMappingURL=Actions.fs.js.map\r\n","import { toString as toString_1, Union } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { union_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { split, endsWith, substring } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { FSharpMap__get_Item, containsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { fold as fold_1, singleton, empty, reverse, tail as tail_1, head, isEmpty, cons } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { map, fold } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\n\r\nexport class RichTextElement extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Bold\", \"HighlightedAsValue\"];\r\n    }\r\n}\r\n\r\nexport function RichTextElement$reflection() {\r\n    return union_type(\"RichText.RichTextElement\", [], RichTextElement, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]]]);\r\n}\r\n\r\nexport function removeBraces(sWithBraces) {\r\n    return substring(sWithBraces, 1, sWithBraces.length - 2);\r\n}\r\n\r\nexport function parse(txt, state) {\r\n    const replaceVar = (sWithBraces) => {\r\n        const s = removeBraces(sWithBraces);\r\n        if (containsKey(s, state.Data)) {\r\n            return new RichTextElement(2, toString_1(FSharpMap__get_Item(state.Data, s)));\r\n        }\r\n        else {\r\n            return new RichTextElement(1, s);\r\n        }\r\n    };\r\n    const isVar = (s_1) => {\r\n        if (s_1.indexOf(\"(\") === 0) {\r\n            return endsWith(s_1, \")\");\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    const isHighlighted = (s_2) => {\r\n        if ((s_2.indexOf(\"!\") === 0) ? endsWith(s_2, \"!\") : false) {\r\n            return s_2.length > 2;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    const mapper = (el) => {\r\n        if (isVar(el)) {\r\n            return replaceVar(el);\r\n        }\r\n        else if (isHighlighted(el)) {\r\n            return new RichTextElement(1, removeBraces(el));\r\n        }\r\n        else {\r\n            return new RichTextElement(0, el);\r\n        }\r\n    };\r\n    const uniteTextNodes = (acc, el_1) => {\r\n        if (el_1.tag === 0) {\r\n            const s_3 = el_1.fields[0];\r\n            let pattern_matching_result, t, tail;\r\n            if (!isEmpty(acc)) {\r\n                if (head(acc).tag === 0) {\r\n                    pattern_matching_result = 0;\r\n                    t = head(acc).fields[0];\r\n                    tail = tail_1(acc);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    return cons(new RichTextElement(0, t + s_3), tail);\r\n                }\r\n                case 1: {\r\n                    return cons(el_1, acc);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return cons(el_1, acc);\r\n        }\r\n    };\r\n    return reverse(fold(uniteTextNodes, empty(), map(mapper, split(txt, [\"*\"], null, 0))));\r\n}\r\n\r\nexport function text(txt) {\r\n    return singleton(new RichTextElement(0, txt));\r\n}\r\n\r\nexport function bold(txt) {\r\n    return new RichTextElement(1, txt);\r\n}\r\n\r\nexport function toString(rt) {\r\n    return fold_1((acc, el) => {\r\n        switch (el.tag) {\r\n            case 2: {\r\n                const t_1 = el.fields[0];\r\n                return acc + t_1;\r\n            }\r\n            case 1: {\r\n                const t_2 = el.fields[0];\r\n                return ((acc + \"*\") + t_2) + \"*\";\r\n            }\r\n            default: {\r\n                const t = el.fields[0];\r\n                return acc + t;\r\n            }\r\n        }\r\n    }, \"\", rt);\r\n}\r\n\r\n//# sourceMappingURL=RichText.fs.js.map\r\n","import { Record, Union } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { list_type, option_type, record_type, class_type, lambda_type, bool_type, union_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { State$reflection } from \"./State.fs.js\";\r\nimport { PopPush, Push, ToWindow } from \"./Actions.fs.js\";\r\nimport { parse, text as text_1, RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { GlobalRepository$1_$ctor, UReference$reflection } from \"./Data.fs.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { randomOfListWithSeed } from \"./Utils.fs.js\";\r\n\r\nexport class DialogOptionLock extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Reason\", \"Unlocked\", \"Hidden\"];\r\n    }\r\n}\r\n\r\nexport function DialogOptionLock$reflection() {\r\n    return union_type(\"Dialog.DialogOptionLock\", [], DialogOptionLock, () => [[[\"Item\", string_type]], [], []]);\r\n}\r\n\r\nexport class DialogOptionLockFunction extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Locked\", \"MayBeHidden\", \"AlwaysUnlocked\"];\r\n    }\r\n}\r\n\r\nexport function DialogOptionLockFunction$reflection() {\r\n    return union_type(\"Dialog.DialogOptionLockFunction\", [], DialogOptionLockFunction, () => [[[\"Item1\", string_type], [\"Item2\", lambda_type(State$reflection(), bool_type)]], [[\"Item\", lambda_type(State$reflection(), bool_type)]], []]);\r\n}\r\n\r\nexport class DialogVariant extends Record {\r\n    constructor(Text$, Action, Locked) {\r\n        super();\r\n        this.Text = Text$;\r\n        this.Action = Action;\r\n        this.Locked = Locked;\r\n    }\r\n}\r\n\r\nexport function DialogVariant$reflection() {\r\n    return record_type(\"Dialog.DialogVariant\", [], DialogVariant, () => [[\"Text\", string_type], [\"Action\", class_type(\"Actions.IAction\")], [\"Locked\", DialogOptionLockFunction$reflection()]]);\r\n}\r\n\r\nexport function DialogVariant__IsLocked_Z745B8E35(x, s_1) {\r\n    const matchValue = x.Locked;\r\n    switch (matchValue.tag) {\r\n        case 2: {\r\n            return new DialogOptionLock(1);\r\n        }\r\n        case 1: {\r\n            const func_1 = matchValue.fields[0];\r\n            if (func_1(s_1)) {\r\n                return new DialogOptionLock(1);\r\n            }\r\n            else {\r\n                return new DialogOptionLock(2);\r\n            }\r\n        }\r\n        default: {\r\n            const reason = matchValue.fields[0];\r\n            const func = matchValue.fields[1];\r\n            if (func(s_1)) {\r\n                return new DialogOptionLock(1);\r\n            }\r\n            else {\r\n                return new DialogOptionLock(0, reason);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function makeUnlockedVariant(text, action) {\r\n    return new DialogVariant(text, action, new DialogOptionLockFunction(2));\r\n}\r\n\r\nexport function makeLockedVariant(reason, predicate, text, action) {\r\n    return new DialogVariant(text, action, new DialogOptionLockFunction(0, reason, predicate));\r\n}\r\n\r\nexport function makeHiddenVariant(predicate, text, action) {\r\n    return new DialogVariant(text, action, new DialogOptionLockFunction(1, predicate));\r\n}\r\n\r\nexport function toWindow(target) {\r\n    return new ToWindow(target);\r\n}\r\n\r\nexport function pushWindowRef(target) {\r\n    return new Push(target, void 0);\r\n}\r\n\r\nexport function popPushWindowRef(target) {\r\n    return new PopPush(target, void 0);\r\n}\r\n\r\nexport class TextDialogWindow extends Record {\r\n    constructor(Name, Actor, Text$, Variants, OnEntry) {\r\n        super();\r\n        this.Name = Name;\r\n        this.Actor = Actor;\r\n        this.Text = Text$;\r\n        this.Variants = Variants;\r\n        this.OnEntry = OnEntry;\r\n    }\r\n}\r\n\r\nexport function TextDialogWindow$reflection() {\r\n    return record_type(\"Dialog.TextDialogWindow\", [], TextDialogWindow, () => [[\"Name\", string_type], [\"Actor\", option_type(string_type)], [\"Text\", lambda_type(State$reflection(), list_type(RichTextElement$reflection()))], [\"Variants\", lambda_type(State$reflection(), list_type(DialogVariant$reflection()))], [\"OnEntry\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport class ProxyWindow extends Record {\r\n    constructor(Name, Action) {\r\n        super();\r\n        this.Name = Name;\r\n        this.Action = Action;\r\n    }\r\n}\r\n\r\nexport function ProxyWindow$reflection() {\r\n    return record_type(\"Dialog.ProxyWindow\", [], ProxyWindow, () => [[\"Name\", string_type], [\"Action\", lambda_type(State$reflection(), class_type(\"Actions.IAction\"))]]);\r\n}\r\n\r\nexport class DialogWindow extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Proxy\", \"TextWindow\"];\r\n    }\r\n}\r\n\r\nexport function DialogWindow$reflection() {\r\n    return union_type(\"Dialog.DialogWindow\", [], DialogWindow, () => [[[\"Item\", ProxyWindow$reflection()]], [[\"Item\", TextDialogWindow$reflection()]]]);\r\n}\r\n\r\nexport function DialogWindow__GetName(x) {\r\n    if (x.tag === 1) {\r\n        const w = x.fields[0];\r\n        return w.Name;\r\n    }\r\n    else {\r\n        const p = x.fields[0];\r\n        return p.Name;\r\n    }\r\n}\r\n\r\nexport class Dialog extends Record {\r\n    constructor(Name, DialogWindows, DefaultWindow) {\r\n        super();\r\n        this.Name = Name;\r\n        this.DialogWindows = DialogWindows;\r\n        this.DefaultWindow = DefaultWindow;\r\n    }\r\n}\r\n\r\nexport function Dialog$reflection() {\r\n    return record_type(\"Dialog.Dialog\", [], Dialog, () => [[\"Name\", string_type], [\"DialogWindows\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, DialogWindow$reflection()])], [\"DefaultWindow\", option_type(lambda_type(State$reflection(), UReference$reflection()))]]);\r\n}\r\n\r\nexport const REPO_DIALOG = GlobalRepository$1_$ctor();\r\n\r\nexport function stxt(text, _arg1) {\r\n    return text_1(text);\r\n}\r\n\r\nexport function randomTextOf(text, state) {\r\n    const options = map((txt) => ((state_1) => parse(txt, state_1)), text);\r\n    return randomOfListWithSeed(options, state.Iteration)(state);\r\n}\r\n\r\nexport function ctxt(predicate, text1, text2) {\r\n    const t1 = (state) => parse(text1, state);\r\n    const t2 = (state_1) => parse(text2, state_1);\r\n    return (s_1) => (predicate(s_1) ? t1(s_1) : t2(s_1));\r\n}\r\n\r\nexport function ptxt(text) {\r\n    return (state) => parse(text, state);\r\n}\r\n\r\nexport const str = (txt) => text_1(txt);\r\n\r\nexport function s(x, _arg1) {\r\n    return x;\r\n}\r\n\r\nexport function dialogWindow(name, actor, textGen, variants) {\r\n    return new TextDialogWindow(name, actor, textGen, variants, void 0);\r\n}\r\n\r\n//# sourceMappingURL=Dialog.fs.js.map\r\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { record_type, option_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\n\r\nexport class HubDesign extends Record {\r\n    constructor(Color) {\r\n        super();\r\n        this.Color = Color;\r\n    }\r\n}\r\n\r\nexport function HubDesign$reflection() {\r\n    return record_type(\"HubDesign.HubDesign\", [], HubDesign, () => [[\"Color\", option_type(string_type)]]);\r\n}\r\n\r\nexport const defaultDesign = new HubDesign(void 0);\r\n\r\n//# sourceMappingURL=HubDesign.fs.js.map\r\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { lambda_type, list_type, record_type, option_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { DialogVariant$reflection } from \"./Dialog.fs.js\";\r\nimport { State$reflection } from \"./State.fs.js\";\r\nimport { RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { HubDesign$reflection } from \"./HubDesign.fs.js\";\r\nimport { GlobalRepository$1_$ctor } from \"./Data.fs.js\";\r\n\r\nexport class LocationHubVariant extends Record {\r\n    constructor(Pic, Variant) {\r\n        super();\r\n        this.Pic = Pic;\r\n        this.Variant = Variant;\r\n    }\r\n}\r\n\r\nexport function LocationHubVariant$reflection() {\r\n    return record_type(\"LocationHub.LocationHubVariant\", [], LocationHubVariant, () => [[\"Pic\", option_type(string_type)], [\"Variant\", DialogVariant$reflection()]]);\r\n}\r\n\r\nexport class LocationHub extends Record {\r\n    constructor(Locations, Persons, Variants, Description, Name, Design) {\r\n        super();\r\n        this.Locations = Locations;\r\n        this.Persons = Persons;\r\n        this.Variants = Variants;\r\n        this.Description = Description;\r\n        this.Name = Name;\r\n        this.Design = Design;\r\n    }\r\n}\r\n\r\nexport function LocationHub$reflection() {\r\n    return record_type(\"LocationHub.LocationHub\", [], LocationHub, () => [[\"Locations\", list_type(LocationHubVariant$reflection())], [\"Persons\", lambda_type(State$reflection(), list_type(LocationHubVariant$reflection()))], [\"Variants\", lambda_type(State$reflection(), list_type(DialogVariant$reflection()))], [\"Description\", lambda_type(State$reflection(), list_type(RichTextElement$reflection()))], [\"Name\", string_type], [\"Design\", HubDesign$reflection()]]);\r\n}\r\n\r\nexport const REPO_LOCATIONS = GlobalRepository$1_$ctor();\r\n\r\nexport function makeLocationVariant(var$, pic) {\r\n    return new LocationHubVariant(pic, var$);\r\n}\r\n\r\nexport function makePicturelessLocationVariant(var$) {\r\n    return new LocationHubVariant(void 0, var$);\r\n}\r\n\r\n//# sourceMappingURL=LocationHub.fs.js.map\r\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { list_type, lambda_type, option_type, string_type, record_type, bool_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { DialogVariant$reflection } from \"./Dialog.fs.js\";\r\nimport { State$reflection } from \"./State.fs.js\";\r\nimport { Jump$reflection } from \"./Actions.fs.js\";\r\nimport { RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { HubDesign$reflection } from \"./HubDesign.fs.js\";\r\nimport { GlobalRepository$1_$ctor } from \"./Data.fs.js\";\r\n\r\nexport class AllowedInteractions extends Record {\r\n    constructor(AllowedTalkAbout, AllowedGive) {\r\n        super();\r\n        this.AllowedTalkAbout = AllowedTalkAbout;\r\n        this.AllowedGive = AllowedGive;\r\n    }\r\n}\r\n\r\nexport function AllowedInteractions$reflection() {\r\n    return record_type(\"PersonHub.AllowedInteractions\", [], AllowedInteractions, () => [[\"AllowedTalkAbout\", bool_type], [\"AllowedGive\", bool_type]]);\r\n}\r\n\r\nexport function AllowedInteractions_get_All() {\r\n    return new AllowedInteractions(true, true);\r\n}\r\n\r\nexport function AllowedInteractions_get_Nothing() {\r\n    return new AllowedInteractions(false, false);\r\n}\r\n\r\nexport function AllowedInteractions_get_OnlyTalk() {\r\n    return new AllowedInteractions(true, AllowedInteractions_get_Nothing().AllowedGive);\r\n}\r\n\r\nexport class PersonHubVariant extends Record {\r\n    constructor(Pic, Variant) {\r\n        super();\r\n        this.Pic = Pic;\r\n        this.Variant = Variant;\r\n    }\r\n}\r\n\r\nexport function PersonHubVariant$reflection() {\r\n    return record_type(\"PersonHub.PersonHubVariant\", [], PersonHubVariant, () => [[\"Pic\", option_type(string_type)], [\"Variant\", DialogVariant$reflection()]]);\r\n}\r\n\r\nexport class PersonHub extends Record {\r\n    constructor(StartingDialog, Variants, Description, Name, FactsDialogLink, Allowed, Design, ExitVariant) {\r\n        super();\r\n        this.StartingDialog = StartingDialog;\r\n        this.Variants = Variants;\r\n        this.Description = Description;\r\n        this.Name = Name;\r\n        this.FactsDialogLink = FactsDialogLink;\r\n        this.Allowed = Allowed;\r\n        this.Design = Design;\r\n        this.ExitVariant = ExitVariant;\r\n    }\r\n}\r\n\r\nexport function PersonHub$reflection() {\r\n    return record_type(\"PersonHub.PersonHub\", [], PersonHub, () => [[\"StartingDialog\", lambda_type(State$reflection(), option_type(Jump$reflection()))], [\"Variants\", lambda_type(State$reflection(), list_type(DialogVariant$reflection()))], [\"Description\", lambda_type(State$reflection(), list_type(RichTextElement$reflection()))], [\"Name\", string_type], [\"FactsDialogLink\", string_type], [\"Allowed\", lambda_type(State$reflection(), AllowedInteractions$reflection())], [\"Design\", HubDesign$reflection()], [\"ExitVariant\", DialogVariant$reflection()]]);\r\n}\r\n\r\nexport const REPO_PERSON_HUBS = GlobalRepository$1_$ctor();\r\n\r\nexport function makePersonVariant(var$, pic) {\r\n    return new PersonHubVariant(pic, var$);\r\n}\r\n\r\nexport function makePicturelessPersonVariant(var$) {\r\n    return new PersonHubVariant(void 0, var$);\r\n}\r\n\r\n//# sourceMappingURL=PersonHub.fs.js.map\r\n","import { toConsole, printf, toText } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { resetAll, resetGlobal, getGlobal } from \"./Data.fs.js\";\r\nimport { REPO_DIALOG } from \"./Dialog.fs.js\";\r\nimport { FSharpMap__get_Item, toList, containsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { REPO_LOCATIONS } from \"./LocationHub.fs.js\";\r\nimport { Operators_FailurePattern } from \"./.fable/fable-library.3.1.11/FSharp.Core.js\";\r\nimport { State, ErrorInfo } from \"./State.fs.js\";\r\nimport { REPO_PERSON_HUBS } from \"./PersonHub.fs.js\";\r\nimport { toString } from \"./.fable/fable-library.3.1.11/Types.js\";\r\n\r\nexport function lookupCurrentDialogWindow(s) {\r\n    const getFromUi = (_arg1) => {\r\n        if (_arg1.tag === 0) {\r\n            const d = _arg1.fields[0];\r\n            return d.Reference;\r\n        }\r\n        else {\r\n            const s_1 = _arg1;\r\n            throw (new Error(toText(printf(\"Cannot get current dialog window while in %A\"))(s_1)));\r\n        }\r\n    };\r\n    const reference = getFromUi(s.UI);\r\n    const dialog = getGlobal(REPO_DIALOG, reference.D);\r\n    if (!containsKey(reference.W, dialog.DialogWindows)) {\r\n        let message;\r\n        const arg30 = map((tuple) => tuple[0], toList(dialog.DialogWindows));\r\n        message = toText(printf(\"Reference error: Window \\u003c%s\\u003e not found in Dialog \\u003c%s\\u003e, found: %A\"))(reference.W)(reference.D)(arg30);\r\n        throw (new Error(message));\r\n    }\r\n    return FSharpMap__get_Item(dialog.DialogWindows, reference.W);\r\n}\r\n\r\nexport function lookupCurrentLocation(s) {\r\n    const getFromUi = (_arg1) => {\r\n        if (_arg1.tag === 1) {\r\n            const l = _arg1.fields[0];\r\n            return l.LocReference;\r\n        }\r\n        else {\r\n            const s_1 = _arg1;\r\n            throw (new Error(toText(printf(\"Cannot get current location window while in %A\"))(s_1)));\r\n        }\r\n    };\r\n    const reference = getFromUi(s.UI);\r\n    return getGlobal(REPO_LOCATIONS, reference);\r\n}\r\n\r\nexport function executeCurrentDialogWindow(s) {\r\n    const dialogWindow = lookupCurrentDialogWindow(s);\r\n    if (dialogWindow.tag === 1) {\r\n        const tw = dialogWindow.fields[0];\r\n        const matchValue = tw.OnEntry;\r\n        if (matchValue != null) {\r\n            const m = matchValue;\r\n            return m(s);\r\n        }\r\n        else {\r\n            return s;\r\n        }\r\n    }\r\n    else {\r\n        const proxy = dialogWindow.fields[0];\r\n        toConsole(printf(\"Executing proxy window %A\"))(proxy.Name);\r\n        return execute(proxy.Action(s), s);\r\n    }\r\n}\r\n\r\nexport function execute(a, s) {\r\n    try {\r\n        const updatedState = a.Exec(s);\r\n        const matchValue = updatedState.UI;\r\n        switch (matchValue.tag) {\r\n            case 0: {\r\n                const d = matchValue.fields[0];\r\n                return executeCurrentDialogWindow(updatedState);\r\n            }\r\n            case 2: {\r\n                const p = matchValue.fields[0];\r\n                const person = getGlobal(REPO_PERSON_HUBS, p.PersonHubReference);\r\n                const matchValue_1 = person.StartingDialog(updatedState);\r\n                if (matchValue_1 != null) {\r\n                    const act = matchValue_1;\r\n                    return execute(act, updatedState);\r\n                }\r\n                else {\r\n                    return updatedState;\r\n                }\r\n            }\r\n            default: {\r\n                return updatedState;\r\n            }\r\n        }\r\n    }\r\n    catch (matchValue_2) {\r\n        const activePatternResult12204 = Operators_FailurePattern(matchValue_2);\r\n        if (activePatternResult12204 != null) {\r\n            const f = activePatternResult12204;\r\n            return new State(s.UI, s.UIStack, s.Animation, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, s.KnownPersons, s.Iteration, s.Data, new ErrorInfo(f));\r\n        }\r\n        else {\r\n            throw matchValue_2;\r\n        }\r\n    }\r\n}\r\n\r\nlet _gameToLoadOption = void 0;\r\n\r\nexport function setGameRunner(game) {\r\n    if (_gameToLoadOption != null) {\r\n        throw (new Error(\"Trying to load game when game was already loaded: \" + toString(game)));\r\n    }\r\n    else {\r\n        _gameToLoadOption = game;\r\n        toConsole(printf(\"loading game...\"));\r\n        game.Build();\r\n    }\r\n}\r\n\r\nexport function getGameRunner() {\r\n    if (_gameToLoadOption != null) {\r\n        const g = _gameToLoadOption;\r\n        return g;\r\n    }\r\n    else {\r\n        throw (new Error(\"no game to load\"));\r\n    }\r\n}\r\n\r\nexport function reset() {\r\n    resetGlobal(REPO_DIALOG);\r\n    resetAll();\r\n}\r\n\r\n//# sourceMappingURL=Engine.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { FSharpMap__get_Item, FSharpMap__ContainsKey, ofList } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\n\r\nexport class Role {\r\n    constructor(roleIdentifier) {\r\n        this.roleIdentifier = roleIdentifier;\r\n    }\r\n}\r\n\r\nexport function Role$reflection() {\r\n    return class_type(\"RoleModel.Role\", void 0, Role);\r\n}\r\n\r\nexport function Role_$ctor_Z721C83C5(roleIdentifier) {\r\n    return new Role(roleIdentifier);\r\n}\r\n\r\nexport function Role__get_RoleId(x) {\r\n    return x.roleIdentifier;\r\n}\r\n\r\nexport class RoleModel {\r\n    constructor(rolesList) {\r\n        this.roles = ofList(map((r) => [Role__get_RoleId(r), r], rolesList));\r\n    }\r\n}\r\n\r\nexport function RoleModel$reflection() {\r\n    return class_type(\"RoleModel.RoleModel\", void 0, RoleModel);\r\n}\r\n\r\nexport function RoleModel_$ctor_Z1C2BA672(rolesList) {\r\n    return new RoleModel(rolesList);\r\n}\r\n\r\nexport function RoleModel__Roles(x) {\r\n    return x.roles;\r\n}\r\n\r\nexport function RoleModel__CanBe_Z721C83C5(x, roleId) {\r\n    return FSharpMap__ContainsKey(x.roles, roleId);\r\n}\r\n\r\nexport function RoleModel__CanBe_37472BC4(x, role) {\r\n    return FSharpMap__ContainsKey(x.roles, Role__get_RoleId(role));\r\n}\r\n\r\nexport function RoleModel__As_Z721C83C5(x, roleId) {\r\n    return FSharpMap__get_Item(x.roles, roleId);\r\n}\r\n\r\nexport function RoleModel__As_37472BC4(x, role) {\r\n    return FSharpMap__get_Item(x.roles, Role__get_RoleId(role));\r\n}\r\n\r\nexport function RoleModel__AsOption_Z721C83C5(x, roleId) {\r\n    if (RoleModel__CanBe_Z721C83C5(x, roleId)) {\r\n        return FSharpMap__get_Item(x.roles, roleId);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RoleModel__AsOption_37472BC4(x, role) {\r\n    if (RoleModel__CanBe_37472BC4(x, role)) {\r\n        return FSharpMap__get_Item(x.roles, Role__get_RoleId(role));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=RoleModel.fs.js.map\r\n","import { RoleModel__AsOption_Z721C83C5, Role$reflection, Role, RoleModel_$ctor_Z1C2BA672 } from \"./RoleModel.fs.js\";\r\nimport { empty } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { StringProperty_Personal } from \"./Props.fs.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/Option.js\";\r\nimport { save, GlobalRepository$1_$ctor } from \"./Data.fs.js\";\r\nimport { FSharpMap__Add, FSharpMap__ContainsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { empty as empty_1 } from \"./.fable/fable-library.3.1.11/Set.js\";\r\nimport { comparePrimitives } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { State } from \"./State.fs.js\";\r\n\r\nexport class Person {\r\n    constructor(name, dispalyName) {\r\n        this.dispalyName = dispalyName;\r\n        this[\"Name@\"] = name;\r\n        this[\"DefaultDisplayName@\"] = this.dispalyName;\r\n    }\r\n    [\"Person.Person.DisplayNameZ745B8E35\"](state) {\r\n        const _ = this;\r\n        return _.dispalyName;\r\n    }\r\n    [\"Person.Person.Roles\"]() {\r\n        return RoleModel_$ctor_Z1C2BA672(empty());\r\n    }\r\n}\r\n\r\nexport function Person$reflection() {\r\n    return class_type(\"Person.Person\", void 0, Person);\r\n}\r\n\r\nexport function Person_$ctor_Z384F8060(name, dispalyName) {\r\n    return new Person(name, dispalyName);\r\n}\r\n\r\nexport function Person__get_Name(__) {\r\n    return __[\"Name@\"];\r\n}\r\n\r\nexport function Person__get_DefaultDisplayName(__) {\r\n    return __[\"DefaultDisplayName@\"];\r\n}\r\n\r\nexport const IN_LOCATION_ID = \"inLocation\";\r\n\r\nexport class InLocation extends Role {\r\n    constructor(name, defaultLocation) {\r\n        super(IN_LOCATION_ID);\r\n        this[\"CurrentLocation@\"] = StringProperty_Personal(name, \"currentLocation\", defaultLocation);\r\n    }\r\n}\r\n\r\nexport function InLocation$reflection() {\r\n    return class_type(\"Person.InLocation\", void 0, InLocation, Role$reflection());\r\n}\r\n\r\nexport function InLocation_$ctor_Z384F8060(name, defaultLocation) {\r\n    return new InLocation(name, defaultLocation);\r\n}\r\n\r\nexport function InLocation__get_CurrentLocation(__) {\r\n    return __[\"CurrentLocation@\"];\r\n}\r\n\r\nexport function asInLocation(p) {\r\n    return map((x) => x, RoleModel__AsOption_Z721C83C5(p[\"Person.Person.Roles\"](), IN_LOCATION_ID));\r\n}\r\n\r\nexport const REPO_PERSONS = GlobalRepository$1_$ctor();\r\n\r\nexport function savePers(p) {\r\n    return save(REPO_PERSONS, Person__get_Name(p), p);\r\n}\r\n\r\nexport function doesKnowPersonName(p, s) {\r\n    return FSharpMap__ContainsKey(s.KnownPersons, p);\r\n}\r\n\r\nexport function meetPersonName(p, s) {\r\n    if (doesKnowPersonName(p, s)) {\r\n        return s;\r\n    }\r\n    else {\r\n        return new State(s.UI, s.UIStack, s.Animation, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, FSharpMap__Add(s.KnownPersons, p, empty_1({\r\n            Compare: (x, y) => comparePrimitives(x, y),\r\n        })), s.Iteration, s.Data, s.Error);\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=Person.fs.js.map\r\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { record_type, option_type, lambda_type, bool_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { State, State$reflection } from \"./State.fs.js\";\r\nimport { toText, printf, toConsole } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { FSharpSet__Remove, FSharpSet__Contains, FSharpSet__Add } from \"./.fable/fable-library.3.1.11/Set.js\";\r\nimport { add, FSharpMap__get_Item, FSharpMap__ContainsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { meetPersonName } from \"./Person.fs.js\";\r\nimport { getGlobal, dumpGlobalKeys, keyExists, save, GlobalRepository$1_$ctor } from \"./Data.fs.js\";\r\nimport { filter } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { toList } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\n\r\nexport function makePersonalId(person, id) {\r\n    return (person + \"::\") + id;\r\n}\r\n\r\nexport function isGeneral(s) {\r\n    return !(s.indexOf(\"::\") >= 0);\r\n}\r\n\r\nexport function isPersonal(s) {\r\n    return !isGeneral(s);\r\n}\r\n\r\nexport class Fact extends Record {\r\n    constructor(FactId, Description, Deniable, Name, ActionOnAcquisition) {\r\n        super();\r\n        this.FactId = FactId;\r\n        this.Description = Description;\r\n        this.Deniable = Deniable;\r\n        this.Name = Name;\r\n        this.ActionOnAcquisition = ActionOnAcquisition;\r\n    }\r\n}\r\n\r\nexport function Fact$reflection() {\r\n    return record_type(\"Facts.Fact\", [], Fact, () => [[\"FactId\", string_type], [\"Description\", string_type], [\"Deniable\", bool_type], [\"Name\", string_type], [\"ActionOnAcquisition\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport function Fact__Acquire_Z745B8E35(x, state) {\r\n    let newState;\r\n    const matchValue = x.ActionOnAcquisition;\r\n    if (matchValue == null) {\r\n        newState = state;\r\n    }\r\n    else {\r\n        const m = matchValue;\r\n        newState = m(state);\r\n    }\r\n    toConsole(printf(\"Accuired fact: %A %s\"))(x.FactId)(x.Description);\r\n    return new State(newState.UI, newState.UIStack, newState.Animation, newState.Previous, newState.InteractionHistory, newState.Log, FSharpSet__Add(newState.KnownFacts, x.FactId), newState.KnownPersons, newState.Iteration, newState.Data, newState.Error);\r\n}\r\n\r\nexport function Fact__IsKnown_Z745B8E35(x, state) {\r\n    return FSharpSet__Contains(state.KnownFacts, x.FactId);\r\n}\r\n\r\nexport function Fact__Deny_Z745B8E35(x, state) {\r\n    if (x.Deniable ? Fact__IsKnown_Z745B8E35(x, state) : false) {\r\n        return new State(state.UI, state.UIStack, state.Animation, state.Previous, state.InteractionHistory, state.Log, FSharpSet__Remove(state.KnownFacts, x.FactId), state.KnownPersons, state.Iteration, state.Data, state.Error);\r\n    }\r\n    else if (!x.Deniable) {\r\n        const message = toText(printf(\"Trying to deny \\u0027%s\\u0027, while it is not marked as deniable fact\"))(x.FactId);\r\n        throw (new Error(message));\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class PersonFact extends Record {\r\n    constructor(FactId, PersonName, Name, Description) {\r\n        super();\r\n        this.FactId = FactId;\r\n        this.PersonName = PersonName;\r\n        this.Name = Name;\r\n        this.Description = Description;\r\n    }\r\n}\r\n\r\nexport function PersonFact$reflection() {\r\n    return record_type(\"Facts.PersonFact\", [], PersonFact, () => [[\"FactId\", string_type], [\"PersonName\", string_type], [\"Name\", string_type], [\"Description\", string_type]]);\r\n}\r\n\r\nexport function PersonFact__IsKnown_Z745B8E35(x, state) {\r\n    if (FSharpMap__ContainsKey(state.KnownPersons, x.PersonName)) {\r\n        return FSharpSet__Contains(FSharpMap__get_Item(state.KnownPersons, x.PersonName), x.FactId);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function PersonFact__Acquire_Z745B8E35(x, state) {\r\n    toConsole(printf(\"Accuired personal fact: %A %s\"))(x.FactId)(x.Description);\r\n    const newState = meetPersonName(x.PersonName, state);\r\n    return new State(newState.UI, newState.UIStack, newState.Animation, newState.Previous, newState.InteractionHistory, newState.Log, newState.KnownFacts, add(x.PersonName, FSharpSet__Add(FSharpMap__get_Item(newState.KnownPersons, x.PersonName), x.FactId), newState.KnownPersons), newState.Iteration, newState.Data, newState.Error);\r\n}\r\n\r\nexport const REPO_FACTS = GlobalRepository$1_$ctor();\r\n\r\nexport const REPO_FACTS_PERSONAL = GlobalRepository$1_$ctor();\r\n\r\nexport function createFact(id, name, desc) {\r\n    return save(REPO_FACTS, id, new Fact(id, desc, false, name, void 0));\r\n}\r\n\r\nexport function createPersonalFact(personName, id, name, desc) {\r\n    return save(REPO_FACTS_PERSONAL, id, new PersonFact(id, personName, name, desc));\r\n}\r\n\r\nexport function createFactDeniable(id, name, desc) {\r\n    return save(REPO_FACTS, id, new Fact(id, desc, true, name, void 0));\r\n}\r\n\r\nexport function createFactWithAction(id, name, desc, action) {\r\n    void save(REPO_FACTS, id, new Fact(id, desc, false, name, action));\r\n}\r\n\r\nexport function acquireFactById(fact, state) {\r\n    if (!keyExists(REPO_FACTS, fact)) {\r\n        let message;\r\n        const arg20 = dumpGlobalKeys(REPO_FACTS);\r\n        message = toText(printf(\"Cannot acquire non-exsistent fact: %s; Facts exist: %A\"))(fact)(arg20);\r\n        throw (new Error(message));\r\n    }\r\n    const theFact = getGlobal(REPO_FACTS, fact);\r\n    toConsole(printf(\"Fact %s acquired: %A\"))(fact)(theFact.Description);\r\n    return Fact__Acquire_Z745B8E35(theFact, state);\r\n}\r\n\r\nexport function lookupFact(id) {\r\n    if (!keyExists(REPO_FACTS, id)) {\r\n        let message;\r\n        const arg20 = dumpGlobalKeys(REPO_FACTS);\r\n        message = toText(printf(\"Cannot lookup non-exsistent fact: %s; Facts exist: %A\"))(id)(arg20);\r\n        throw (new Error(message));\r\n    }\r\n    return getGlobal(REPO_FACTS, id);\r\n}\r\n\r\nexport function listKnownFactsGeneral(state) {\r\n    return filter((s) => isGeneral(s), toList(state.KnownFacts));\r\n}\r\n\r\nexport function listAllFacts() {\r\n    return dumpGlobalKeys(REPO_FACTS);\r\n}\r\n\r\n//# sourceMappingURL=Facts.fs.js.map\r\n","import { createFactDeniable, createFact } from \"../Facts.fs.js\";\r\nimport { class_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\n\r\nexport class GameDvaFacts {\r\n    constructor() {\r\n        this[\"deadBodyFound@\"] = createFact(\"deadBodyFound\", \"Труп мужчины\", \"Труп мужчины на кухне. Убит огромным кухонным ножом. Удар в грудь, лужа крови...\\r\\n        такое не забывается...\\r\\n        \");\r\n        this[\"screamedInWindow@\"] = createFact(\"screamedInWindow\", \"Я кричала в окно\", \"Ты голая в панике орала в открытое окно. Логика где? Пиздец, это может плохо кончиться.\\r\\n        \");\r\n        this[\"bitchWantsMoney@\"] = createFact(\"bwm\", \"Эта сука хочет денег\", \"А кто ж не хочет. У тебя еще и будут.\");\r\n        this[\"shkafSeen@\"] = createFact(\"shkafSeen\", \"В шкафу нет моей одежды\", \"Шкаф осмотрен. Ничего интересного, никаких моих вещей. \\r\\n        Единственное наблюдение - у владельца этого шкафа точно есть стиль. Или был...\");\r\n        this[\"version@\"] = createFact(\"atLeastVersion\", \"Версия произошедшего - самозащита\", \"У меня есть хоть какая-то версия произошедшего. Что мне что-то подсыпали, я защищалась.\\r\\n        Надеюсь, не только я в нее поверю.\\r\\n        \");\r\n        this[\"phoneFprints@\"] = createFactDeniable(\"phoneFprints\", \"Отпечатки на телефоне\", \"Я оставила телефон со своими отпечатками в кармане у мертвеца. Может, стоит его забрать? \\r\\n        Даже не знаю. Все равно меня найдут. Лучше там, чем если его найдут у меня.\\r\\n        \");\r\n        this[\"noWater@\"] = createFact(\"noWater\", \"Нет воды в водопроводе\", \"Горячей воды нет. и холодной тоже. Как тут люди живут вообще?\\r\\n        \");\r\n        this[\"thrownIphone@\"] = createFact(\"thrownIphone\", \"Выброшенный в окно телефон\", \"Я выбросила телефон мертвеца в окно и разбила им чужую тачку. Все очень плохо.\\r\\n        \");\r\n        this[\"afterlife@\"] = createFact(\"afterlife\", \"Жизнь после смерти\", \"Я отчетливо помню... удар... острая боль.. темнеет в глазах... \\r\\n        Я же умерла! Мне не показалось? Я уже была здесь, я видела это. Почему я... жива? Что со мной?\\r\\n        \");\r\n        this[\"strangerKillsMe@\"] = createFact(\"strangerKillsMe\", \"Странный тип на верхнем этаже\", \"Я слышала выстрелы, и сама стала жертвой странного типа в капюшоне.\");\r\n        this[\"policeKillsMe@\"] = createFact(\"policeKills\", \"Полицейський беспредел\", \"Похоже, полиция здесь стреляет в безоружных людей. Да уж, ну и времена пошли. И сразу в голову.\");\r\n        this[\"policeIsComing@\"] = createFact(\"policeComes\", \"Полиция в пути\", \"Похоже, когда я проснулась - полиция уже направлялась сюда. \\r\\n        Нужно было или успеть сбежать, или дождаться их.\");\r\n    }\r\n}\r\n\r\nexport function GameDvaFacts$reflection() {\r\n    return class_type(\"GameDvaFacts.GameDvaFacts\", void 0, GameDvaFacts);\r\n}\r\n\r\nexport function GameDvaFacts_$ctor() {\r\n    return new GameDvaFacts();\r\n}\r\n\r\nexport function GameDvaFacts__get_deadBodyFound(__) {\r\n    return __[\"deadBodyFound@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_screamedInWindow(__) {\r\n    return __[\"screamedInWindow@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_bitchWantsMoney(__) {\r\n    return __[\"bitchWantsMoney@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_shkafSeen(__) {\r\n    return __[\"shkafSeen@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_version(__) {\r\n    return __[\"version@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_phoneFprints(__) {\r\n    return __[\"phoneFprints@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_noWater(__) {\r\n    return __[\"noWater@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_thrownIphone(__) {\r\n    return __[\"thrownIphone@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_afterlife(__) {\r\n    return __[\"afterlife@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_strangerKillsMe(__) {\r\n    return __[\"strangerKillsMe@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_policeKillsMe(__) {\r\n    return __[\"policeKillsMe@\"];\r\n}\r\n\r\nexport function GameDvaFacts__get_policeIsComing(__) {\r\n    return __[\"policeIsComing@\"];\r\n}\r\n\r\n//# sourceMappingURL=GameDvaFacts.fs.js.map\r\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { class_type, record_type, lambda_type, list_type, option_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { State, State$reflection } from \"./State.fs.js\";\r\nimport { RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { ProxyWindow, popPushWindowRef, pushWindowRef, Dialog, REPO_DIALOG, DialogWindow__GetName, makeHiddenVariant, makeLockedVariant, makeUnlockedVariant, ptxt, ctxt, randomTextOf, DialogWindow, stxt, DialogVariant, TextDialogWindow, s as s_1, DialogVariant$reflection } from \"./Dialog.fs.js\";\r\nimport { map, cons, empty, fold, isEmpty, reverse } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { Conditional, MoveWithNewStack, PopToLocation, Pop, ChangeLocation, PushLocation, Jump, OnlyOnce, ToWindow, NoAction_$ctor } from \"./Actions.fs.js\";\r\nimport { BoolProperty_$ctor_Z55EFCE8F } from \"./Props.fs.js\";\r\nimport { UReference_Parse_Z721C83C5, save, UReference } from \"./Data.fs.js\";\r\nimport { FSharpMap__Add, FSharpMap__ContainsKey, ofList } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { Person__get_Name } from \"./Person.fs.js\";\r\nimport { empty as empty_1 } from \"./.fable/fable-library.3.1.11/Set.js\";\r\nimport { comparePrimitives } from \"./.fable/fable-library.3.1.11/Util.js\";\r\n\r\nexport class StaticWindowGenerator extends Record {\r\n    constructor(Name, Actor, Text$, StaticVariants, OnEntry) {\r\n        super();\r\n        this.Name = Name;\r\n        this.Actor = Actor;\r\n        this.Text = Text$;\r\n        this.StaticVariants = StaticVariants;\r\n        this.OnEntry = OnEntry;\r\n    }\r\n}\r\n\r\nexport function StaticWindowGenerator$reflection() {\r\n    return record_type(\"DSL.StaticWindowGenerator\", [], StaticWindowGenerator, () => [[\"Name\", string_type], [\"Actor\", option_type(string_type)], [\"Text\", lambda_type(State$reflection(), list_type(RichTextElement$reflection()))], [\"StaticVariants\", list_type(DialogVariant$reflection())], [\"OnEntry\", option_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport function StaticWindowGenerator__Build(x) {\r\n    let x_1;\r\n    return new TextDialogWindow(x.Name, x.Actor, x.Text, (x_1 = reverse(x.StaticVariants), (arg10$0040) => s_1(x_1, arg10$0040)), x.OnEntry);\r\n}\r\n\r\nexport class DialogVariantGen extends Record {\r\n    constructor(V, Modifiers) {\r\n        super();\r\n        this.V = V;\r\n        this.Modifiers = Modifiers;\r\n    }\r\n}\r\n\r\nexport function DialogVariantGen$reflection() {\r\n    return record_type(\"DSL.DialogVariantGen\", [], DialogVariantGen, () => [[\"V\", DialogVariant$reflection()], [\"Modifiers\", list_type(lambda_type(State$reflection(), State$reflection()))]]);\r\n}\r\n\r\nexport function DialogVariantGen__Build(x) {\r\n    if (isEmpty(x.Modifiers)) {\r\n        return x.V;\r\n    }\r\n    else {\r\n        const inputRecord = x.V;\r\n        return new DialogVariant(inputRecord.Text, fold((acc, el) => acc.ComposeAfter(el), x.V.Action, x.Modifiers), inputRecord.Locked);\r\n    }\r\n}\r\n\r\nexport class WindowBuilder {\r\n    constructor(name, defaultActor) {\r\n        this.name = name;\r\n        this.defaultActor = defaultActor;\r\n    }\r\n}\r\n\r\nexport function WindowBuilder$reflection() {\r\n    return class_type(\"DSL.WindowBuilder\", void 0, WindowBuilder);\r\n}\r\n\r\nexport function WindowBuilder_$ctor_68C4AEB5(name, defaultActor) {\r\n    return new WindowBuilder(name, defaultActor);\r\n}\r\n\r\nexport function WindowBuilder__Yield_1505(__, _arg1) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, __.defaultActor, (arg10$0040) => stxt(\"\", arg10$0040), empty(), void 0);\r\n}\r\n\r\nexport function WindowBuilder__Run_25360597(__, dialog) {\r\n    return new DialogWindow(1, StaticWindowGenerator__Build(dialog));\r\n}\r\n\r\nexport function WindowBuilder__Stxt_4615C44C(__, dialog, text) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, (arg10$0040) => stxt(text, arg10$0040), dialog.StaticVariants, dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__Actor_4615C44C(__, dialog, actor) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, actor, dialog.Text, dialog.StaticVariants, dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__RandomOf_Z273D897A(__, dialog, text) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, (state) => randomTextOf(text, state), dialog.StaticVariants, dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__Ctxt_19BEF20(__, dialog, predicate, text1, text2) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, ctxt(predicate, text1, text2), dialog.StaticVariants, dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__Ptxt_4615C44C(__, dialog, text) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, ptxt(text), dialog.StaticVariants, dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__Get2_4E6D34B(__, dialog, variant_1) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, dialog.Text, cons(variant_1, dialog.StaticVariants), dialog.OnEntry);\r\n}\r\n\r\nexport function WindowBuilder__OnEntry_Z6CC484FF(__, dialog, action) {\r\n    return WindowBuilder__staticDialogWindow(__, __.name, dialog.Actor, dialog.Text, dialog.StaticVariants, action);\r\n}\r\n\r\nfunction WindowBuilder__staticDialogWindow(this$, name, actor, textGen, variants, onEntry) {\r\n    return new StaticWindowGenerator(name, actor, textGen, variants, onEntry);\r\n}\r\n\r\nexport function window$(x) {\r\n    return WindowBuilder_$ctor_68C4AEB5(x, void 0);\r\n}\r\n\r\nexport function windowWithActor(x, act) {\r\n    return WindowBuilder_$ctor_68C4AEB5(x, act);\r\n}\r\n\r\nexport class VariantBuilder {\r\n    constructor(text, createVariant) {\r\n        this.text = text;\r\n        this.createVariant = createVariant;\r\n    }\r\n}\r\n\r\nexport function VariantBuilder$reflection() {\r\n    return class_type(\"DSL.VariantBuilder\", void 0, VariantBuilder);\r\n}\r\n\r\nexport function VariantBuilder_$ctor_3E40858D(text, createVariant) {\r\n    return new VariantBuilder(text, createVariant);\r\n}\r\n\r\nexport function VariantBuilder__Yield_1505(__, _arg1) {\r\n    let variant_1;\r\n    const arg10 = NoAction_$ctor();\r\n    variant_1 = __.createVariant(__.text, arg10);\r\n    return new DialogVariantGen(variant_1, empty());\r\n}\r\n\r\nexport function VariantBuilder__Run_4E5595C3(__, v) {\r\n    return DialogVariantGen__Build(v);\r\n}\r\n\r\nexport function VariantBuilder__SetAction_Z55D3A3AE(__, v, a) {\r\n    return new DialogVariantGen(__.createVariant(v.V.Text, a), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetMod_41C58D55(__, v, m) {\r\n    return new DialogVariantGen(v.V, cons(m, v.Modifiers));\r\n}\r\n\r\nexport function VariantBuilder__SetActionGoto_Z6B14CDE8(__, v, a) {\r\n    let arg10;\r\n    return new DialogVariantGen((arg10 = (new ToWindow(a)), __.createVariant(v.V.Text, arg10)), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetActionGotoOnce_381051B8(__, v, propertyName, gotoOnce, gotoOther) {\r\n    let arg10, DoOnce, DoOther;\r\n    return new DialogVariantGen((arg10 = (DoOnce = (new ToWindow(gotoOnce)), (DoOther = (new ToWindow(gotoOther)), new OnlyOnce(BoolProperty_$ctor_Z55EFCE8F(\"propertyName\", false), DoOnce, DoOther))), __.createVariant(v.V.Text, arg10)), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetActionGoto_Z404DF6DD(__, v, d, w) {\r\n    return new DialogVariantGen(makeUnlockedVariant(v.V.Text, new Jump(new UReference(d, w), void 0)), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetActionPushLoc_Z6B14CDE8(__, v, loc) {\r\n    return new DialogVariantGen(makeUnlockedVariant(v.V.Text, new PushLocation(loc, void 0)), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetActionChangeLoc_Z6B14CDE8(__, v, loc) {\r\n    return new DialogVariantGen(makeUnlockedVariant(v.V.Text, new ChangeLocation(loc, void 0)), v.Modifiers);\r\n}\r\n\r\nexport function VariantBuilder__SetText_Z6B14CDE8(__, v, s) {\r\n    return new DialogVariantGen(makeUnlockedVariant(s, v.V.Action), v.Modifiers);\r\n}\r\n\r\nexport function variant(text) {\r\n    return VariantBuilder_$ctor_3E40858D(text, (text_1, action) => makeUnlockedVariant(text_1, action));\r\n}\r\n\r\nexport function locked(reason, predicate, text) {\r\n    return VariantBuilder_$ctor_3E40858D(text, (text_1, action) => makeLockedVariant(reason, predicate, text_1, action));\r\n}\r\n\r\nexport function hidden(predicate, text) {\r\n    return VariantBuilder_$ctor_3E40858D(text, (text_1, action) => makeHiddenVariant(predicate, text_1, action));\r\n}\r\n\r\nexport function makeDialogWindowsFromList(lst) {\r\n    return ofList(map((d) => [DialogWindow__GetName(d), d], lst));\r\n}\r\n\r\nexport function saveDialog(dialog) {\r\n    return save(REPO_DIALOG, dialog.Name, dialog);\r\n}\r\n\r\nexport function createDialog(name, windows) {\r\n    return saveDialog(new Dialog(name, makeDialogWindowsFromList(windows), void 0));\r\n}\r\n\r\nexport function op_MinusMinusMinus(x, y) {\r\n    const reference = UReference_Parse_Z721C83C5(y);\r\n    return makeUnlockedVariant(x, pushWindowRef(reference));\r\n}\r\n\r\nexport const doPop = new Pop(void 0);\r\n\r\nexport const doPopLoc = new PopToLocation(void 0);\r\n\r\nexport function doPushWindow(target) {\r\n    const reference = UReference_Parse_Z721C83C5(target);\r\n    return pushWindowRef(reference);\r\n}\r\n\r\nexport function doPopPush(target) {\r\n    const reference = UReference_Parse_Z721C83C5(target);\r\n    return popPushWindowRef(reference);\r\n}\r\n\r\nexport function doPushLoc(target) {\r\n    return new PushLocation(target, void 0);\r\n}\r\n\r\nexport function doChangeLoc(target) {\r\n    return new ChangeLocation(target, void 0);\r\n}\r\n\r\nexport function doOnce(propName, actionOnce, actionOther) {\r\n    return new OnlyOnce(BoolProperty_$ctor_Z55EFCE8F(\"once::\" + propName, false), actionOnce, actionOther);\r\n}\r\n\r\nexport function doGoToWindow(target) {\r\n    return new ToWindow(target);\r\n}\r\n\r\nexport function popVariant(text) {\r\n    return makeUnlockedVariant(text, doPop);\r\n}\r\n\r\nexport function popLocVariant(text) {\r\n    return makeUnlockedVariant(text, doPopLoc);\r\n}\r\n\r\nexport function pushLocVariant(text, target) {\r\n    return makeUnlockedVariant(text, doPushLoc(target));\r\n}\r\n\r\nexport function doMoveWithStackRef(targetRef, stackRef) {\r\n    return new MoveWithNewStack(stackRef, targetRef, void 0);\r\n}\r\n\r\nexport function doMoveWithStack(target, stack) {\r\n    const stackRef = map((arg00) => UReference_Parse_Z721C83C5(arg00), stack);\r\n    return doMoveWithStackRef(UReference_Parse_Z721C83C5(target), stackRef);\r\n}\r\n\r\nexport function doCond(p, onTrue, onFalse) {\r\n    return new Conditional(p, onTrue, onFalse);\r\n}\r\n\r\nexport function doesKnowPerson(p, s) {\r\n    return FSharpMap__ContainsKey(s.KnownPersons, Person__get_Name(p));\r\n}\r\n\r\nexport function meetPerson(p, s) {\r\n    if (doesKnowPerson(p, s)) {\r\n        return s;\r\n    }\r\n    else {\r\n        return new State(s.UI, s.UIStack, s.Animation, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, FSharpMap__Add(s.KnownPersons, Person__get_Name(p), empty_1({\r\n            Compare: (x, y) => comparePrimitives(x, y),\r\n        })), s.Iteration, s.Data, s.Error);\r\n    }\r\n}\r\n\r\nexport function proxyWindow(name, proxyAction) {\r\n    return new DialogWindow(0, new ProxyWindow(name, proxyAction));\r\n}\r\n\r\nexport function doJump(target) {\r\n    const reference = UReference_Parse_Z721C83C5(target);\r\n    return new Jump(reference, void 0);\r\n}\r\n\r\n//# sourceMappingURL=DSL.fs.js.map\r\n","import { Union, Record } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { option_type, lambda_type, union_type, class_type, record_type, list_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { reverse, empty as empty_1, append, choose, cons, map, singleton, ofArray } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { makeUnlockedVariant, ctxt, ptxt, DialogVariant$reflection, DialogWindow, TextDialogWindow, s as s_2, stxt, DialogWindow__GetName, pushWindowRef, DialogWindow$reflection } from \"./Dialog.fs.js\";\r\nimport { StringProperty__Get_Z745B8E35, ListStringProperty__Contains, ListStringProperty_Personal } from \"./Props.fs.js\";\r\nimport { RoleModel__As_Z721C83C5, Role$reflection, Role } from \"./RoleModel.fs.js\";\r\nimport { VariantBuilder__SetActionPushLoc_Z6B14CDE8, variant as variant_1, doPushWindow, doesKnowPerson, meetPerson, createDialog, VariantBuilder__Yield_1505, VariantBuilder__SetAction_Z55D3A3AE, VariantBuilder__Run_4E5595C3, hidden, WindowBuilder__RandomOf_Z273D897A, popVariant, WindowBuilder__Yield_1505, WindowBuilder__Stxt_4615C44C, WindowBuilder__Actor_4615C44C, WindowBuilder__Get2_4E6D34B, WindowBuilder__Run_25360597, window$ as window$_1 } from \"./DSL.fs.js\";\r\nimport { FSharpMap__Add, empty, FSharpMap__get_Item, containsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { values, getGlobal, GlobalRepository$1__ContainsKey_Z721C83C5, UReference_Parse_Z721C83C5, save, GlobalRepository$1_$ctor, UReference } from \"./Data.fs.js\";\r\nimport { listAllFacts, Fact__IsKnown_Z745B8E35, lookupFact } from \"./Facts.fs.js\";\r\nimport { State$reflection } from \"./State.fs.js\";\r\nimport { PushPersonDialog, Jump, Jump$reflection } from \"./Actions.fs.js\";\r\nimport { AllowedInteractions_get_All, PersonHub, REPO_PERSON_HUBS, AllowedInteractions$reflection } from \"./PersonHub.fs.js\";\r\nimport { RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { defaultDesign } from \"./HubDesign.fs.js\";\r\nimport { asInLocation, InLocation__get_CurrentLocation, REPO_PERSONS, Person__get_DefaultDisplayName, Person__get_Name } from \"./Person.fs.js\";\r\nimport { printf, toConsole } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { makePicturelessLocationVariant, REPO_LOCATIONS, LocationHub, LocationHubVariant$reflection, LocationHub$reflection, LocationHubVariant } from \"./LocationHub.fs.js\";\r\nimport { filter, toList } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\n\r\nexport class BasicAnswers extends Record {\r\n    constructor(DontKnow, Shock, DontBelieve, DontCare) {\r\n        super();\r\n        this.DontKnow = DontKnow;\r\n        this.Shock = Shock;\r\n        this.DontBelieve = DontBelieve;\r\n        this.DontCare = DontCare;\r\n    }\r\n}\r\n\r\nexport function BasicAnswers$reflection() {\r\n    return record_type(\"NPC.BasicAnswers\", [], BasicAnswers, () => [[\"DontKnow\", list_type(string_type)], [\"Shock\", list_type(string_type)], [\"DontBelieve\", list_type(string_type)], [\"DontCare\", list_type(string_type)]]);\r\n}\r\n\r\nexport const DefaultBasicAnswers = new BasicAnswers(ofArray([\"Я ничего не знаю об этом\", \"Не слышал про такое\", \"Это правда вообще? Не ну знаю\"]), ofArray([\"Твою ж мать, серьезно?\", \"Я в шоке\", \"Едрить-колотить... Что в мире происходит...\"]), singleton(\"Я не верю, что такое вообще может быть\"), ofArray([\"Мне это не интересно\", \"Как-то все равно\", \"Абсолютно пофиг\", \"Без интереса\", \"... и че? ...\", \"Я ничего не думаю об этом\", \"Меня это не волнует в принципе\"]));\r\n\r\nexport class Reaction extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Do\", \"Say\", \"Talk\", \"DontKnow\", \"Shock\", \"DontBelieve\", \"DontCare\"];\r\n    }\r\n}\r\n\r\nexport function Reaction$reflection() {\r\n    return union_type(\"NPC.Reaction\", [], Reaction, () => [[[\"Item\", class_type(\"Actions.IAction\")]], [[\"Item\", string_type]], [[\"Item\", DialogWindow$reflection()]], [], [], [], []]);\r\n}\r\n\r\nexport const TALKER_ROLE_ID = \"talker\";\r\n\r\nexport class Talker extends Role {\r\n    constructor(name, basicAnswers, defaultReaction) {\r\n        super(TALKER_ROLE_ID);\r\n        this.name = name;\r\n        const knownFactsProp = ListStringProperty_Personal(this.name, \"knownFacts\");\r\n        this[\"KnownFactsProperty@\"] = knownFactsProp;\r\n        this[\"BasicAnswers@\"] = basicAnswers;\r\n        this[\"Name@\"] = this.name;\r\n        this[\"DefaultReaction@\"] = defaultReaction;\r\n    }\r\n}\r\n\r\nexport function Talker$reflection() {\r\n    return class_type(\"NPC.Talker\", void 0, Talker, Role$reflection());\r\n}\r\n\r\nexport function Talker_$ctor_7536DD07(name, basicAnswers, defaultReaction) {\r\n    return new Talker(name, basicAnswers, defaultReaction);\r\n}\r\n\r\nexport function Talker__get_KnownFactsProperty(__) {\r\n    return __[\"KnownFactsProperty@\"];\r\n}\r\n\r\nexport function Talker__DoesKnow(x, fact, state) {\r\n    return ListStringProperty__Contains(Talker__get_KnownFactsProperty(x), fact, state);\r\n}\r\n\r\nexport function Talker__get_BasicAnswers(__) {\r\n    return __[\"BasicAnswers@\"];\r\n}\r\n\r\nexport function Talker__get_Name(__) {\r\n    return __[\"Name@\"];\r\n}\r\n\r\nexport function Talker__get_DefaultReaction(__) {\r\n    return __[\"DefaultReaction@\"];\r\n}\r\n\r\nexport function Talker__get_ToActor(x) {\r\n    return x.name;\r\n}\r\n\r\nfunction sWindow(a, name, text, exitButton) {\r\n    const builder$0040 = window$_1(name);\r\n    return WindowBuilder__Run_25360597(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Actor_4615C44C(builder$0040, WindowBuilder__Stxt_4615C44C(builder$0040, WindowBuilder__Yield_1505(builder$0040), text), Talker__get_ToActor(a)), popVariant(exitButton)));\r\n}\r\n\r\nfunction randTextWindow(a, name, textOptions, exitButton) {\r\n    const builder$0040 = window$_1(name);\r\n    return WindowBuilder__Run_25360597(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Actor_4615C44C(builder$0040, WindowBuilder__RandomOf_Z273D897A(builder$0040, WindowBuilder__Yield_1505(builder$0040), textOptions), Talker__get_ToActor(a)), popVariant(exitButton)));\r\n}\r\n\r\nexport function createAskAboutDialog(sysName, talker, ans) {\r\n    let text_1;\r\n    const dialogName = sysName + \"_ask\";\r\n    let generateAvailableFacts;\r\n    const createFactVariant = (fid) => {\r\n        const reaction = containsKey(fid, ans) ? FSharpMap__get_Item(ans, fid) : Talker__get_DefaultReaction(talker);\r\n        const pushToWindow = (target) => pushWindowRef(new UReference(dialogName, target));\r\n        const windowGo = (wName, basics, exButton) => [pushToWindow(wName), randTextWindow(talker, wName, basics, exButton)];\r\n        let patternInput;\r\n        switch (reaction.tag) {\r\n            case 1: {\r\n                const text = reaction.fields[0];\r\n                patternInput = [pushToWindow(fid), sWindow(talker, fid, text, \"понятно\")];\r\n                break;\r\n            }\r\n            case 2: {\r\n                const window$ = reaction.fields[0];\r\n                patternInput = [pushToWindow(DialogWindow__GetName(window$)), window$];\r\n                break;\r\n            }\r\n            case 3: {\r\n                patternInput = windowGo(\"dontknow\", Talker__get_BasicAnswers(talker).DontKnow, \"понятно\");\r\n                break;\r\n            }\r\n            case 4: {\r\n                patternInput = windowGo(\"shock\", Talker__get_BasicAnswers(talker).Shock, \"ясно\");\r\n                break;\r\n            }\r\n            case 5: {\r\n                patternInput = windowGo(\"dontbelieve\", Talker__get_BasicAnswers(talker).DontBelieve, \"эх\");\r\n                break;\r\n            }\r\n            case 6: {\r\n                patternInput = windowGo(\"dontCare\", Talker__get_BasicAnswers(talker).DontCare, \"ладно\");\r\n                break;\r\n            }\r\n            default: {\r\n                const iaction = reaction.fields[0];\r\n                patternInput = [iaction, void 0];\r\n            }\r\n        }\r\n        const reactWindow = patternInput[1];\r\n        const reactAction = patternInput[0];\r\n        const fact = lookupFact(fid);\r\n        let var$;\r\n        const builder$0040 = hidden((arg00) => Fact__IsKnown_Z745B8E35(fact, arg00), fact.Name);\r\n        var$ = VariantBuilder__Run_4E5595C3(builder$0040, VariantBuilder__SetAction_Z55D3A3AE(builder$0040, VariantBuilder__Yield_1505(builder$0040), reactAction));\r\n        return [var$, reactWindow];\r\n    };\r\n    const facts = listAllFacts();\r\n    generateAvailableFacts = map(createFactVariant, facts);\r\n    const variants = map((tuple) => tuple[0], generateAvailableFacts);\r\n    const endDialog = popVariant(\"назад\");\r\n    const initialDialog = new TextDialogWindow(\"init\", void 0, (text_1 = ((\"Спросить, что \" + Talker__get_Name(talker)) + \" думает о...\"), (arg10$0040) => stxt(text_1, arg10$0040)), (arg10$0040_1) => s_2(cons(endDialog, variants), arg10$0040_1), void 0);\r\n    const ws = cons(new DialogWindow(1, initialDialog), choose((tuple_1) => tuple_1[1], generateAvailableFacts));\r\n    const dialog = createDialog(dialogName, ws);\r\n    return dialogName + \".init\";\r\n}\r\n\r\nexport function asTalker(p) {\r\n    return RoleModel__As_Z721C83C5(p[\"Person.Person.Roles\"](), TALKER_ROLE_ID);\r\n}\r\n\r\nexport const REPO_DISPLAY_NAMES_MAPPING = GlobalRepository$1_$ctor();\r\n\r\nexport function saveDisplayNameMapping(personID, mapping) {\r\n    void save(REPO_DISPLAY_NAMES_MAPPING, personID, mapping);\r\n}\r\n\r\nexport class NpcBuilderState extends Record {\r\n    constructor(SystemName, DisplayName, FactReactions, Variants, StaticVariants, ItemGivenReactions, StartingDialog, Allowed, ExitVariant, Description) {\r\n        super();\r\n        this.SystemName = SystemName;\r\n        this.DisplayName = DisplayName;\r\n        this.FactReactions = FactReactions;\r\n        this.Variants = Variants;\r\n        this.StaticVariants = StaticVariants;\r\n        this.ItemGivenReactions = ItemGivenReactions;\r\n        this.StartingDialog = StartingDialog;\r\n        this.Allowed = Allowed;\r\n        this.ExitVariant = ExitVariant;\r\n        this.Description = Description;\r\n    }\r\n}\r\n\r\nexport function NpcBuilderState$reflection() {\r\n    return record_type(\"NPC.NpcBuilderState\", [], NpcBuilderState, () => [[\"SystemName\", string_type], [\"DisplayName\", lambda_type(State$reflection(), string_type)], [\"FactReactions\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, Reaction$reflection()])], [\"Variants\", lambda_type(State$reflection(), list_type(DialogVariant$reflection()))], [\"StaticVariants\", list_type(DialogVariant$reflection())], [\"ItemGivenReactions\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, Reaction$reflection()])], [\"StartingDialog\", lambda_type(State$reflection(), option_type(Jump$reflection()))], [\"Allowed\", lambda_type(State$reflection(), AllowedInteractions$reflection())], [\"ExitVariant\", DialogVariant$reflection()], [\"Description\", lambda_type(State$reflection(), list_type(RichTextElement$reflection()))]]);\r\n}\r\n\r\nexport function NpcBuilderState__Build_Z7B0C615(x, person) {\r\n    const talker = asTalker(person);\r\n    const askAbout = createAskAboutDialog(x.SystemName, talker, x.FactReactions);\r\n    saveDisplayNameMapping(x.SystemName, x.DisplayName);\r\n    return save(REPO_PERSON_HUBS, x.SystemName, new PersonHub(x.StartingDialog, (s) => append(x.Variants(s), x.StaticVariants), x.Description, x.SystemName, askAbout, x.Allowed, defaultDesign, x.ExitVariant));\r\n}\r\n\r\nexport class npcBuilder {\r\n    constructor(person) {\r\n        let talker;\r\n        this.person = person;\r\n        this.name = (talker = asTalker(this.person), Talker__get_Name(talker));\r\n    }\r\n}\r\n\r\nexport function npcBuilder$reflection() {\r\n    return class_type(\"NPC.npcBuilder\", void 0, npcBuilder);\r\n}\r\n\r\nexport function npcBuilder_$ctor_Z7B0C615(person) {\r\n    return new npcBuilder(person);\r\n}\r\n\r\nexport function npcBuilder__Yield_1505(__, _arg1) {\r\n    let x, x_1;\r\n    return new NpcBuilderState(Person__get_Name(__.person), (x = Person__get_DefaultDisplayName(__.person), (arg10$0040) => s_2(x, arg10$0040)), empty(), (arg10$0040_2) => s_2(empty_1(), arg10$0040_2), empty_1(), empty(), (arg10$0040_3) => s_2(void 0, arg10$0040_3), (x_1 = AllowedInteractions_get_All(), (arg10$0040_1) => s_2(x_1, arg10$0040_1)), popVariant(\"закончить разговор\"), (arg10$0040_4) => stxt(__.name, arg10$0040_4));\r\n}\r\n\r\nexport function npcBuilder__Name_5D85725B(__, nbs, name) {\r\n    return new NpcBuilderState(nbs.SystemName, name, nbs.FactReactions, nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, nbs.ExitVariant, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__exitVariantName_Z496EC75A(__, nbs, name) {\r\n    return new NpcBuilderState(nbs.SystemName, nbs.DisplayName, nbs.FactReactions, nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, popVariant(name), nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__exitVariant_ZB9DD05F(__, nbs, ex) {\r\n    return new NpcBuilderState(nbs.SystemName, nbs.DisplayName, nbs.FactReactions, nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, ex, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__Name_Z496EC75A(__, nbs, name) {\r\n    return new NpcBuilderState(nbs.SystemName, (arg10$0040) => s_2(name, arg10$0040), nbs.FactReactions, nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, nbs.ExitVariant, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__Fact_Z24688627(__, nbs, name, reaction) {\r\n    return new NpcBuilderState(nbs.SystemName, nbs.DisplayName, FSharpMap__Add(nbs.FactReactions, name, reaction), nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, nbs.ExitVariant, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__Fact_Z194E9446(__, nbs, fact, reaction) {\r\n    return new NpcBuilderState(nbs.SystemName, nbs.DisplayName, FSharpMap__Add(nbs.FactReactions, fact.FactId, reaction), nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, nbs.ExitVariant, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__ItemGiven_Z24688627(__, nbs, name, reaction) {\r\n    return new NpcBuilderState(nbs.SystemName, nbs.DisplayName, FSharpMap__Add(nbs.ItemGivenReactions, name, reaction), nbs.Variants, nbs.StaticVariants, nbs.ItemGivenReactions, nbs.StartingDialog, nbs.Allowed, nbs.ExitVariant, nbs.Description);\r\n}\r\n\r\nexport function npcBuilder__Stxt_Z496EC75A(__, loc, text) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, loc.Allowed, loc.ExitVariant, (arg10$0040) => stxt(text, arg10$0040));\r\n}\r\n\r\nexport function npcBuilder__Ptxt_Z496EC75A(__, loc, text) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, loc.Allowed, loc.ExitVariant, ptxt(text));\r\n}\r\n\r\nexport function npcBuilder__Ctxt_212B6A8A(__, loc, predicate, text1, text2) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, loc.Allowed, loc.ExitVariant, ctxt(predicate, text1, text2));\r\n}\r\n\r\nexport function npcBuilder__Var_ZB9DD05F(__, loc, variant) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, cons(variant, loc.StaticVariants), loc.ItemGivenReactions, loc.StartingDialog, loc.Allowed, loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__Vars_59468C56(__, loc, variants) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, loc.Allowed, loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__Allow_Z58721E50(__, loc, a) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, a, loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__Allow_591B9CCD(__, loc, a) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, loc.StartingDialog, (arg10$0040) => s_2(a, arg10$0040), loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__Strt_51D9FE71(__, loc, d) {\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, d, loc.Allowed, loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__StrtOnce_Z496EC75A(__, loc, targetLink) {\r\n    const reference = UReference_Parse_Z721C83C5(targetLink);\r\n    const jump = new Jump(reference, (s) => meetPerson(__.person, s));\r\n    return new NpcBuilderState(loc.SystemName, loc.DisplayName, loc.FactReactions, loc.Variants, loc.StaticVariants, loc.ItemGivenReactions, (s_1) => {\r\n        if (doesKnowPerson(__.person, s_1)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            return jump;\r\n        }\r\n    }, loc.Allowed, loc.ExitVariant, loc.Description);\r\n}\r\n\r\nexport function npcBuilder__Run_Z3C425B03(__, loc) {\r\n    toConsole(printf(\"initializing NPC %s\"))(loc.SystemName);\r\n    return NpcBuilderState__Build_Z7B0C615(loc, __.person);\r\n}\r\n\r\nexport function npc(person) {\r\n    return npcBuilder_$ctor_Z7B0C615(person);\r\n}\r\n\r\nexport function doPushNpcDialog(target) {\r\n    return new PushPersonDialog(target, void 0, void 0);\r\n}\r\n\r\nexport function doPushNpcDialogSpecific(targetHub, targetDialog) {\r\n    return new PushPersonDialog(targetHub, void 0, doPushWindow(targetDialog));\r\n}\r\n\r\nexport function doPushNpcDialogAction(targetHub, action) {\r\n    return new PushPersonDialog(targetHub, void 0, action);\r\n}\r\n\r\nexport function npcDialogVariant(text, target) {\r\n    return makeUnlockedVariant(text, doPushNpcDialog(Person__get_Name(target)));\r\n}\r\n\r\nexport function npcDialogSpecificVariant(text, target, spec) {\r\n    return makeUnlockedVariant(text, doPushNpcDialogSpecific(Person__get_Name(target), spec));\r\n}\r\n\r\nexport function npcDialogActionVariant(text, target, spec) {\r\n    return makeUnlockedVariant(text, doPushNpcDialogAction(Person__get_Name(target), spec));\r\n}\r\n\r\nexport function findDisplayName(name, s) {\r\n    if (GlobalRepository$1__ContainsKey_Z721C83C5(REPO_DISPLAY_NAMES_MAPPING, name)) {\r\n        return [getGlobal(REPO_PERSONS, name), getGlobal(REPO_DISPLAY_NAMES_MAPPING, name)(s)];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function getPeopleOnLocation(name, state) {\r\n    const createForPerson = (p) => {\r\n        let name_2;\r\n        const matchValue = findDisplayName(Person__get_Name(p), state);\r\n        if (matchValue == null) {\r\n            name_2 = p[\"Person.Person.DisplayNameZ745B8E35\"](state);\r\n        }\r\n        else {\r\n            const name_1 = matchValue[1];\r\n            name_2 = name_1;\r\n        }\r\n        return new LocationHubVariant(void 0, makeUnlockedVariant(name_2, doPushNpcDialog(Person__get_Name(p))));\r\n    };\r\n    const inLocation = (l) => (StringProperty__Get_Z745B8E35(InLocation__get_CurrentLocation(l), state) === name);\r\n    const checkPerson = (p_1) => {\r\n        const matchValue_1 = asInLocation(p_1);\r\n        if (matchValue_1 == null) {\r\n            return false;\r\n        }\r\n        else {\r\n            const loc = matchValue_1;\r\n            return inLocation(loc);\r\n        }\r\n    };\r\n    return map(createForPerson, toList(filter(checkPerson, values(REPO_PERSONS))));\r\n}\r\n\r\nexport class LocationHubStaticVariants extends Record {\r\n    constructor(LocationHub, Variants, StaticPersons) {\r\n        super();\r\n        this.LocationHub = LocationHub;\r\n        this.Variants = Variants;\r\n        this.StaticPersons = StaticPersons;\r\n    }\r\n}\r\n\r\nexport function LocationHubStaticVariants$reflection() {\r\n    return record_type(\"NPC.LocationHubStaticVariants\", [], LocationHubStaticVariants, () => [[\"LocationHub\", LocationHub$reflection()], [\"Variants\", list_type(DialogVariant$reflection())], [\"StaticPersons\", list_type(LocationHubVariant$reflection())]]);\r\n}\r\n\r\nexport function LocationHubStaticVariants__Build(x) {\r\n    let x_1;\r\n    const inputRecord = x.LocationHub;\r\n    return new LocationHub(inputRecord.Locations, (state) => append(reverse(x.StaticPersons), x.LocationHub.Persons(state)), (x_1 = reverse(x.Variants), (arg10$0040) => s_2(x_1, arg10$0040)), inputRecord.Description, inputRecord.Name, inputRecord.Design);\r\n}\r\n\r\nexport class LocationHubBuilder {\r\n    constructor(name) {\r\n        let name_1;\r\n        this.name = name;\r\n        this.initialLocation = (new LocationHub(empty_1(), (name_1 = this.name, (state) => getPeopleOnLocation(name_1, state)), (arg10$0040) => s_2(empty_1(), arg10$0040), (arg10$0040_1) => stxt(\"\", arg10$0040_1), this.name, defaultDesign));\r\n    }\r\n}\r\n\r\nexport function LocationHubBuilder$reflection() {\r\n    return class_type(\"NPC.LocationHubBuilder\", void 0, LocationHubBuilder);\r\n}\r\n\r\nexport function LocationHubBuilder_$ctor_Z721C83C5(name) {\r\n    return new LocationHubBuilder(name);\r\n}\r\n\r\nexport function LocationHubBuilder__Yield_1505(__, _arg1) {\r\n    return new LocationHubStaticVariants(__.initialLocation, empty_1(), empty_1());\r\n}\r\n\r\nexport function LocationHubBuilder__Run_Z63A596D8(__, a) {\r\n    return save(REPO_LOCATIONS, __.name, LocationHubStaticVariants__Build(a));\r\n}\r\n\r\nexport function LocationHubBuilder__LocVar_Z17481AEC(__, loc, variant) {\r\n    let inputRecord;\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(reverse(cons(makePicturelessLocationVariant(variant), loc.LocationHub.Locations)), inputRecord.Persons, inputRecord.Variants, inputRecord.Description, inputRecord.Name, inputRecord.Design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__Des_4CA4D823(__, loc, design) {\r\n    let inputRecord;\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(inputRecord.Locations, inputRecord.Persons, inputRecord.Variants, inputRecord.Description, inputRecord.Name, design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__LocVar_7F004848(__, loc, toName, target) {\r\n    let inputRecord;\r\n    let variant;\r\n    const builder$0040 = variant_1(toName);\r\n    variant = VariantBuilder__Run_4E5595C3(builder$0040, VariantBuilder__SetActionPushLoc_Z6B14CDE8(builder$0040, VariantBuilder__Yield_1505(builder$0040), target));\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(reverse(cons(makePicturelessLocationVariant(variant), loc.LocationHub.Locations)), inputRecord.Persons, inputRecord.Variants, inputRecord.Description, inputRecord.Name, inputRecord.Design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__PersVar_Z17481AEC(__, loc, variant) {\r\n    return new LocationHubStaticVariants(loc.LocationHub, loc.Variants, cons(makePicturelessLocationVariant(variant), loc.StaticPersons));\r\n}\r\n\r\nexport function LocationHubBuilder__Stxt_Z55BB0DED(__, loc, text) {\r\n    let inputRecord;\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(inputRecord.Locations, inputRecord.Persons, inputRecord.Variants, (arg10$0040) => stxt(text, arg10$0040), inputRecord.Name, inputRecord.Design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__Ptxt_Z55BB0DED(__, loc, text) {\r\n    let inputRecord;\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(inputRecord.Locations, inputRecord.Persons, inputRecord.Variants, ptxt(text), inputRecord.Name, inputRecord.Design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__Ctxt_1E3E4E3F(__, loc, predicate, text1, text2) {\r\n    let inputRecord;\r\n    return new LocationHubStaticVariants((inputRecord = loc.LocationHub, new LocationHub(inputRecord.Locations, inputRecord.Persons, inputRecord.Variants, ctxt(predicate, text1, text2), inputRecord.Name, inputRecord.Design)), loc.Variants, loc.StaticPersons);\r\n}\r\n\r\nexport function LocationHubBuilder__Var_Z17481AEC(__, loc, variant) {\r\n    return new LocationHubStaticVariants(loc.LocationHub, cons(variant, loc.Variants), loc.StaticPersons);\r\n}\r\n\r\nexport function location(name) {\r\n    return LocationHubBuilder_$ctor_Z721C83C5(name);\r\n}\r\n\r\n//# sourceMappingURL=NPC.fs.js.map\r\n","import { IterationCounter__Elapsed_Z745B8E35, IterationCounter__Start_Z745B8E35, BoolProperty__Get_Z745B8E35, IterationCounter_Personal, BoolProperty__Set, BoolProperty_Personal } from \"./Props.fs.js\";\r\nimport { savePers, Person__get_Name, InLocation_$ctor_Z384F8060, Person$reflection, Person } from \"./Person.fs.js\";\r\nimport { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { RoleModel_$ctor_Z1C2BA672 } from \"./RoleModel.fs.js\";\r\nimport { Reaction, DefaultBasicAnswers, Talker_$ctor_7536DD07 } from \"./NPC.fs.js\";\r\nimport { ofArray } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { Fact__IsKnown_Z745B8E35, createPersonalFact } from \"./Facts.fs.js\";\r\nimport { GameDvaFacts__get_version } from \"./Game/GameDvaFacts.fs.js\";\r\nimport { empty } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { State } from \"./State.fs.js\";\r\n\r\nexport class Myself extends Person {\r\n    constructor() {\r\n        super(\"myself\", \"Подсознание\");\r\n        const name = \"myself\";\r\n        this[\"Naked@\"] = BoolProperty_Personal(name, \"naked\", true);\r\n        this[\"HighAsFuck@\"] = BoolProperty_Personal(name, \"high\", false);\r\n        this[\"IphoneTaken@\"] = BoolProperty_Personal(name, \"iphoneTaken\", false);\r\n        this[\"IsSporty@\"] = BoolProperty_Personal(name, \"sporty\", false);\r\n    }\r\n}\r\n\r\nexport function Myself$reflection() {\r\n    return class_type(\"GameDvaCharacters.Myself\", void 0, Myself, Person$reflection());\r\n}\r\n\r\nexport function Myself_$ctor() {\r\n    return new Myself();\r\n}\r\n\r\nexport function Myself__get_Naked(__) {\r\n    return __[\"Naked@\"];\r\n}\r\n\r\nexport function Myself__get_HighAsFuck(__) {\r\n    return __[\"HighAsFuck@\"];\r\n}\r\n\r\nexport function Myself__get_IphoneTaken(__) {\r\n    return __[\"IphoneTaken@\"];\r\n}\r\n\r\nexport function Myself__get_IsSporty(__) {\r\n    return __[\"IsSporty@\"];\r\n}\r\n\r\nexport function Myself__get_WearSport(x) {\r\n    return (arg) => {\r\n        const arg10_1 = BoolProperty__Set(Myself__get_IsSporty(x), true, arg);\r\n        return BoolProperty__Set(Myself__get_Naked(x), false, arg10_1);\r\n    };\r\n}\r\n\r\nexport function Myself__get_WearOffice(x) {\r\n    return (arg) => {\r\n        const arg10_1 = BoolProperty__Set(Myself__get_IsSporty(x), false, arg);\r\n        return BoolProperty__Set(Myself__get_Naked(x), false, arg10_1);\r\n    };\r\n}\r\n\r\nexport function Myself__get_GetNaked(x) {\r\n    return (arg) => {\r\n        const arg10_1 = BoolProperty__Set(Myself__get_IsSporty(x), false, arg);\r\n        return BoolProperty__Set(Myself__get_Naked(x), true, arg10_1);\r\n    };\r\n}\r\n\r\nexport class PolicemanJoe extends Person {\r\n    constructor() {\r\n        super(\"joe\", \"Полицейський Джо\");\r\n        const n = \"joe\";\r\n        this[\"UserKnowsHisName@\"] = createPersonalFact(n, \"nameIsKnown\", \"Его зовут Джо\", \"Звание - лейтенант, фамилия - Коперник. Джо Коперник. Как-то так.\");\r\n        this[\"knowsAgentCooper@\"] = createPersonalFact(n, \"knowsCooper\", \"Он знает, что есть некий Агент Купер\", \"И он ничего не знает о личности того самого агента, что можно использовать\");\r\n        this[\"ThinksIAmCooper@\"] = BoolProperty_Personal(n, \"thinksIAmCooper\", false);\r\n        this[\"ThoughtIWasCooper@\"] = BoolProperty_Personal(n, \"thoughtIWasCooper\", false);\r\n        this[\"FalledWhenIKickedHim@\"] = BoolProperty_Personal(n, \"falledWhenIKickedHim\", false);\r\n        this[\"ToldMeSecrets@\"] = BoolProperty_Personal(n, \"toldMeSecrets\", false);\r\n    }\r\n    [\"Person.Person.Roles\"]() {\r\n        const x = this;\r\n        return RoleModel_$ctor_Z1C2BA672(ofArray([InLocation_$ctor_Z384F8060(Person__get_Name(x), \"kitchen\"), Talker_$ctor_7536DD07(Person__get_Name(x), DefaultBasicAnswers, new Reaction(3))]));\r\n    }\r\n}\r\n\r\nexport function PolicemanJoe$reflection() {\r\n    return class_type(\"GameDvaCharacters.PolicemanJoe\", void 0, PolicemanJoe, Person$reflection());\r\n}\r\n\r\nexport function PolicemanJoe_$ctor() {\r\n    return new PolicemanJoe();\r\n}\r\n\r\nexport function PolicemanJoe__get_UserKnowsHisName(__) {\r\n    return __[\"UserKnowsHisName@\"];\r\n}\r\n\r\nexport function PolicemanJoe__get_knowsAgentCooper(__) {\r\n    return __[\"knowsAgentCooper@\"];\r\n}\r\n\r\nexport function PolicemanJoe__get_ThinksIAmCooper(__) {\r\n    return __[\"ThinksIAmCooper@\"];\r\n}\r\n\r\nexport function PolicemanJoe__get_ThoughtIWasCooper(__) {\r\n    return __[\"ThoughtIWasCooper@\"];\r\n}\r\n\r\nexport function PolicemanJoe__get_FalledWhenIKickedHim(__) {\r\n    return __[\"FalledWhenIKickedHim@\"];\r\n}\r\n\r\nexport function PolicemanJoe__get_ToldMeSecrets(__) {\r\n    return __[\"ToldMeSecrets@\"];\r\n}\r\n\r\nexport class Babka extends Person {\r\n    constructor() {\r\n        super(\"babka\", \"Какая-то старая бабка\");\r\n        const n = \"babka\";\r\n    }\r\n    [\"Person.Person.Roles\"]() {\r\n        const x = this;\r\n        return RoleModel_$ctor_Z1C2BA672(ofArray([InLocation_$ctor_Z384F8060(Person__get_Name(x), \"камера\"), Talker_$ctor_7536DD07(Person__get_Name(x), DefaultBasicAnswers, new Reaction(6))]));\r\n    }\r\n}\r\n\r\nexport function Babka$reflection() {\r\n    return class_type(\"GameDvaCharacters.Babka\", void 0, Babka, Person$reflection());\r\n}\r\n\r\nexport function Babka_$ctor() {\r\n    return new Babka();\r\n}\r\n\r\nexport class BasicPerson extends Person {\r\n    constructor(id, displayName, located) {\r\n        super(id, displayName);\r\n        this.located = located;\r\n    }\r\n    [\"Person.Person.Roles\"]() {\r\n        const x = this;\r\n        return RoleModel_$ctor_Z1C2BA672(ofArray([InLocation_$ctor_Z384F8060(Person__get_Name(x), x.located), Talker_$ctor_7536DD07(Person__get_Name(x), DefaultBasicAnswers, new Reaction(6))]));\r\n    }\r\n}\r\n\r\nexport function BasicPerson$reflection() {\r\n    return class_type(\"GameDvaCharacters.BasicPerson\", void 0, BasicPerson, Person$reflection());\r\n}\r\n\r\nexport function BasicPerson_$ctor_30230F9B(id, displayName, located) {\r\n    return new BasicPerson(id, displayName, located);\r\n}\r\n\r\nexport class World {\r\n    constructor(facts) {\r\n        this.facts = facts;\r\n        const name = \"world\";\r\n        this[\"DeadBodyFoundThisLife@\"] = BoolProperty_Personal(name, \"deadFoundThisLife\", false);\r\n        this[\"PoliceArriving@\"] = BoolProperty_Personal(name, \"policeArriving\", false);\r\n        this[\"PoliceComingCounter@\"] = IterationCounter_Personal(name, \"policeComingCounter\");\r\n        this[\"talkedToPolice@\"] = BoolProperty_Personal(name, \"talkedToPolice\", false);\r\n    }\r\n}\r\n\r\nexport function World$reflection() {\r\n    return class_type(\"GameDvaCharacters.World\", void 0, World);\r\n}\r\n\r\nexport function World_$ctor_Z7B873675(facts) {\r\n    return new World(facts);\r\n}\r\n\r\nexport function World__get_DeadBodyFoundThisLife(__) {\r\n    return __[\"DeadBodyFoundThisLife@\"];\r\n}\r\n\r\nexport function World__CanStartActionInTheFlat_Z745B8E35(x, s) {\r\n    if (BoolProperty__Get_Z745B8E35(World__get_DeadBodyFoundThisLife(x), s)) {\r\n        return Fact__IsKnown_Z745B8E35(GameDvaFacts__get_version(x.facts), s);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function World__get_PoliceArriving(__) {\r\n    return __[\"PoliceArriving@\"];\r\n}\r\n\r\nexport function World__get_PoliceComingCounter(__) {\r\n    return __[\"PoliceComingCounter@\"];\r\n}\r\n\r\nexport function World__get_talkedToPolice(__) {\r\n    return __[\"talkedToPolice@\"];\r\n}\r\n\r\nexport function World__PoliceArrive_Z745B8E35(x, s) {\r\n    const arg00_1 = BoolProperty__Set(World__get_PoliceArriving(x), true, s);\r\n    return IterationCounter__Start_Z745B8E35(World__get_PoliceComingCounter(x), arg00_1);\r\n}\r\n\r\nexport function World__PoliceCameAlready_Z745B8E35(x, s) {\r\n    if (BoolProperty__Get_Z745B8E35(World__get_PoliceArriving(x), s)) {\r\n        return IterationCounter__Elapsed_Z745B8E35(World__get_PoliceComingCounter(x), s) > 4;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function saved(pers) {\r\n    void savePers(pers);\r\n    return pers;\r\n}\r\n\r\nexport class Characters {\r\n    constructor(facts) {\r\n        const myself = Myself_$ctor();\r\n        this[\"Katya@\"] = saved(myself);\r\n        this[\"World@\"] = World_$ctor_Z7B873675(facts);\r\n    }\r\n}\r\n\r\nexport function Characters$reflection() {\r\n    return class_type(\"GameDvaCharacters.Characters\", void 0, Characters);\r\n}\r\n\r\nexport function Characters_$ctor_Z7B873675(facts) {\r\n    return new Characters(facts);\r\n}\r\n\r\nexport function Characters__get_Katya(__) {\r\n    return __[\"Katya@\"];\r\n}\r\n\r\nexport function Characters__get_World(__) {\r\n    return __[\"World@\"];\r\n}\r\n\r\nexport function Characters__DeathReset_Z745B8E35(x, s) {\r\n    const oldState = s.Data;\r\n    return new State(s.UI, s.UIStack, s.Animation, s.Previous, s.InteractionHistory, s.Log, s.KnownFacts, s.KnownPersons, s.Iteration, empty(), s.Error);\r\n}\r\n\r\n//# sourceMappingURL=GameDvaCharacters.fs.js.map\r\n","import { makeInitialStateInDialog } from \"../State.fs.js\";\r\nimport { UReference } from \"../Data.fs.js\";\r\nimport { setGameRunner, reset } from \"../Engine.fs.js\";\r\nimport { GameDvaFacts__get_bitchWantsMoney, GameDvaFacts_$ctor } from \"./GameDvaFacts.fs.js\";\r\nimport { Characters_$ctor_Z7B873675 } from \"../GameDvaCharacters.fs.js\";\r\nimport { doGoToWindow, VariantBuilder__Yield_1505, VariantBuilder__SetText_Z6B14CDE8, VariantBuilder__SetAction_Z55D3A3AE, VariantBuilder__Run_4E5595C3, variant, WindowBuilder__OnEntry_Z6CC484FF, popVariant, createDialog, op_MinusMinusMinus, WindowBuilder__Yield_1505, WindowBuilder__Stxt_4615C44C, WindowBuilder__Get2_4E6D34B, WindowBuilder__Run_25360597, window$ } from \"../DSL.fs.js\";\r\nimport { toWindow, makeUnlockedVariant } from \"../Dialog.fs.js\";\r\nimport { ofArray, singleton } from \"../.fable/fable-library.3.1.11/List.js\";\r\nimport { Fact__Acquire_Z745B8E35 } from \"../Facts.fs.js\";\r\nimport { init as init_1 } from \"./GameChapter2.fs.js\";\r\nimport { init as init_2 } from \"./GameChapter3.fs.js\";\r\nimport { class_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\n\r\nexport const INITIAL_STATE = makeInitialStateInDialog(new UReference(\"init\", \"init\"));\r\n\r\nexport function build() {\r\n    let builder$0040_1, builder$0040_2, builder$0040_3, builder$0040_4, builder$0040_5, builder$0040_6, builder$0040_7, objectArg, builder$0040_8, builder$0040_9, builder$0040_10, builder$0040_11, builder$0040_12, builder$0040_13, builder$0040_14, builder$0040_15, builder$0040_16, builder$0040_17, builder$0040_18, builder$0040_19, builder$0040_20, builder$0040_21, builder$0040_22, builder$0040_23, builder$0040_24, builder$0040_25, builder$0040_26, builder$0040_27, builder$0040_28, builder$0040_29, builder$0040_30, builder$0040_31, builder$0040_32, builder$0040_33, builder$0040_34, builder$0040_35, builder$0040_36, builder$0040_37, builder$0040_39;\r\n    reset();\r\n    const facts = GameDvaFacts_$ctor();\r\n    const chars = Characters_$ctor_Z7B873675(facts);\r\n    let wInit;\r\n    const builder$0040 = window$(\"init\");\r\n    wInit = WindowBuilder__Run_25360597(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Get2_4E6D34B(builder$0040, WindowBuilder__Stxt_4615C44C(builder$0040, WindowBuilder__Yield_1505(builder$0040), \"Привет, Катюшенька. Сегодня тебе уже 18, а значит ты можешь начинать задумываться о своем будущем.\"), op_MinusMinusMinus(\"давай\", \"второй.о будущем\")), op_MinusMinusMinus(\"нет, я еще маленькая\", \"база.не маленькая\")), makeUnlockedVariant(\"это всего лишь сон\", toWindow(\"2\"))), op_MinusMinusMinus(\"так, Саша, блин, мне не 18\", \"второй.не 18\")));\r\n    void createDialog(\"база\", singleton((builder$0040_1 = window$(\"не маленькая\"), WindowBuilder__Run_25360597(builder$0040_1, WindowBuilder__Get2_4E6D34B(builder$0040_1, WindowBuilder__Stxt_4615C44C(builder$0040_1, WindowBuilder__Yield_1505(builder$0040_1), \"не маленькая ты уже\"), popVariant(\"ну ладно\"))))));\r\n    void createDialog(\"второй\", ofArray([(builder$0040_2 = window$(\"о будущем\"), WindowBuilder__Run_25360597(builder$0040_2, WindowBuilder__Get2_4E6D34B(builder$0040_2, WindowBuilder__Get2_4E6D34B(builder$0040_2, WindowBuilder__Get2_4E6D34B(builder$0040_2, WindowBuilder__Get2_4E6D34B(builder$0040_2, WindowBuilder__Stxt_4615C44C(builder$0040_2, WindowBuilder__Yield_1505(builder$0040_2), \"что тебя больше всего интересует?\"), makeUnlockedVariant(\"безопасность\", toWindow(\"безопасность\"))), makeUnlockedVariant(\"финансовое благополучие\", toWindow(\"деньги\"))), makeUnlockedVariant(\"здоровье\", toWindow(\"здоровье\"))), makeUnlockedVariant(\"отношения\", toWindow(\"отношения\"))))), (builder$0040_3 = window$(\"не 18\"), WindowBuilder__Run_25360597(builder$0040_3, WindowBuilder__Get2_4E6D34B(builder$0040_3, WindowBuilder__Get2_4E6D34B(builder$0040_3, WindowBuilder__Get2_4E6D34B(builder$0040_3, WindowBuilder__Stxt_4615C44C(builder$0040_3, WindowBuilder__Yield_1505(builder$0040_3), \"Ты всегда моя маленькая девочка\"), makeUnlockedVariant(\"дя\", toWindow(\"о будущем\"))), makeUnlockedVariant(\"давай таки подумаем\", toWindow(\"о будущем\"))), makeUnlockedVariant(\"ой все\", toWindow(\"о будущем\"))))), (builder$0040_4 = window$(\"безопасность\"), WindowBuilder__Run_25360597(builder$0040_4, WindowBuilder__Get2_4E6D34B(builder$0040_4, WindowBuilder__Get2_4E6D34B(builder$0040_4, WindowBuilder__Stxt_4615C44C(builder$0040_4, WindowBuilder__Yield_1505(builder$0040_4), \"Ты в безопасности. Но мы можем подумать об этом в более долгосрочной перспективе.\"), op_MinusMinusMinus(\"давай\", \"место.1\")), makeUnlockedVariant(\"ой все\", toWindow(\"о будущем\"))))), (builder$0040_5 = window$(\"здоровье\"), WindowBuilder__Run_25360597(builder$0040_5, WindowBuilder__Get2_4E6D34B(builder$0040_5, WindowBuilder__Get2_4E6D34B(builder$0040_5, WindowBuilder__Get2_4E6D34B(builder$0040_5, WindowBuilder__Stxt_4615C44C(builder$0040_5, WindowBuilder__Yield_1505(builder$0040_5), \"Здоровье всему голова. Ему деньги нужны. Хочешь?\"), op_MinusMinusMinus(\"нет\", \"место.1\")), makeUnlockedVariant(\"да\", toWindow(\"деньги\"))), makeUnlockedVariant(\"ой все\", toWindow(\"о будущем\"))))), (builder$0040_6 = window$(\"отношения\"), WindowBuilder__Run_25360597(builder$0040_6, WindowBuilder__Get2_4E6D34B(builder$0040_6, WindowBuilder__Get2_4E6D34B(builder$0040_6, WindowBuilder__Stxt_4615C44C(builder$0040_6, WindowBuilder__Yield_1505(builder$0040_6), \"Я стараюсь быть лучше для тебя, а не просто писать прикольные диаголовые игрушки.\"), op_MinusMinusMinus(\"так надо подумать, где\", \"место.1\")), makeUnlockedVariant(\"есть еще варианты?\", toWindow(\"о будущем\"))))), (builder$0040_7 = window$(\"деньги\"), WindowBuilder__Run_25360597(builder$0040_7, WindowBuilder__Get2_4E6D34B(builder$0040_7, WindowBuilder__Get2_4E6D34B(builder$0040_7, WindowBuilder__OnEntry_Z6CC484FF(builder$0040_7, WindowBuilder__Stxt_4615C44C(builder$0040_7, WindowBuilder__Yield_1505(builder$0040_7), \"Та я где-то достану, ты не переживай. Лучше давай подумаем, где жить.\"), (objectArg = GameDvaFacts__get_bitchWantsMoney(facts), (arg00) => Fact__Acquire_Z745B8E35(objectArg, arg00))), op_MinusMinusMinus(\"давай\", \"место.1\")), makeUnlockedVariant(\"ой все\", toWindow(\"о будущем\")))))]));\r\n    createDialog(\"место\", ofArray([(builder$0040_8 = window$(\"1\"), WindowBuilder__Run_25360597(builder$0040_8, WindowBuilder__Get2_4E6D34B(builder$0040_8, WindowBuilder__Get2_4E6D34B(builder$0040_8, WindowBuilder__Get2_4E6D34B(builder$0040_8, WindowBuilder__Get2_4E6D34B(builder$0040_8, WindowBuilder__Get2_4E6D34B(builder$0040_8, WindowBuilder__Stxt_4615C44C(builder$0040_8, WindowBuilder__Yield_1505(builder$0040_8), \"Что тебе больше нравится, исходя из твоего опыта?\"), makeUnlockedVariant(\"конечно Канада, я уже тут\", toWindow(\"канада\"))), makeUnlockedVariant(\"другая часть Канады, может теплая\", toWindow(\"канада\"))), makeUnlockedVariant(\"Европа\", toWindow(\"европа\"))), makeUnlockedVariant(\"Египет или Тайланд, остров Маврикий\", toWindow(\"тепло\"))), makeUnlockedVariant(\"у нас есть своя Держава\", toWindow(\"украина\"))))), (builder$0040_9 = window$(\"украина\"), WindowBuilder__Run_25360597(builder$0040_9, WindowBuilder__Get2_4E6D34B(builder$0040_9, WindowBuilder__Get2_4E6D34B(builder$0040_9, WindowBuilder__Get2_4E6D34B(builder$0040_9, WindowBuilder__Stxt_4615C44C(builder$0040_9, WindowBuilder__Yield_1505(builder$0040_9), \"Дом. Мы тут после войны сможем жить, как короли. Тачки, хаты, доставка еды.\\r\\n            Все, что только можно представить. Можно ездить отдыхать на пол года, потому что расходы в\\r\\n            Украине небольшие. Можно покупать игрушки. Или дайсон. Хотя это в Украине уже дорого. Надо ехать\\r\\n            за бугор покупать. А потом возвращаться.\"), makeUnlockedVariant(\"лучше таки Канада\", toWindow(\"канада\"))), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))), makeUnlockedVariant(\"а еще какие плюсы?\", toWindow(\"украина2\"))))), (builder$0040_10 = window$(\"украина2\"), WindowBuilder__Run_25360597(builder$0040_10, WindowBuilder__Get2_4E6D34B(builder$0040_10, WindowBuilder__Get2_4E6D34B(builder$0040_10, WindowBuilder__Stxt_4615C44C(builder$0040_10, WindowBuilder__Yield_1505(builder$0040_10), \"Ну детей тут заводить... такое. Заминировано все, люди с ПТСР, экономика в хреновом\\r\\n            состоянии. Но для нас с тобой это не минус, мы проживем. Кто-то иногда работать будет. Кто-то нет.\\r\\n            Все вокруг родные, все вокруг свои. Мы знаем язык и местные обычаи, мы привыкли к местному\\r\\n            обществу.\"), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))), makeUnlockedVariant(\"ну хорошо\", toWindow(\"счастье\"))))), (builder$0040_11 = window$(\"канада\"), WindowBuilder__Run_25360597(builder$0040_11, WindowBuilder__Get2_4E6D34B(builder$0040_11, WindowBuilder__Get2_4E6D34B(builder$0040_11, WindowBuilder__Stxt_4615C44C(builder$0040_11, WindowBuilder__Yield_1505(builder$0040_11), \"Канада большая. Можем объездить ее всю вдоль и поперек. Но сначала заведем то, на чем ездить.\\r\\n            Снимем там недорогое место где-то, и обставим его по-богатому, потому что блин, один раз живем. Зимой\\r\\n            будем стараться быть в тепле, насколько возможно. Будем греться друг об друга. Штуки сможем покупать,\\r\\n            туда доставляют все что угодно. И не так дорого, как в Украине. Еда дороже, но сколько там нас, чтобы\\r\\n            это было заметно. Олени вокруг.\"), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))), makeUnlockedVariant(\"ну хорошо\", toWindow(\"счастье\"))))), (builder$0040_12 = window$(\"европа\"), WindowBuilder__Run_25360597(builder$0040_12, WindowBuilder__Get2_4E6D34B(builder$0040_12, WindowBuilder__Get2_4E6D34B(builder$0040_12, WindowBuilder__Stxt_4615C44C(builder$0040_12, WindowBuilder__Yield_1505(builder$0040_12), \"Европа... это очень разная штука. Украина - тоже Европа, только магазины работают по вечерам и \\r\\n            есть некоторые трудности с безумными заграничными соседями.\"), makeUnlockedVariant(\"Украина топ\", toWindow(\"украина\"))), makeUnlockedVariant(\"не, другая Европа\", toWindow(\"европа2\"))))), (builder$0040_13 = window$(\"европа2\"), WindowBuilder__Run_25360597(builder$0040_13, WindowBuilder__Get2_4E6D34B(builder$0040_13, WindowBuilder__Get2_4E6D34B(builder$0040_13, WindowBuilder__Get2_4E6D34B(builder$0040_13, WindowBuilder__Get2_4E6D34B(builder$0040_13, WindowBuilder__Stxt_4615C44C(builder$0040_13, WindowBuilder__Yield_1505(builder$0040_13), \"Тогда давай подумаем, какая. Старая Европа - там все вот так вот. Левые либералы, права человека,\\r\\n            налоги болше зарплаты, недоразвитая сфера услуг, но сами зарплаты - очень даже ничего, учитывая, что\\r\\n            таки специалисты, как есть в Украине, очень там нужны. У них все решают бумажки и бюрократия, а мы можем\\r\\n            делать дела. И октоберфест.\\r\\n            \"), makeUnlockedVariant(\"не, мне бы лучше Польша, Литва, такое\", toWindow(\"польша\"))), makeUnlockedVariant(\"люблю холодные, но очаровательные земли Викингов\", toWindow(\"сканд\"))), makeUnlockedVariant(\"не, лучше Украина\", toWindow(\"украина\"))), makeUnlockedVariant(\"да, там неплохо\", toWindow(\"счастье\"))))), (builder$0040_14 = window$(\"польша\"), WindowBuilder__Run_25360597(builder$0040_14, WindowBuilder__Get2_4E6D34B(builder$0040_14, WindowBuilder__Get2_4E6D34B(builder$0040_14, WindowBuilder__Get2_4E6D34B(builder$0040_14, WindowBuilder__Get2_4E6D34B(builder$0040_14, WindowBuilder__Stxt_4615C44C(builder$0040_14, WindowBuilder__Yield_1505(builder$0040_14), \"Курва! Хороший выбор. Там уже половина населения говорит на понятном нам языке, а вторая -\\r\\n            на почти понятном. Там все, как в Украине, за редким исключением. Мы будем чувствовать себя почти как дома.\\r\\n            И дом рядом, если что. Совсем рядом, сел на свою евробляху и поехал. А главное - русня туда не сунется. Ручки\\r\\n            коротки. Еда есть, дом не очень дорого, работы хватает не только для удаленщиков, половина наших ИТ компаний\\r\\n            уже там, и не ИТ - тоже. Туда даже Новая Почта лезет. Украинизация Европы началась с них.\"), makeUnlockedVariant(\"Украина топ\", toWindow(\"украина\"))), makeUnlockedVariant(\"не, другая Европа\", toWindow(\"европа2\"))), makeUnlockedVariant(\"ну хорошо\", toWindow(\"счастье\"))), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))))), (builder$0040_15 = window$(\"сканд\"), WindowBuilder__Run_25360597(builder$0040_15, WindowBuilder__Get2_4E6D34B(builder$0040_15, WindowBuilder__Get2_4E6D34B(builder$0040_15, WindowBuilder__Get2_4E6D34B(builder$0040_15, WindowBuilder__Stxt_4615C44C(builder$0040_15, WindowBuilder__Yield_1505(builder$0040_15), \"Жить там такое себе. Безумно дорого, но очень круто. Мы можем себе позволить. Разве что счет на\\r\\n            отопление будет нас душить. А так там все ездят на Теслах, хоть и платят дикие налоги и покупают хлеб в\\r\\n            100 раз дороже чем мы. Это просто другой уровень. Ну и природа вокруг, которую надо увидеть. Обязательно\\r\\n            поедем. Не обязательно останемся. Хотя нам к холоду не привыкать, может в этом будут свои плюсы.\"), makeUnlockedVariant(\"ну хорошо\", toWindow(\"счастье\"))), makeUnlockedVariant(\"не, другая Европа\", toWindow(\"европа2\"))), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))))), (builder$0040_16 = window$(\"тепло\"), WindowBuilder__Run_25360597(builder$0040_16, WindowBuilder__Get2_4E6D34B(builder$0040_16, WindowBuilder__Get2_4E6D34B(builder$0040_16, WindowBuilder__Stxt_4615C44C(builder$0040_16, WindowBuilder__Yield_1505(builder$0040_16), \"Ну блин, да, а чего нет. Будем тусить под палящим солнцем. Целых две минуты, потом домой под кондиционер.\\r\\n            Будет море с рыбками, будут заведения с едой для туристов, которую мы даже сможем переваривать.\\r\\n            А для местных, под которых мы постепенно будем маскироваться - там все недорого и комфортно. Да,\\r\\n            может это не центр душной городской жизни, но за то это природа, и отсутствие зимы. Интернет\\r\\n            нормальный только сделать и все отлично будет. И добраться домой, если нужно, будет не слишком тяжело благодаря\\r\\n            туристическим маршрутам.\"), makeUnlockedVariant(\"еще варианты\", toWindow(\"1\"))), makeUnlockedVariant(\"ну хорошо\", toWindow(\"счастье\"))))), (builder$0040_17 = window$(\"счастье\"), WindowBuilder__Run_25360597(builder$0040_17, WindowBuilder__Get2_4E6D34B(builder$0040_17, WindowBuilder__Get2_4E6D34B(builder$0040_17, WindowBuilder__Stxt_4615C44C(builder$0040_17, WindowBuilder__Yield_1505(builder$0040_17), \"Мы сможем там спокойно жить, заводить хоть семью, хоть котов, хоть бдсм-клуб. Не сразу, но\\r\\n            со временем доберемся до какого-то комфорта. И не будем больше вечно подвешенными.\"), makeUnlockedVariant(\"не, давай что-то другое\", toWindow(\"1\"))), op_MinusMinusMinus(\"а кушать что будем\", \"кушать.1\"))))]));\r\n    void createDialog(\"кушать\", ofArray([(builder$0040_18 = window$(\"1\"), WindowBuilder__Run_25360597(builder$0040_18, WindowBuilder__Get2_4E6D34B(builder$0040_18, WindowBuilder__Get2_4E6D34B(builder$0040_18, WindowBuilder__Get2_4E6D34B(builder$0040_18, WindowBuilder__Get2_4E6D34B(builder$0040_18, WindowBuilder__Get2_4E6D34B(builder$0040_18, WindowBuilder__Stxt_4615C44C(builder$0040_18, WindowBuilder__Yield_1505(builder$0040_18), \"Да какая разница? Ну вот, например:\"), makeUnlockedVariant(\"куриные крылышки\", toWindow(\"крилышки\"))), makeUnlockedVariant(\"суши\", toWindow(\"суши\"))), makeUnlockedVariant(\"пивас\", toWindow(\"пиво\"))), makeUnlockedVariant(\"что дадут\", toWindow(\"что-то\"))), makeUnlockedVariant(\"плоды любви\", toWindow(\"любовь\"))))), (builder$0040_19 = window$(\"любовь\"), WindowBuilder__Run_25360597(builder$0040_19, WindowBuilder__Get2_4E6D34B(builder$0040_19, WindowBuilder__Get2_4E6D34B(builder$0040_19, WindowBuilder__Stxt_4615C44C(builder$0040_19, WindowBuilder__Yield_1505(builder$0040_19), \"О да, будем питаться одной только любовью. надеюсь, мы сможем себе позволить что-то еще.\"), makeUnlockedVariant(\"например, что?\", toWindow(\"1\"))), makeUnlockedVariant(\"я просто выбрала самый прикольный вариант\", toWindow(\"зря\"))))), (builder$0040_20 = window$(\"пиво\"), WindowBuilder__Run_25360597(builder$0040_20, WindowBuilder__Get2_4E6D34B(builder$0040_20, WindowBuilder__Get2_4E6D34B(builder$0040_20, WindowBuilder__Stxt_4615C44C(builder$0040_20, WindowBuilder__Yield_1505(builder$0040_20), \"Пиииииииииииииво. И водкой закусывать. У тебя есть вкус. Люблю тебя.\"), makeUnlockedVariant(\"сам это жри\", toWindow(\"зря\"))), op_MinusMinusMinus(\"давай уже про что-то еще поговорим\", \"выбор.1\")))), (builder$0040_21 = window$(\"суши\"), WindowBuilder__Run_25360597(builder$0040_21, WindowBuilder__Get2_4E6D34B(builder$0040_21, WindowBuilder__Get2_4E6D34B(builder$0040_21, WindowBuilder__Get2_4E6D34B(builder$0040_21, WindowBuilder__Stxt_4615C44C(builder$0040_21, WindowBuilder__Yield_1505(builder$0040_21), \"Суши будешь сама свои кушать сколько захочешь. И пиццу. Буду тебе привозить их мешками.\\r\\n            А потом пойду и найду себе гречки.\"), makeUnlockedVariant(\"сам жри свою гречку, я создана для высокой кухни\", toWindow(\"зря\"))), op_MinusMinusMinus(\"я тебе приготовлю сама\", \"выбор.1\")), op_MinusMinusMinus(\"давай уже про что-то еще поговорим\", \"выбор.1\")))), (builder$0040_22 = window$(\"что-то\"), WindowBuilder__Run_25360597(builder$0040_22, WindowBuilder__Get2_4E6D34B(builder$0040_22, WindowBuilder__Get2_4E6D34B(builder$0040_22, WindowBuilder__Stxt_4615C44C(builder$0040_22, WindowBuilder__Yield_1505(builder$0040_22), \"Ну да, не стоит акцентировать внимание на таких бытовых вопросах.\"), makeUnlockedVariant(\"а я думаю, что стоит\", toWindow(\"зря\"))), op_MinusMinusMinus(\"давай уже про что-то еще поговорим\", \"выбор.1\")))), (builder$0040_23 = window$(\"крилышки\"), WindowBuilder__Run_25360597(builder$0040_23, WindowBuilder__Get2_4E6D34B(builder$0040_23, WindowBuilder__Get2_4E6D34B(builder$0040_23, WindowBuilder__Stxt_4615C44C(builder$0040_23, WindowBuilder__Yield_1505(builder$0040_23), \"КФЦ, а на худой конец макдак там точно найдется, не переживай. В любом случае у тебя есть Саша,\\r\\n            а он умеет превращать просто картошку в изысканное блюдо - жареную картошку. С переменным успехом.\"), makeUnlockedVariant(\"а что еще есть?\", toWindow(\"1\"))), op_MinusMinusMinus(\"давай уже про что-то еще поговорим\", \"выбор.1\")))), (builder$0040_24 = window$(\"зря\"), WindowBuilder__Run_25360597(builder$0040_24, WindowBuilder__Get2_4E6D34B(builder$0040_24, WindowBuilder__Get2_4E6D34B(builder$0040_24, WindowBuilder__Stxt_4615C44C(builder$0040_24, WindowBuilder__Yield_1505(builder$0040_24), \"Ну и зря. Может, я серьезно.\"), makeUnlockedVariant(\"я выберу другое\", toWindow(\"1\"))), op_MinusMinusMinus(\"давай уже про что-то еще поговорим\", \"выбор.1\"))))]));\r\n    void createDialog(\"выбор\", ofArray([(builder$0040_25 = window$(\"1\"), WindowBuilder__Run_25360597(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Get2_4E6D34B(builder$0040_25, WindowBuilder__Stxt_4615C44C(builder$0040_25, WindowBuilder__Yield_1505(builder$0040_25), \"Что тебя интересует?\"), op_MinusMinusMinus(\"еда\", \"кушать.крилышки\")), op_MinusMinusMinus(\"секс\", \"секс.1\")), makeUnlockedVariant(\"стабильность\", toWindow(\"стаб\"))), op_MinusMinusMinus(\"работа\", \"работа.1\")), makeUnlockedVariant(\"дети\", toWindow(\"дети\"))), op_MinusMinusMinus(\"где жить\", \"место.1\")))), (builder$0040_26 = window$(\"стаб\"), WindowBuilder__Run_25360597(builder$0040_26, WindowBuilder__Get2_4E6D34B(builder$0040_26, WindowBuilder__Stxt_4615C44C(builder$0040_26, WindowBuilder__Yield_1505(builder$0040_26), \"О какой стабильности может идти речь. Когда мы вместе - тебе не о чем задумываться.\\r\\n            Ты просто можешь спрятаться за меня. А пока мы не вместе - надо подождать. Я все порешаю.\"), makeUnlockedVariant(\"хорошо\", toWindow(\"1\"))))), (builder$0040_27 = window$(\"дети\"), WindowBuilder__Run_25360597(builder$0040_27, WindowBuilder__Get2_4E6D34B(builder$0040_27, WindowBuilder__Get2_4E6D34B(builder$0040_27, WindowBuilder__Stxt_4615C44C(builder$0040_27, WindowBuilder__Yield_1505(builder$0040_27), \"Этот раздел приложения пока находится в разработке и не доступен для пользователя.\"), makeUnlockedVariant(\"хорошо\", toWindow(\"1\"))), makeUnlockedVariant(\"вечно ты в своей разработке, пора бы уже задуматься\", toWindow(\"1\")))))]));\r\n    void createDialog(\"работа\", ofArray([(builder$0040_28 = window$(\"1\"), WindowBuilder__Run_25360597(builder$0040_28, WindowBuilder__Get2_4E6D34B(builder$0040_28, WindowBuilder__Get2_4E6D34B(builder$0040_28, WindowBuilder__Get2_4E6D34B(builder$0040_28, WindowBuilder__Stxt_4615C44C(builder$0040_28, WindowBuilder__Yield_1505(builder$0040_28), \"А нужна ли тебе вообще та работа\"), makeUnlockedVariant(\"да\", toWindow(\"да\"))), makeUnlockedVariant(\"не обязательно\", toWindow(\"может\"))), makeUnlockedVariant(\"нет\", toWindow(\"нет\"))))), (builder$0040_29 = window$(\"может\"), WindowBuilder__Run_25360597(builder$0040_29, WindowBuilder__Get2_4E6D34B(builder$0040_29, WindowBuilder__Get2_4E6D34B(builder$0040_29, WindowBuilder__Stxt_4615C44C(builder$0040_29, WindowBuilder__Yield_1505(builder$0040_29), \"Может, не надо думать сейчас об этом. У тебя будет время. Я надеюсь, на тебя нет какого-то\\r\\n            сильного финансового давления, которое бы заставляло тебя карапкаться вверх по каръерной лестнице\\r\\n            не считаясь с потерями.\"), makeUnlockedVariant(\"я подумаю еще\", toWindow(\"1\"))), popVariant(\"может и не надо\")))), (builder$0040_30 = window$(\"да\"), WindowBuilder__Run_25360597(builder$0040_30, WindowBuilder__Get2_4E6D34B(builder$0040_30, WindowBuilder__Get2_4E6D34B(builder$0040_30, WindowBuilder__Stxt_4615C44C(builder$0040_30, WindowBuilder__Yield_1505(builder$0040_30), \"Ты умна. Это, блин, факт. И ты способна делать монотонную работу. В том числе ту, в которой\\r\\n            надо быть умной. Ты уникальный человек, который может адаптироваться к чему угодно. Но ты и не должна.\"), makeUnlockedVariant(\"не нужна мне ваша работа\", toWindow(\"нет\"))), popVariant(\"ладно\")))), (builder$0040_31 = window$(\"нет\"), WindowBuilder__Run_25360597(builder$0040_31, WindowBuilder__Get2_4E6D34B(builder$0040_31, WindowBuilder__Get2_4E6D34B(builder$0040_31, WindowBuilder__Get2_4E6D34B(builder$0040_31, WindowBuilder__Stxt_4615C44C(builder$0040_31, WindowBuilder__Yield_1505(builder$0040_31), \"Будь со мной и тебе не придется делать это по какой-то другой причине, кроме удовольствия и\\r\\n            самореализации. А удовольствие доступно не везде. Можно выбирать с умом, спокойно и хладнокровно.\\r\\n            А можно не выбирать вообще. Ты свободна.\"), makeUnlockedVariant(\"мне нужна какая-то работа\", toWindow(\"да\"))), makeUnlockedVariant(\"хммм\", toWindow(\"может\"))), popVariant(\"ладно\"))))]));\r\n    void createDialog(\"секс\", ofArray([(builder$0040_32 = window$(\"1\"), WindowBuilder__Run_25360597(builder$0040_32, WindowBuilder__Get2_4E6D34B(builder$0040_32, WindowBuilder__Get2_4E6D34B(builder$0040_32, WindowBuilder__Get2_4E6D34B(builder$0040_32, WindowBuilder__Get2_4E6D34B(builder$0040_32, WindowBuilder__Get2_4E6D34B(builder$0040_32, WindowBuilder__Stxt_4615C44C(builder$0040_32, WindowBuilder__Yield_1505(builder$0040_32), \"О, вот это я понимаю. Как же ты хочешь, чтобы это было?\"), makeUnlockedVariant(\"грубо\", toWindow(\"грубо\"))), makeUnlockedVariant(\"нежно\", toWindow(\"нежно\"))), makeUnlockedVariant(\"не важно, главное чтобы любили друг друга\", toWindow(\"неважно\"))), makeUnlockedVariant(\"пора задуматься про анал\", toWindow(\"анал\"))), makeUnlockedVariant(\"мне кажется, это не мое\", toWindow(\"не мое\"))))), (builder$0040_33 = window$(\"грубо\"), WindowBuilder__Run_25360597(builder$0040_33, WindowBuilder__Get2_4E6D34B(builder$0040_33, WindowBuilder__Stxt_4615C44C(builder$0040_33, WindowBuilder__Yield_1505(builder$0040_33), \"О, моя девочка. Любишь быть за каменной стеной не только в жизни, а и в постели.\\r\\n            У тебя все будет, это не проблема. Будешь счастливая девочка. Хотя бы в мелочах.\"), popVariant(\"дя\")))), (builder$0040_34 = window$(\"нежно\"), WindowBuilder__Run_25360597(builder$0040_34, WindowBuilder__Get2_4E6D34B(builder$0040_34, WindowBuilder__Stxt_4615C44C(builder$0040_34, WindowBuilder__Yield_1505(builder$0040_34), \"Такое у меня тоже есть. Может это неожиданно для тебя, но есть. В ассортименте.\\r\\n            Просто надо научиться его из меня доставать. И ты можешь. Будешь счастливая девочка.\"), popVariant(\"дя\")))), (builder$0040_35 = window$(\"неважно\"), WindowBuilder__Run_25360597(builder$0040_35, WindowBuilder__Get2_4E6D34B(builder$0040_35, WindowBuilder__Stxt_4615C44C(builder$0040_35, WindowBuilder__Yield_1505(builder$0040_35), \"А вот мне важно. Доверься. Будешь счастливая девочка.\"), popVariant(\"дя\")))), (builder$0040_36 = window$(\"анал\"), WindowBuilder__Run_25360597(builder$0040_36, WindowBuilder__Get2_4E6D34B(builder$0040_36, WindowBuilder__Get2_4E6D34B(builder$0040_36, WindowBuilder__Stxt_4615C44C(builder$0040_36, WindowBuilder__Yield_1505(builder$0040_36), \"Это будет нежно, комфортно и слегка необычно. Бояться нечего. Мы справимся.\\r\\n            Доверься. Будешь счастливая девочка. С красивой пробочкой.\"), popVariant(\"дя\")), popVariant(\"ауч, но дя\")))), (builder$0040_37 = window$(\"не мое\"), WindowBuilder__Run_25360597(builder$0040_37, WindowBuilder__Get2_4E6D34B(builder$0040_37, WindowBuilder__Stxt_4615C44C(builder$0040_37, WindowBuilder__Yield_1505(builder$0040_37), \"Ну я сам не справлюсь. Но мы можем об этом поговорить. Ладно, что там говорить,\\r\\n            надо собираться вместе и делать.\"), popVariant(\"дя\"))))]));\r\n    let w2;\r\n    const builder$0040_38 = window$(\"2\");\r\n    w2 = WindowBuilder__Run_25360597(builder$0040_38, WindowBuilder__Get2_4E6D34B(builder$0040_38, WindowBuilder__Stxt_4615C44C(builder$0040_38, WindowBuilder__Yield_1505(builder$0040_38), \"Ты замечаешь, что на тебе совершенно нет одежды. И твоя грудь, довольно внушительных размеров,\\r\\n        ничем не прикрыта. Да, ты девушка. Да еще какая. Вспомнить бы только, как эту девушку зовут...\"), (builder$0040_39 = variant(\"эй, это не та игра\"), VariantBuilder__Run_4E5595C3(builder$0040_39, VariantBuilder__SetAction_Z55D3A3AE(builder$0040_39, VariantBuilder__SetText_Z6B14CDE8(builder$0040_39, VariantBuilder__Yield_1505(builder$0040_39), \"эй, это не так игра\"), doGoToWindow(\"init\"))))));\r\n    void createDialog(\"init\", ofArray([wInit, w2]));\r\n    void init_1(facts, chars);\r\n    const value_8 = init_2(facts, chars);\r\n}\r\n\r\nexport class GameDvaRunner {\r\n    constructor() {\r\n    }\r\n    InitialState() {\r\n        return INITIAL_STATE;\r\n    }\r\n    Build() {\r\n        build();\r\n    }\r\n}\r\n\r\nexport function GameDvaRunner$reflection() {\r\n    return class_type(\"GameDva.GameDvaRunner\", void 0, GameDvaRunner);\r\n}\r\n\r\nexport function GameDvaRunner_$ctor() {\r\n    return new GameDvaRunner();\r\n}\r\n\r\nexport function init() {\r\n    const runner = GameDvaRunner_$ctor();\r\n    setGameRunner(runner);\r\n}\r\n\r\n//# sourceMappingURL=GameDva.fs.js.map\r\n","import { Record, Union } from \"./.fable/fable-library.3.1.11/Types.js\";\r\nimport { tuple_type, list_type, option_type, record_type, class_type, union_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { Person$reflection } from \"./Person.fs.js\";\r\nimport { REPO_DIALOG, DialogOptionLock, DialogVariant__IsLocked_Z745B8E35, DialogOptionLock$reflection } from \"./Dialog.fs.js\";\r\nimport { cons, length, contains, append, empty, singleton, map, filter } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { findDisplayName } from \"./NPC.fs.js\";\r\nimport { RichTextElement$reflection } from \"./RichText.fs.js\";\r\nimport { HubDesign$reflection } from \"./HubDesign.fs.js\";\r\nimport { doPushWindow } from \"./DSL.fs.js\";\r\nimport { getGlobal } from \"./Data.fs.js\";\r\nimport { REPO_LOCATIONS } from \"./LocationHub.fs.js\";\r\nimport { REPO_PERSON_HUBS } from \"./PersonHub.fs.js\";\r\nimport { FSharpMap__get_Item } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { Fact$reflection, REPO_FACTS } from \"./Facts.fs.js\";\r\nimport { map as map_1, toList } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\nimport { stringHash } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { printf, toConsole } from \"./.fable/fable-library.3.1.11/String.js\";\r\nimport { InteractionHistoryRecord, State, State$reflection } from \"./State.fs.js\";\r\nimport { execute } from \"./Engine.fs.js\";\r\n\r\nexport class DialogActorView extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"UnknownActor\", \"RealActor\", \"NoActor\"];\r\n    }\r\n}\r\n\r\nexport function DialogActorView$reflection() {\r\n    return union_type(\"ViewModel.DialogActorView\", [], DialogActorView, () => [[[\"Item\", string_type]], [[\"Item1\", Person$reflection()], [\"Item2\", string_type]], []]);\r\n}\r\n\r\nexport function DialogActorView__asString(x) {\r\n    switch (x.tag) {\r\n        case 2: {\r\n            return void 0;\r\n        }\r\n        case 1: {\r\n            const text = x.fields[1];\r\n            return text;\r\n        }\r\n        default: {\r\n            const a = x.fields[0];\r\n            return a;\r\n        }\r\n    }\r\n}\r\n\r\nexport class DialogVariantView extends Record {\r\n    constructor(Text$, Action, IsLocked) {\r\n        super();\r\n        this.Text = Text$;\r\n        this.Action = Action;\r\n        this.IsLocked = IsLocked;\r\n    }\r\n}\r\n\r\nexport function DialogVariantView$reflection() {\r\n    return record_type(\"ViewModel.DialogVariantView\", [], DialogVariantView, () => [[\"Text\", string_type], [\"Action\", class_type(\"Actions.IAction\")], [\"IsLocked\", DialogOptionLock$reflection()]]);\r\n}\r\n\r\nexport function DialogVariantView_OfDialogVariant(s, d) {\r\n    return new DialogVariantView(d.Text, d.Action, DialogVariant__IsLocked_Z745B8E35(d, s));\r\n}\r\n\r\nexport function DialogVariantView_MakeUnlockedVariant(t, act) {\r\n    return new DialogVariantView(t, act, new DialogOptionLock(1));\r\n}\r\n\r\nexport class LocationHubVariantView extends Record {\r\n    constructor(Pic, Variant) {\r\n        super();\r\n        this.Pic = Pic;\r\n        this.Variant = Variant;\r\n    }\r\n}\r\n\r\nexport function LocationHubVariantView$reflection() {\r\n    return record_type(\"ViewModel.LocationHubVariantView\", [], LocationHubVariantView, () => [[\"Pic\", option_type(string_type)], [\"Variant\", DialogVariantView$reflection()]]);\r\n}\r\n\r\nexport function LocationHubVariantView_OfLocationHubVariant(s, h) {\r\n    return new LocationHubVariantView(h.Pic, DialogVariantView_OfDialogVariant(s, h.Variant));\r\n}\r\n\r\nexport function filterOutVariants(getVariant, items) {\r\n    const predicate = (a) => {\r\n        const variant = getVariant(a);\r\n        if (variant.IsLocked.tag === 2) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    return filter(predicate, items);\r\n}\r\n\r\nexport function makeActor(actor, state) {\r\n    if (actor != null) {\r\n        const actorId = actor;\r\n        const matchValue = findDisplayName(actorId, state);\r\n        if (matchValue != null) {\r\n            const text = matchValue[1];\r\n            const pers = matchValue[0];\r\n            return new DialogActorView(1, pers, text);\r\n        }\r\n        else {\r\n            return new DialogActorView(0, actorId);\r\n        }\r\n    }\r\n    else {\r\n        return new DialogActorView(2);\r\n    }\r\n}\r\n\r\nexport class DialogViewModel extends Record {\r\n    constructor(Actor, Text$, Variants) {\r\n        super();\r\n        this.Actor = Actor;\r\n        this.Text = Text$;\r\n        this.Variants = Variants;\r\n    }\r\n}\r\n\r\nexport function DialogViewModel$reflection() {\r\n    return record_type(\"ViewModel.DialogViewModel\", [], DialogViewModel, () => [[\"Actor\", DialogActorView$reflection()], [\"Text\", list_type(RichTextElement$reflection())], [\"Variants\", list_type(DialogVariantView$reflection())]]);\r\n}\r\n\r\nexport function DialogViewModel_OfDialogWindow(s, dwindow) {\r\n    if (dwindow.tag === 0) {\r\n        throw (new Error(\"should never render proxy windows\"));\r\n    }\r\n    else {\r\n        const d = dwindow.fields[0];\r\n        return new DialogViewModel(makeActor(d.Actor, s), d.Text(s), filterOutVariants((x) => x, map((arg10) => DialogVariantView_OfDialogVariant(s, arg10), d.Variants(s))));\r\n    }\r\n}\r\n\r\nexport class LocationHubViewModel extends Record {\r\n    constructor(Text$, DisplayName, Variants, Design, Locations, Persons) {\r\n        super();\r\n        this.Text = Text$;\r\n        this.DisplayName = DisplayName;\r\n        this.Variants = Variants;\r\n        this.Design = Design;\r\n        this.Locations = Locations;\r\n        this.Persons = Persons;\r\n    }\r\n}\r\n\r\nexport function LocationHubViewModel$reflection() {\r\n    return record_type(\"ViewModel.LocationHubViewModel\", [], LocationHubViewModel, () => [[\"Text\", list_type(RichTextElement$reflection())], [\"DisplayName\", string_type], [\"Variants\", list_type(DialogVariantView$reflection())], [\"Design\", HubDesign$reflection()], [\"Locations\", list_type(LocationHubVariantView$reflection())], [\"Persons\", list_type(LocationHubVariantView$reflection())]]);\r\n}\r\n\r\nexport function LocationHubViewModel_OfLocationHub(s, d) {\r\n    return new LocationHubViewModel(d.Description(s), d.Name, filterOutVariants((x) => x, map((arg10) => DialogVariantView_OfDialogVariant(s, arg10), d.Variants(s))), d.Design, filterOutVariants((a) => a.Variant, map((arg10_1) => LocationHubVariantView_OfLocationHubVariant(s, arg10_1), d.Locations)), filterOutVariants((a_1) => a_1.Variant, map((arg10_2) => LocationHubVariantView_OfLocationHubVariant(s, arg10_2), d.Persons(s))));\r\n}\r\n\r\nexport function createAskAboutButton(s, d) {\r\n    const allowances = d.Allowed(s);\r\n    if (allowances.AllowedTalkAbout) {\r\n        return singleton(DialogVariantView_MakeUnlockedVariant(\"спросить о...\", doPushWindow(d.FactsDialogLink)));\r\n    }\r\n    else {\r\n        return empty();\r\n    }\r\n}\r\n\r\nexport class SpecialPersonKey extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Exit\", \"Additional\"];\r\n    }\r\n}\r\n\r\nexport function SpecialPersonKey$reflection() {\r\n    return union_type(\"ViewModel.SpecialPersonKey\", [], SpecialPersonKey, () => [[[\"Item\", DialogVariantView$reflection()]], [[\"Item\", DialogVariantView$reflection()]]]);\r\n}\r\n\r\nexport class PersonHubViewModel extends Record {\r\n    constructor(Text$, DisplayName, Design, Variants, SpecialKeys) {\r\n        super();\r\n        this.Text = Text$;\r\n        this.DisplayName = DisplayName;\r\n        this.Design = Design;\r\n        this.Variants = Variants;\r\n        this.SpecialKeys = SpecialKeys;\r\n    }\r\n}\r\n\r\nexport function PersonHubViewModel$reflection() {\r\n    return record_type(\"ViewModel.PersonHubViewModel\", [], PersonHubViewModel, () => [[\"Text\", list_type(RichTextElement$reflection())], [\"DisplayName\", string_type], [\"Design\", HubDesign$reflection()], [\"Variants\", list_type(DialogVariantView$reflection())], [\"SpecialKeys\", list_type(SpecialPersonKey$reflection())]]);\r\n}\r\n\r\nexport function PersonHubViewModel_OfPersonHub(s, d) {\r\n    const Text$ = d.Description(s);\r\n    const SpecialKeys = append(map((button) => (new SpecialPersonKey(1, button)), createAskAboutButton(s, d)), singleton(new SpecialPersonKey(0, DialogVariantView_OfDialogVariant(s, d.ExitVariant))));\r\n    return new PersonHubViewModel(Text$, d.Name, d.Design, filterOutVariants((x) => x, map((arg10_1) => DialogVariantView_OfDialogVariant(s, arg10_1), d.Variants(s))), SpecialKeys);\r\n}\r\n\r\nexport class UIView extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"DialogView\", \"LocaitionHubView\", \"PersonHubView\"];\r\n    }\r\n}\r\n\r\nexport function UIView$reflection() {\r\n    return union_type(\"ViewModel.UIView\", [], UIView, () => [[[\"Item\", DialogViewModel$reflection()]], [[\"Item\", LocationHubViewModel$reflection()]], [[\"Item\", PersonHubViewModel$reflection()]]]);\r\n}\r\n\r\nexport function UIView_OfUiState_Z745B8E35(s) {\r\n    const matchValue = s.UI;\r\n    switch (matchValue.tag) {\r\n        case 1: {\r\n            const loc = matchValue.fields[0];\r\n            const hub = getGlobal(REPO_LOCATIONS, loc.LocReference);\r\n            return new UIView(1, LocationHubViewModel_OfLocationHub(s, hub));\r\n        }\r\n        case 2: {\r\n            const personHub = matchValue.fields[0];\r\n            const hub_1 = getGlobal(REPO_PERSON_HUBS, personHub.PersonHubReference);\r\n            return new UIView(2, PersonHubViewModel_OfPersonHub(s, hub_1));\r\n        }\r\n        default: {\r\n            const dstate = matchValue.fields[0];\r\n            const ref = dstate.Reference;\r\n            const dialog = getGlobal(REPO_DIALOG, ref.D);\r\n            const window$ = FSharpMap__get_Item(dialog.DialogWindows, ref.W);\r\n            return new UIView(0, DialogViewModel_OfDialogWindow(s, window$));\r\n        }\r\n    }\r\n}\r\n\r\nexport function renderFacts(set$) {\r\n    const cast = (el) => getGlobal(REPO_FACTS, el);\r\n    return toList(map_1(cast, set$));\r\n}\r\n\r\nexport class UpdateMessage extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"FactAccquired\"];\r\n    }\r\n}\r\n\r\nexport function UpdateMessage$reflection() {\r\n    return union_type(\"ViewModel.UpdateMessage\", [], UpdateMessage, () => [[[\"Item\", Fact$reflection()]]]);\r\n}\r\n\r\nexport function findNewFacts(old, news) {\r\n    const oldToMatch = map((_arg1) => {\r\n        const id = _arg1.FactId;\r\n        return id;\r\n    }, old);\r\n    const newFacts = filter((_arg2) => {\r\n        const fact = _arg2.FactId;\r\n        return !contains(fact, oldToMatch, {\r\n            Equals: (x, y) => (x === y),\r\n            GetHashCode: (x) => stringHash(x),\r\n        });\r\n    }, news);\r\n    toConsole(printf(\"New facts found: %A, searching in OLD={{%A}}; NEW={{%A}}\"))(newFacts)(old)(news);\r\n    return newFacts;\r\n}\r\n\r\nexport class View extends Record {\r\n    constructor(Facts, Updates, UI) {\r\n        super();\r\n        this.Facts = Facts;\r\n        this.Updates = Updates;\r\n        this.UI = UI;\r\n    }\r\n}\r\n\r\nexport function View$reflection() {\r\n    return record_type(\"ViewModel.View\", [], View, () => [[\"Facts\", list_type(Fact$reflection())], [\"Updates\", list_type(UpdateMessage$reflection())], [\"UI\", UIView$reflection()]]);\r\n}\r\n\r\nexport function View_OfState_Z745B8E35(s) {\r\n    const UI = UIView_OfUiState_Z745B8E35(s);\r\n    return new View(renderFacts(s.KnownFacts), empty(), UI);\r\n}\r\n\r\nexport function View__findUpdatesWithPrev_Z413853C(this$, prev) {\r\n    if (length(this$.Facts) === length(prev.Facts)) {\r\n        return empty();\r\n    }\r\n    else {\r\n        return map((x) => (new UpdateMessage(0, x)), findNewFacts(prev.Facts, this$.Facts));\r\n    }\r\n}\r\n\r\nexport function View_OfStateWithPrev(s, prev) {\r\n    toConsole(printf(\"rendering with previous state\"));\r\n    const current = View_OfState_Z745B8E35(s);\r\n    const messages = View__findUpdatesWithPrev_Z413853C(current, prev);\r\n    return new View(current.Facts, messages, current.UI);\r\n}\r\n\r\nexport class ViewOrError extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"View\", \"Error\"];\r\n    }\r\n}\r\n\r\nexport function ViewOrError$reflection() {\r\n    return union_type(\"ViewModel.ViewOrError\", [], ViewOrError, () => [[[\"Item\", View$reflection()]], [[\"Item\", tuple_type(State$reflection(), string_type)]]]);\r\n}\r\n\r\nexport function ViewOrError_OfState_Z745B8E35(s) {\r\n    const matchValue = s.Error;\r\n    if (matchValue == null) {\r\n        return new ViewOrError(0, View_OfState_Z745B8E35(s));\r\n    }\r\n    else {\r\n        const err = matchValue;\r\n        return new ViewOrError(1, [s, err.Message]);\r\n    }\r\n}\r\n\r\nexport function ViewOrError_OfStateWithPrev(s, prev) {\r\n    const matchValue = s.Error;\r\n    if (matchValue == null) {\r\n        return new ViewOrError(0, View_OfStateWithPrev(s, prev));\r\n    }\r\n    else {\r\n        const err = matchValue;\r\n        return new ViewOrError(1, [s, err.Message]);\r\n    }\r\n}\r\n\r\nexport function renderViewModel(previous, s) {\r\n    let prev_1;\r\n    if (previous != null) {\r\n        const prev = previous;\r\n        if (prev.tag === 0) {\r\n            const v = prev.fields[0];\r\n            prev_1 = v;\r\n        }\r\n        else {\r\n            prev_1 = (void 0);\r\n        }\r\n    }\r\n    else {\r\n        prev_1 = (void 0);\r\n    }\r\n    if (prev_1 != null) {\r\n        const v_1 = prev_1;\r\n        return ViewOrError_OfStateWithPrev(s, v_1);\r\n    }\r\n    else {\r\n        return ViewOrError_OfState_Z745B8E35(s);\r\n    }\r\n}\r\n\r\nexport function executeStateUpdate(action, historyRecord, oldState) {\r\n    let s;\r\n    if (historyRecord == null) {\r\n        s = oldState;\r\n    }\r\n    else {\r\n        const recrd = historyRecord;\r\n        s = (new State(oldState.UI, oldState.UIStack, oldState.Animation, oldState.Previous, cons(recrd, oldState.InteractionHistory), oldState.Log, oldState.KnownFacts, oldState.KnownPersons, oldState.Iteration, oldState.Data, oldState.Error));\r\n    }\r\n    return execute(action, s);\r\n}\r\n\r\nexport function executeDialogStateUpdate(state, text, actor, action, actionText) {\r\n    return executeStateUpdate(action, new InteractionHistoryRecord(actor, text, actionText), state);\r\n}\r\n\r\n//# sourceMappingURL=ViewModel.fs.js.map\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\r\nimport { class_type } from \"../fable-library.3.1.11/Reflection.js\";\r\nimport { iterate } from \"../fable-library.3.1.11/Seq.js\";\r\nimport { defaultArg, some, toArray } from \"../fable-library.3.1.11/Option.js\";\r\nimport { Interop_reactApi } from \"./Interop.fs.js\";\r\nimport { curry, uncurry } from \"../fable-library.3.1.11/Util.js\";\r\nimport { useState } from \"react\";\r\nimport * as react from \"react\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = useEffect;\r\n\r\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\r\n\r\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\r\n    return (props) => {\r\n        const props_2 = Internal_propsWithKey(withKey, props);\r\n        return Interop_reactApi.createElement(renderElement, props_2);\r\n    };\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => {\r\n        const props_2 = Internal_propsWithKey(withKey, props);\r\n        return Interop_reactApi.createElement(memoElementType, props_2);\r\n    };\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function useReact_useState_FCFD9EF(initializer) {\r\n    return Interop_reactApi.useState(initializer);\r\n}\r\n\r\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\r\n    return Interop_reactApi.useReducer(update, initialState);\r\n}\r\n\r\nexport function useReact_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useEffectOnce_3A5B6456(effect) {\r\n    useReact_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\r\n    useReact_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_6E825304(effect) {\r\n    useReact_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, toArray(disposeOption));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function useReact_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\r\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function useReact_useRef_1505(initialValue) {\r\n    return Interop_reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function useReact_useInputRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useButtonRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useElementRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\r\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\r\n    iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, toArray(name));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\r\n}\r\n\r\nexport function useReact_useContext_37FA55CF(contextObject) {\r\n    return Interop_reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\r\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    useReact_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        const props_1 = tupledArg[0];\r\n        const ref_1 = tupledArg[1];\r\n        const propsObj = Object.assign({}, props_1);\r\n        propsObj.ref = ref_1;\r\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        const props_1 = tupledArg[0];\r\n        const ref_1 = tupledArg[1];\r\n        const propsObj = Object.assign({}, props_1);\r\n        propsObj.ref = ref_1;\r\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\r\n}\r\n\r\nexport function useFeliz_React__React_useState_Static_1505(initial) {\r\n    return Interop_reactApi.useState(initial);\r\n}\r\n\r\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\r\n\r\n//# sourceMappingURL=React.fs.js.map\r\n","import { createTypeInfo } from \"./.fable/Fable.SimpleJson.3.21.0/TypeInfo.Converter.fs.js\";\r\nimport { State$reflection } from \"./State.fs.js\";\r\nimport { Convert_fromJson, Convert_serialize } from \"./.fable/Fable.SimpleJson.3.21.0/Json.Converter.fs.js\";\r\nimport { SimpleJson_tryParse } from \"./.fable/Fable.SimpleJson.3.21.0/SimpleJson.fs.js\";\r\n\r\nconst MAIN_STATE_KEY = \"state_dump\";\r\n\r\nexport function saveToLocalStorage(key, value) {\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport function stringifyState(arg00) {\r\n    const typeInfo = createTypeInfo(State$reflection());\r\n    return Convert_serialize(arg00, typeInfo);\r\n}\r\n\r\nexport const saveMainState = (arg) => {\r\n    saveToLocalStorage(MAIN_STATE_KEY, stringifyState(arg));\r\n};\r\n\r\nexport const loadFromLocalStorage = (arg00) => localStorage.getItem(arg00);\r\n\r\nexport function deserializeState(arg00) {\r\n    const matchValue = SimpleJson_tryParse(arg00);\r\n    if (matchValue != null) {\r\n        const inputJson = matchValue;\r\n        const typeInfo = createTypeInfo(State$reflection());\r\n        return Convert_fromJson(inputJson, typeInfo);\r\n    }\r\n    else {\r\n        throw (new Error(\"Couldn\\u0027t parse the input JSON string because it seems to be invalid\"));\r\n    }\r\n}\r\n\r\nexport function loadMainState() {\r\n    return deserializeState(loadFromLocalStorage(MAIN_STATE_KEY));\r\n}\r\n\r\n//# sourceMappingURL=Serialization.fs.js.map\r\n","import { class_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"../.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { createTypeInfo } from \"../.fable/Fable.SimpleJson.3.21.0/TypeInfo.Converter.fs.js\";\r\nimport { State, gameVersion, State$reflection } from \"../State.fs.js\";\r\nimport { Convert_serialize } from \"../.fable/Fable.SimpleJson.3.21.0/Json.Converter.fs.js\";\r\nimport { printf, toConsole } from \"../.fable/fable-library.3.1.11/String.js\";\r\nimport { loadMainState, saveMainState } from \"../Serialization.fs.js\";\r\nimport { empty } from \"../.fable/fable-library.3.1.11/List.js\";\r\n\r\nexport class Components {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Components$reflection() {\r\n    return class_type(\"DevTools.Components\", void 0, Components);\r\n}\r\n\r\nexport function Components_$ctor() {\r\n    return new Components();\r\n}\r\n\r\nexport function Components_DevToolsToolbar_F5C360(components_DevToolsToolbar_F5C360InputProps) {\r\n    const setGameState = components_DevToolsToolbar_F5C360InputProps.setGameState;\r\n    const state = components_DevToolsToolbar_F5C360InputProps.state;\r\n    const enabled = components_DevToolsToolbar_F5C360InputProps.enabled;\r\n    if (enabled) {\r\n        return createElement(\"div\", {\r\n            className: \"dev-toolbar-footer\",\r\n            children: Interop_reactApi.Children.toArray([createElement(\"button\", {\r\n                children: \"Dump json state to console\",\r\n                onClick: (_arg1) => {\r\n                    let arg10;\r\n                    const typeInfo = createTypeInfo(State$reflection());\r\n                    arg10 = Convert_serialize(state, typeInfo);\r\n                    toConsole(printf(\"%A\"))(arg10);\r\n                },\r\n            }), createElement(\"button\", {\r\n                children: \"Save state\",\r\n                onClick: (_arg2) => {\r\n                    saveMainState(state);\r\n                },\r\n            }), createElement(\"button\", {\r\n                children: \"Load state\",\r\n                onClick: (_arg3) => {\r\n                    toConsole(printf(\"state loaded\"));\r\n                    setGameState(loadMainState());\r\n                },\r\n            }), createElement(\"span\", {\r\n                children: \"Version: \" + gameVersion,\r\n                className: \"version-span\",\r\n            })]),\r\n        });\r\n    }\r\n    else {\r\n        return createElement(\"div\", {});\r\n    }\r\n}\r\n\r\nexport function Components_ErrorPage_Z3B259ECF(components_ErrorPage_Z3B259ECFInputProps) {\r\n    let value_6, typeInfo;\r\n    const setGameState = components_ErrorPage_Z3B259ECFInputProps.setGameState;\r\n    const state = components_ErrorPage_Z3B259ECFInputProps.state;\r\n    const errorText = components_ErrorPage_Z3B259ECFInputProps.errorText;\r\n    return createElement(\"div\", {\r\n        children: Interop_reactApi.Children.toArray([createElement(\"h1\", {\r\n            dangerouslySetInnerHTML: {\r\n                __html: \"Error happened!\",\r\n            },\r\n        }), createElement(\"p\", {\r\n            dangerouslySetInnerHTML: {\r\n                __html: errorText,\r\n            },\r\n        }), createElement(\"button\", {\r\n            children: \"[ Recover ]\",\r\n            onClick: (_arg4) => {\r\n                setGameState(new State(state.UI, state.UIStack, state.Animation, state.Previous, state.InteractionHistory, state.Log, state.KnownFacts, state.KnownPersons, state.Iteration, state.Data, void 0));\r\n            },\r\n        }), createElement(\"h3\", {\r\n            dangerouslySetInnerHTML: {\r\n                __html: \"Error state:\",\r\n            },\r\n        }), createElement(\"textarea\", {\r\n            value: (value_6 = (new State(state.UI, state.UIStack, state.Animation, state.Previous, empty(), state.Log, state.KnownFacts, state.KnownPersons, state.Iteration, state.Data, state.Error)), (typeInfo = createTypeInfo(State$reflection()), Convert_serialize(value_6, typeInfo))),\r\n            style: {\r\n                minHeight: 100,\r\n                minWidth: 600,\r\n            },\r\n        })]),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=DevTools.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"./.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { mapIndexed } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { uncurry } from \"./.fable/fable-library.3.1.11/Util.js\";\r\n\r\nexport function addStyleBasedOn(cond, baseStyle, addition) {\r\n    if (cond) {\r\n        return (baseStyle + \" \") + addition;\r\n    }\r\n    else {\r\n        return baseStyle;\r\n    }\r\n}\r\n\r\nexport function chooseStyleBasedOn(cond, baseStyle, onTrue, onFalse) {\r\n    if (cond) {\r\n        return (baseStyle + \" \") + onTrue;\r\n    }\r\n    else {\r\n        return (baseStyle + \" \") + onFalse;\r\n    }\r\n}\r\n\r\nexport function lookupIcon(iconName, asDefault) {\r\n    switch (iconName) {\r\n        case \"dialog-exit-icon\": {\r\n            return \"img/comment-check.png\";\r\n        }\r\n        case \"dialog-default-icon\": {\r\n            return \"img/omment-info.png\";\r\n        }\r\n        default: {\r\n            return asDefault;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PanelUtils {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function PanelUtils$reflection() {\r\n    return class_type(\"UiUtils.PanelUtils\", void 0, PanelUtils);\r\n}\r\n\r\nexport function PanelUtils_$ctor() {\r\n    return new PanelUtils();\r\n}\r\n\r\nexport function PanelUtils_PanelHeader_700867CD(panelUtils_PanelHeader_700867CDInputProps) {\r\n    const onClose = panelUtils_PanelHeader_700867CDInputProps.onClose;\r\n    const header = panelUtils_PanelHeader_700867CDInputProps.header;\r\n    return createElement(\"div\", {\r\n        className: \"panel-header\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"p\", {\r\n            children: header,\r\n        }), createElement(\"button\", {\r\n            className: \"panel-close-button\",\r\n            onClick: (_arg1) => {\r\n                onClose();\r\n            },\r\n            children: Interop_reactApi.Children.toArray([createElement(\"img\", {\r\n                alt: \"close\",\r\n                src: \"img/free-icon-cross.png\",\r\n            })]),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function PanelUtils_PanelButton_1A63F12A(panelUtils_PanelButton_1A63F12AInputProps) {\r\n    const onClick = panelUtils_PanelButton_1A63F12AInputProps.onClick;\r\n    const key = panelUtils_PanelButton_1A63F12AInputProps.$key;\r\n    const icon = panelUtils_PanelButton_1A63F12AInputProps.icon;\r\n    const text = panelUtils_PanelButton_1A63F12AInputProps.text;\r\n    return createElement(\"button\", {\r\n        className: \"panel-button animate__animated animate__heartBeat\",\r\n        onClick: (_arg2) => {\r\n            onClick();\r\n        },\r\n        key: key,\r\n        children: Interop_reactApi.Children.toArray([createElement(\"img\", {\r\n            className: \"panel-button-icon\",\r\n            src: icon,\r\n        }), createElement(\"span\", {\r\n            className: \"panel-button-span\",\r\n            dangerouslySetInnerHTML: {\r\n                __html: text,\r\n            },\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function PanelUtils_PopupMessage_Z66C75B59(panelUtils_PopupMessage_Z66C75B59InputProps) {\r\n    const key = panelUtils_PopupMessage_Z66C75B59InputProps.$key;\r\n    const icon = panelUtils_PopupMessage_Z66C75B59InputProps.icon;\r\n    const text = panelUtils_PopupMessage_Z66C75B59InputProps.text;\r\n    const header = panelUtils_PopupMessage_Z66C75B59InputProps.header;\r\n    return createElement(\"div\", {\r\n        className: \"message animate__animated animate__heartBeat\",\r\n        key: key,\r\n        children: Interop_reactApi.Children.toArray([createElement(\"img\", {\r\n            className: \"message-icon\",\r\n            src: icon,\r\n            alt: \"message icon\",\r\n        }), createElement(\"div\", {\r\n            className: \"message-inner\",\r\n            children: Interop_reactApi.Children.toArray([createElement(\"p\", {\r\n                className: \"message-header\",\r\n                dangerouslySetInnerHTML: {\r\n                    __html: header,\r\n                },\r\n            }), createElement(\"p\", {\r\n                className: \"message-text\",\r\n                dangerouslySetInnerHTML: {\r\n                    __html: text,\r\n                },\r\n            })]),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function PanelUtils_createMessage_Z524259A4(i) {\r\n    return (_arg1) => {\r\n        const fact = _arg1.fields[0];\r\n        return createElement(PanelUtils_PopupMessage_Z66C75B59, {\r\n            header: \"Получен новый факт\",\r\n            text: fact.Name,\r\n            icon: \"img/free-icon-chess-piece.png\",\r\n            key: i,\r\n            $key: i,\r\n        });\r\n    };\r\n}\r\n\r\nexport function PanelUtils_PopupMessagesBlock_6A0C7779(panelUtils_PopupMessagesBlock_6A0C7779InputProps) {\r\n    const messages = panelUtils_PopupMessagesBlock_6A0C7779InputProps.messages;\r\n    const inner = mapIndexed(uncurry(2, (arg00) => PanelUtils_createMessage_Z524259A4(arg00)), messages);\r\n    return createElement(\"div\", {\r\n        className: \"message-panel\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(inner)),\r\n    });\r\n}\r\n\r\nexport function renderMessages(messages) {\r\n    return createElement(PanelUtils_PopupMessagesBlock_6A0C7779, {\r\n        messages: messages,\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=UiUtils.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"./.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { lookupFact } from \"./Facts.fs.js\";\r\n\r\nexport class FactsPanelRenderer {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function FactsPanelRenderer$reflection() {\r\n    return class_type(\"FactsRenderer.FactsPanelRenderer\", void 0, FactsPanelRenderer);\r\n}\r\n\r\nexport function FactsPanelRenderer_$ctor() {\r\n    return new FactsPanelRenderer();\r\n}\r\n\r\nexport function FactsPanelRenderer_FactsPanel_1334CEF1(factsPanelRenderer_FactsPanel_1334CEF1InputProps) {\r\n    const facts = factsPanelRenderer_FactsPanel_1334CEF1InputProps.facts;\r\n    return createElement(\"div\", {\r\n        className: \"facts-panel-outer\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"facts-panel-container\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(map((s) => createElement(FactsPanelRenderer_FactRenderer_Z721C83C5, {\r\n                fid: s,\r\n            }), facts))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function FactsPanelRenderer_FactRenderer_Z721C83C5(factsPanelRenderer_FactRenderer_Z721C83C5InputProps) {\r\n    const fid = factsPanelRenderer_FactRenderer_Z721C83C5InputProps.fid;\r\n    const fact = lookupFact(fid);\r\n    return createElement(\"div\", {\r\n        className: \"fact\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"fact-icon\",\r\n        }), createElement(\"div\", {\r\n            className: \"fact-text-container\",\r\n            children: Interop_reactApi.Children.toArray([createElement(\"p\", {\r\n                className: \"fact-id\",\r\n                children: fact.Name,\r\n            }), createElement(\"p\", {\r\n                className: \"fact-desc\",\r\n                children: fact.Description,\r\n            })]),\r\n        })]),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=FactsRenderer.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"./.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/Array.js\";\r\n\r\nexport class HistoryPanelRenderer {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function HistoryPanelRenderer$reflection() {\r\n    return class_type(\"HistoryRenderer.HistoryPanelRenderer\", void 0, HistoryPanelRenderer);\r\n}\r\n\r\nexport function HistoryPanelRenderer_$ctor() {\r\n    return new HistoryPanelRenderer();\r\n}\r\n\r\nexport function HistoryPanelRenderer_HistoryPanel_Z2893C411(historyPanelRenderer_HistoryPanel_Z2893C411InputProps) {\r\n    const records = historyPanelRenderer_HistoryPanel_Z2893C411InputProps.records;\r\n    return createElement(\"div\", {\r\n        className: \"history-panel-outer\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"history-panel-container\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(map((s) => createElement(HistoryPanelRenderer_HistoryRenderer_Z4B06F3F7, s), records))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function HistoryPanelRenderer_HistoryRenderer_Z4B06F3F7(record) {\r\n    let actor;\r\n    const matchValue = record.Actor;\r\n    if (matchValue == null) {\r\n        actor = createElement(\"div\", {});\r\n    }\r\n    else {\r\n        const act = matchValue;\r\n        actor = createElement(\"p\", {\r\n            className: \"history-actor\",\r\n            children: act,\r\n        });\r\n    }\r\n    return createElement(\"div\", {\r\n        className: \"history-record\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"history-record-icon\",\r\n        }), createElement(\"div\", {\r\n            className: \"history-record-container\",\r\n            children: Interop_reactApi.Children.toArray([actor, createElement(\"p\", {\r\n                className: \"history-record-text\",\r\n                children: record.Text,\r\n            }), createElement(\"p\", {\r\n                className: \"history-record-reply\",\r\n                children: record.UserReply,\r\n            })]),\r\n        })]),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=HistoryRenderer.fs.js.map\r\n","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"./.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { map } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { toList } from \"./.fable/fable-library.3.1.11/Map.js\";\r\nimport { printf, toText } from \"./.fable/fable-library.3.1.11/String.js\";\r\n\r\nexport class DebuggerPanelRenderer {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function DebuggerPanelRenderer$reflection() {\r\n    return class_type(\"DebuggerRenderer.DebuggerPanelRenderer\", void 0, DebuggerPanelRenderer);\r\n}\r\n\r\nexport function DebuggerPanelRenderer_$ctor() {\r\n    return new DebuggerPanelRenderer();\r\n}\r\n\r\nexport function DebuggerPanelRenderer_DebuggerPanel_Z745B8E35(state) {\r\n    return createElement(\"div\", {\r\n        className: \"debug-panel-outer\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"debug-panel-container\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(map((tupledArg) => {\r\n                const k = tupledArg[0];\r\n                const v = tupledArg[1];\r\n                return DebuggerPanelRenderer_DataFieldRenderer_433E080(k, v);\r\n            }, toList(state.Data)))),\r\n        }), createElement(\"div\", {\r\n            className: \"debug-panel-container\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(map((tupledArg_1) => {\r\n                const k_1 = tupledArg_1[0];\r\n                const v_1 = tupledArg_1[1];\r\n                return DebuggerPanelRenderer_DataFieldRenderer_433E080(k_1, v_1);\r\n            }, toList(state.KnownPersons)))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function DebuggerPanelRenderer_DataFieldRenderer_433E080(key, value) {\r\n    return createElement(\"div\", {\r\n        className: \"debug-data-record\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"p\", {\r\n            className: \"debug-key\",\r\n            children: key,\r\n        }), createElement(\"p\", {\r\n            className: \"debug-val\",\r\n            children: toText(printf(\"%A\"))(value),\r\n        })]),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=DebuggerRenderer.fs.js.map\r\n","import { class_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"../.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { map } from \"../.fable/fable-library.3.1.11/List.js\";\r\n\r\nexport class RichTextComponents {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function RichTextComponents$reflection() {\r\n    return class_type(\"App.RichTextComponents\", void 0, RichTextComponents);\r\n}\r\n\r\nexport function RichTextComponents_$ctor() {\r\n    return new RichTextComponents();\r\n}\r\n\r\nexport function RichTextComponents_RichTextElementRenderer_28C545F5(richTextComponents_RichTextElementRenderer_28C545F5InputProps) {\r\n    const el = richTextComponents_RichTextElementRenderer_28C545F5InputProps.el;\r\n    switch (el.tag) {\r\n        case 2: {\r\n            const s_1 = el.fields[0];\r\n            return createElement(\"span\", {\r\n                className: \"highlighted-as-value\",\r\n                children: s_1,\r\n            });\r\n        }\r\n        case 1: {\r\n            const s_2 = el.fields[0];\r\n            return createElement(\"mark\", {\r\n                className: \"bold-text\",\r\n                children: s_2,\r\n            });\r\n        }\r\n        default: {\r\n            const s = el.fields[0];\r\n            return createElement(\"span\", {\r\n                children: [s],\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function RichTextComponents_RichTextRenderer_Z742147BC(richTextComponents_RichTextRenderer_Z742147BCInputProps) {\r\n    const animationClasses = richTextComponents_RichTextRenderer_Z742147BCInputProps.animationClasses;\r\n    const el = richTextComponents_RichTextRenderer_Z742147BCInputProps.el;\r\n    return createElement(\"p\", {\r\n        className: animationClasses,\r\n        children: Interop_reactApi.Children.toArray(Array.from(map((arg00) => createElement(RichTextComponents_RichTextElementRenderer_28C545F5, {\r\n            el: arg00,\r\n        }), el))),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=RichTextRenderer.fs.js.map\r\n","import { class_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"../.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { RichTextComponents_RichTextRenderer_Z742147BC } from \"./RichTextRenderer.fs.js\";\r\nimport { Person__get_Name } from \"../Person.fs.js\";\r\n\r\nexport class DialogTextComponents {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function DialogTextComponents$reflection() {\r\n    return class_type(\"App.DialogTextComponents\", void 0, DialogTextComponents);\r\n}\r\n\r\nexport function DialogTextComponents_$ctor() {\r\n    return new DialogTextComponents();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function DialogTextComponents_DialogtextRenderer_Z2CC8FB9B(dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps) {\r\n    const iteration = dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps.iteration;\r\n    const s = dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps.s;\r\n    const text = dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps.text;\r\n    const gameAnimation = dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps.gameAnimation;\r\n    const animation = dialogTextComponents_DialogtextRenderer_Z2CC8FB9BInputProps.animation;\r\n    const UIAnimationClass = (gameAnimation.tag === 3) ? \"animate__shakeX animate__animated\" : \"\";\r\n    return createElement(\"div\", {\r\n        className: \"dialog-text \" + UIAnimationClass,\r\n        key: iteration,\r\n        children: Interop_reactApi.Children.toArray([createElement(RichTextComponents_RichTextRenderer_Z742147BC, {\r\n            el: text,\r\n            animationClasses: animation,\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function DialogTextComponents_AuthorPresentRenderer_Z384F8060(dialogTextComponents_AuthorPresentRenderer_Z384F8060InputProps) {\r\n    const id = dialogTextComponents_AuthorPresentRenderer_Z384F8060InputProps.id;\r\n    const actor = dialogTextComponents_AuthorPresentRenderer_Z384F8060InputProps.actor;\r\n    return createElement(\"div\", {\r\n        className: \"author-container\",\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"inner-author-container animate__bounceInLeft animate__faster animate__animated\",\r\n            children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n                className: \"author-icon\",\r\n                children: Interop_reactApi.Children.toArray([createElement(\"img\", {\r\n                    alt: \"author icon\",\r\n                    src: DialogTextComponents_getIconForAuthor_Z721C83C5(id),\r\n                })]),\r\n            }), createElement(\"div\", {\r\n                className: \"author-name\",\r\n                dangerouslySetInnerHTML: {\r\n                    __html: actor,\r\n                },\r\n            })]),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function DialogTextComponents_AuthorRenderer_Z312F9B9(dialogTextComponents_AuthorRenderer_Z312F9B9InputProps) {\r\n    const author = dialogTextComponents_AuthorRenderer_Z312F9B9InputProps.author;\r\n    switch (author.tag) {\r\n        case 2: {\r\n            return createElement(\"div\", {\r\n                className: \"invisible\",\r\n            });\r\n        }\r\n        case 1: {\r\n            const text = author.fields[1];\r\n            const pers = author.fields[0];\r\n            return createElement(DialogTextComponents_AuthorPresentRenderer_Z384F8060, {\r\n                actor: text,\r\n                id: Person__get_Name(pers),\r\n            });\r\n        }\r\n        default: {\r\n            const name = author.fields[0];\r\n            return createElement(DialogTextComponents_AuthorPresentRenderer_Z384F8060, {\r\n                actor: name,\r\n                id: name,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction DialogTextComponents_getIconForAuthor_Z721C83C5(author) {\r\n    switch (author) {\r\n        case \"joe\": {\r\n            return \"img/police-badge.png\";\r\n        }\r\n        case \"babka\": {\r\n            return \"img/wheelchair.png\";\r\n        }\r\n        default: {\r\n            return \"img/rhombus.png\";\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=DialogTextRenderer.fs.js.map\r\n","import { bind, map } from \"../fable-library.3.1.11/Option.js\";\r\n\r\nexport const Impl_allowsPassiveEvents = (() => {\r\n    let passive = false;\r\n    try {\r\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\r\n            const options = {\r\n                passive: true,\r\n            };\r\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\r\n            }, options);\r\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\r\n            });\r\n        }\r\n    }\r\n    catch (matchValue) {\r\n    }\r\n    return passive;\r\n})();\r\n\r\nexport const Impl_defaultPassive = {\r\n    passive: true,\r\n};\r\n\r\nexport function Impl_adjustPassive(maybeOptions) {\r\n    return map((options) => {\r\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\r\n            return {\r\n                capture: options.capture,\r\n                once: options.once,\r\n                passive: false,\r\n            };\r\n        }\r\n        else {\r\n            return options;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\nexport function Impl_createRemoveOptions(maybeOptions) {\r\n    return bind((options) => {\r\n        if (options.capture) {\r\n            return {\r\n                capture: true,\r\n            };\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\n//# sourceMappingURL=Listener.fs.js.map\r\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.1.11/String.js\";\r\nimport { ofArray, singleton, collect, empty, head, tail, isEmpty, reverse, map } from \"../fable-library.3.1.11/List.js\";\r\nimport { equalsWith } from \"../fable-library.3.1.11/Array.js\";\r\nimport { comparePrimitives } from \"../fable-library.3.1.11/Util.js\";\r\nimport { useReact_useEffect_Z5ECA432F, React_createDisposable_3A5B6456, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.52.0/React.fs.js\";\r\nimport { defaultArg } from \"../fable-library.3.1.11/Option.js\";\r\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\r\nimport { tryParse } from \"../fable-library.3.1.11/Int32.js\";\r\nimport { FSharpRef } from \"../fable-library.3.1.11/Types.js\";\r\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.1.11/Long.js\";\r\nimport { tryParse as tryParse_2 } from \"../fable-library.3.1.11/Guid.js\";\r\nimport { tryParse as tryParse_3 } from \"../fable-library.3.1.11/Double.js\";\r\nimport { tryParse as tryParse_4 } from \"../fable-library.3.1.11/Decimal.js\";\r\nimport Decimal from \"../fable-library.3.1.11/Decimal.js\";\r\nimport { map as map_1, delay, toList } from \"../fable-library.3.1.11/Seq.js\";\r\n\r\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\r\n    if (str.indexOf(prefix) === 0) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\r\n    if (endsWith(str, suffix)) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryString(queryStringPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => {\r\n        const key = tupledArg[0];\r\n        const value = tupledArg[1];\r\n        return join(\"=\", [encodeURIComponent(key), encodeURIComponent(value)]);\r\n    }, queryStringPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        const pairs = _arg1;\r\n        return \"?\" + pairs;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => {\r\n        const key = tupledArg[0];\r\n        const value = tupledArg[1] | 0;\r\n        return join(\"=\", [encodeURIComponent(key), value]);\r\n    }, queryStringIntPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        const pairs = _arg1;\r\n        return \"?\" + pairs;\r\n    }\r\n}\r\n\r\nfunction RouterModule_normalizeRoute(routeMode) {\r\n    if (routeMode === 1) {\r\n        return (_arg1) => {\r\n            let activePatternResult9661, path, activePatternResult9662, path_1, activePatternResult9663, path_2, path_3;\r\n            return activePatternResult9661 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult9661 != null) ? (path = activePatternResult9661, \"#\" + path) : (activePatternResult9662 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult9662 != null) ? (path_1 = activePatternResult9662, path_1) : (activePatternResult9663 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult9663 != null) ? (path_2 = activePatternResult9663, \"#/\" + substring(path_2, 1, path_2.length - 1)) : (path_3 = _arg1, \"#/\" + path_3)));\r\n        };\r\n    }\r\n    else {\r\n        return (_arg2) => {\r\n            let activePatternResult9666, path_4, path_5;\r\n            return activePatternResult9666 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult9666 != null) ? (path_4 = activePatternResult9666, path_4) : (path_5 = _arg2, \"/\" + path_5);\r\n        };\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeParts(xs, routeMode) {\r\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\r\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\r\n            return part;\r\n        }\r\n        else {\r\n            return encodeURIComponent(part);\r\n        }\r\n    }, xs)));\r\n}\r\n\r\nexport function RouterModule_trySeparateLast(xs) {\r\n    const matchValue = reverse(xs);\r\n    if (!isEmpty(matchValue)) {\r\n        if (isEmpty(tail(matchValue))) {\r\n            const single = head(matchValue);\r\n            return [empty(), single];\r\n        }\r\n        else {\r\n            const list_1 = matchValue;\r\n            return [reverse(tail(list_1)), head(list_1)];\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_nav(xs, mode, routeMode) {\r\n    if (mode === 1) {\r\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    else {\r\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    const ev = document.createEvent(\"CustomEvent\");\r\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\r\n    void window.dispatchEvent(ev);\r\n}\r\n\r\nexport function RouterModule_urlSegments(path, mode) {\r\n    return collect((segment) => {\r\n        if (isNullOrWhiteSpace(segment)) {\r\n            return empty();\r\n        }\r\n        else {\r\n            const segment_1 = trimEnd(segment, \"#\");\r\n            if (segment_1 === \"?\") {\r\n                return empty();\r\n            }\r\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\r\n                return singleton(segment_1);\r\n            }\r\n            else {\r\n                const matchValue = segment_1.split(\"?\");\r\n                if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 1) : false) {\r\n                    const value = matchValue[0];\r\n                    return singleton(decodeURIComponent(value));\r\n                }\r\n                else if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), matchValue, null)) ? (matchValue.length === 2) : false) {\r\n                    if (matchValue[1] === \"\") {\r\n                        const value_1 = matchValue[0];\r\n                        return singleton(decodeURIComponent(value_1));\r\n                    }\r\n                    else {\r\n                        const value_2 = matchValue[0];\r\n                        const query = matchValue[1];\r\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\r\n                    }\r\n                }\r\n                else {\r\n                    return empty();\r\n                }\r\n            }\r\n        }\r\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\r\n}\r\n\r\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\r\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\r\n}\r\n\r\nexport const RouterModule_router = React_memo_62A0F746((input) => {\r\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\r\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\r\n        });\r\n        const routeMode = defaultArg(input.hashMode, 1) | 0;\r\n        return RouterModule_onUrlChange(routeMode, urlChanged, ev);\r\n    });\r\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\r\n        const eventType = \"hashchange\";\r\n        const action_1 = (arg00) => {\r\n            onChange(arg00);\r\n        };\r\n        const options_1 = void 0;\r\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\r\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\r\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\r\n            action_1(arg);\r\n        }), [action_1]);\r\n        const listener = useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions == null) {\r\n                window.addEventListener(eventType, fn);\r\n            }\r\n            else {\r\n                const options_2 = addOptions;\r\n                window.addEventListener(eventType, fn, options_2);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions == null) {\r\n                    window.removeEventListener(eventType, fn);\r\n                }\r\n                else {\r\n                    const options_3 = removeOptions;\r\n                    window.removeEventListener(eventType, fn, options_3);\r\n                }\r\n            });\r\n        });\r\n        useReact_useEffect_Z5ECA432F(listener);\r\n    }\r\n    else {\r\n        const eventType_1 = \"popstate\";\r\n        const action_3 = onChange;\r\n        const options_5 = void 0;\r\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\r\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\r\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\r\n            action_3(arg_1);\r\n        }), [action_3]);\r\n        const listener_1 = useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions_1 == null) {\r\n                window.addEventListener(eventType_1, fn_1);\r\n            }\r\n            else {\r\n                const options_6 = addOptions_1;\r\n                window.addEventListener(eventType_1, fn_1, options_6);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions_1 == null) {\r\n                    window.removeEventListener(eventType_1, fn_1);\r\n                }\r\n                else {\r\n                    const options_7 = removeOptions_1;\r\n                    window.removeEventListener(eventType_1, fn_1, options_7);\r\n                }\r\n            });\r\n        });\r\n        useReact_useEffect_Z5ECA432F(listener_1);\r\n    }\r\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\r\n    const action_4 = onChange;\r\n    const options_8 = void 0;\r\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\r\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\r\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\r\n        action_4(arg_2);\r\n    }), [action_4]);\r\n    const listener_2 = useReact_useCallbackRef_7C4B0DD6(() => {\r\n        if (addOptions_2 == null) {\r\n            window.addEventListener(eventType_2, fn_2);\r\n        }\r\n        else {\r\n            const options_9 = addOptions_2;\r\n            window.addEventListener(eventType_2, fn_2, options_9);\r\n        }\r\n        return React_createDisposable_3A5B6456(() => {\r\n            if (removeOptions_2 == null) {\r\n                window.removeEventListener(eventType_2, fn_2);\r\n            }\r\n            else {\r\n                const options_10 = removeOptions_2;\r\n                window.removeEventListener(eventType_2, fn_2, options_10);\r\n            }\r\n        });\r\n    });\r\n    useReact_useEffect_Z5ECA432F(listener_2);\r\n    const matchValue = input.application;\r\n    if (matchValue == null) {\r\n        return null;\r\n    }\r\n    else {\r\n        const elem = matchValue;\r\n        return elem;\r\n    }\r\n});\r\n\r\nexport function Route_$007CInt$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1] | 0;\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CInt64$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = fromInt(0);\r\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CGuid$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\r\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CNumber$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CDecimal$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = new Decimal(0);\r\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CBool$007C_$007C(input) {\r\n    const matchValue = input.toLocaleLowerCase();\r\n    switch (matchValue) {\r\n        case \"1\":\r\n        case \"true\": {\r\n            return true;\r\n        }\r\n        case \"0\":\r\n        case \"false\": {\r\n            return false;\r\n        }\r\n        case \"\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Route_$007CQuery$007C_$007C(input) {\r\n    try {\r\n        const urlParams = new URLSearchParams(input);\r\n        return toList(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=Router.fs.js.map\r\n","import { Record, Union } from \"../.fable/fable-library.3.1.11/Types.js\";\r\nimport { class_type, record_type, bool_type, union_type, int32_type } from \"../.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { UIAnimation, State$reflection } from \"../State.fs.js\";\r\nimport { DialogActorView__asString, executeDialogStateUpdate, renderViewModel, ViewOrError$reflection } from \"../ViewModel.fs.js\";\r\nimport { getGameRunner } from \"../Engine.fs.js\";\r\nimport { useFeliz_React__React_useState_Static_1505 } from \"../.fable/Feliz.1.52.0/React.fs.js\";\r\nimport { createElement } from \"react\";\r\nimport * as react from \"react\";\r\nimport { Components_DevToolsToolbar_F5C360, Components_ErrorPage_Z3B259ECF } from \"./DevTools.fs.js\";\r\nimport { Operators_FailurePattern } from \"../.fable/fable-library.3.1.11/FSharp.Core.js\";\r\nimport { Interop_reactApi } from \"../.fable/Feliz.1.52.0/Interop.fs.js\";\r\nimport { lookupIcon, PanelUtils_PanelHeader_700867CD, PanelUtils_PanelButton_1A63F12A, PanelUtils_PopupMessagesBlock_6A0C7779 } from \"../UiUtils.fs.js\";\r\nimport { FSharpSet__get_Count } from \"../.fable/fable-library.3.1.11/Set.js\";\r\nimport { curry, equals } from \"../.fable/fable-library.3.1.11/Util.js\";\r\nimport { tail, head, isEmpty, singleton, append, choose, mapIndexed, map, empty, toArray, ofArray } from \"../.fable/fable-library.3.1.11/List.js\";\r\nimport { FactsPanelRenderer_FactsPanel_1334CEF1 } from \"../FactsRenderer.fs.js\";\r\nimport { singleton as singleton_1, delay as delay_1, toList } from \"../.fable/fable-library.3.1.11/Seq.js\";\r\nimport { HistoryPanelRenderer_HistoryPanel_Z2893C411 } from \"../HistoryRenderer.fs.js\";\r\nimport { DebuggerPanelRenderer_DebuggerPanel_Z745B8E35 } from \"../DebuggerRenderer.fs.js\";\r\nimport { toString } from \"../RichText.fs.js\";\r\nimport { DialogTextComponents_AuthorRenderer_Z312F9B9, DialogTextComponents_DialogtextRenderer_Z2CC8FB9B } from \"./DialogTextRenderer.fs.js\";\r\nimport { printf, toText } from \"../.fable/fable-library.3.1.11/String.js\";\r\nimport { ToWindowMod, ToWindow, Conditional, Push, Pop, OnlyOnce } from \"../Actions.fs.js\";\r\nimport { RouterModule_router, RouterModule_urlSegments } from \"../.fable/Feliz.Router.3.8.0/Router.fs.js\";\r\n\r\nexport class AnimationProgress extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"NoAnimation\", \"VariantChosen\"];\r\n    }\r\n}\r\n\r\nexport function AnimationProgress$reflection() {\r\n    return union_type(\"App.AnimationProgress\", [], AnimationProgress, () => [[], [[\"Item\", int32_type]]]);\r\n}\r\n\r\nexport class OpenedPanel extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"NoPanel\", \"HistoryPanel\", \"FactsPanel\", \"DebugPanel\"];\r\n    }\r\n}\r\n\r\nexport function OpenedPanel$reflection() {\r\n    return union_type(\"App.OpenedPanel\", [], OpenedPanel, () => [[], [], [], []]);\r\n}\r\n\r\nexport class GlobalState extends Record {\r\n    constructor(DevTools, Panel, GameState, RenderedState, Animation) {\r\n        super();\r\n        this.DevTools = DevTools;\r\n        this.Panel = Panel;\r\n        this.GameState = GameState;\r\n        this.RenderedState = RenderedState;\r\n        this.Animation = Animation;\r\n    }\r\n}\r\n\r\nexport function GlobalState$reflection() {\r\n    return record_type(\"App.GlobalState\", [], GlobalState, () => [[\"DevTools\", bool_type], [\"Panel\", OpenedPanel$reflection()], [\"GameState\", State$reflection()], [\"RenderedState\", ViewOrError$reflection()], [\"Animation\", AnimationProgress$reflection()]]);\r\n}\r\n\r\nexport class Components {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Components$reflection() {\r\n    return class_type(\"App.Components\", void 0, Components);\r\n}\r\n\r\nexport function Components_$ctor() {\r\n    return new Components();\r\n}\r\n\r\nexport function Components_HelloWorld() {\r\n    const initialState = getGameRunner().InitialState();\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(new GlobalState(true, new OpenedPanel(0), initialState, renderViewModel(void 0, initialState), new AnimationProgress(0)));\r\n    const state = patternInput[0];\r\n    const setState = patternInput[1];\r\n    const setGameState = (s) => {\r\n        setState(new GlobalState(state.DevTools, state.Panel, s, renderViewModel(state.RenderedState, s), new AnimationProgress(0)));\r\n    };\r\n    const vm = state.RenderedState;\r\n    if (vm.tag === 1) {\r\n        const state_1 = vm.fields[0][0];\r\n        const err = vm.fields[0][1];\r\n        return createElement(Components_ErrorPage_Z3B259ECF, {\r\n            errorText: err,\r\n            state: state_1,\r\n            setGameState: setGameState,\r\n        });\r\n    }\r\n    else {\r\n        const v = vm.fields[0];\r\n        try {\r\n            let uiWidgetToRender;\r\n            const matchValue = v.UI;\r\n            switch (matchValue.tag) {\r\n                case 1: {\r\n                    const hub = matchValue.fields[0];\r\n                    uiWidgetToRender = createElement(Components_LocationHubView_5F5458E3, {\r\n                        loc: hub,\r\n                        s: state,\r\n                        a: state.Animation,\r\n                        setstate: setState,\r\n                        setUpdatedGameState: setGameState,\r\n                    });\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    const hub_1 = matchValue.fields[0];\r\n                    uiWidgetToRender = createElement(Components_PersonHubView_Z582D79F5, {\r\n                        loc: hub_1,\r\n                        s: state,\r\n                        a: state.Animation,\r\n                        setstate: setState,\r\n                        setUpdatedGameState: setGameState,\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    const d = matchValue.fields[0];\r\n                    uiWidgetToRender = createElement(Components_DialogWindowView_4F99E13F, {\r\n                        w: d,\r\n                        s: state,\r\n                        a: state.Animation,\r\n                        uia: state.GameState.Animation,\r\n                        setstate: setState,\r\n                        setUpdatedGameState: setGameState,\r\n                    });\r\n                }\r\n            }\r\n            return createElement(\"div\", {\r\n                className: \"main-div\",\r\n                children: Interop_reactApi.Children.toArray([createElement(Components_PopupPanel_48B15CAA, {\r\n                    s: state,\r\n                    ss: setState,\r\n                }), createElement(PanelUtils_PopupMessagesBlock_6A0C7779, {\r\n                    messages: v.Updates,\r\n                }), createElement(Components_HeaderPanel_48B15CAA, {\r\n                    s: state,\r\n                    ss: setState,\r\n                }), uiWidgetToRender, createElement(Components_DevToolsToolbar_F5C360, {\r\n                    enabled: state.DevTools,\r\n                    state: state.GameState,\r\n                    setGameState: setGameState,\r\n                })]),\r\n            });\r\n        }\r\n        catch (matchValue_1) {\r\n            const activePatternResult13844 = Operators_FailurePattern(matchValue_1);\r\n            if (activePatternResult13844 != null) {\r\n                const msg = activePatternResult13844;\r\n                return createElement(Components_ErrorPage_Z3B259ECF, {\r\n                    errorText: msg,\r\n                    state: state.GameState,\r\n                    setGameState: setGameState,\r\n                });\r\n            }\r\n            else {\r\n                throw matchValue_1;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Components_HeaderPanel_48B15CAA(components_HeaderPanel_48B15CAAInputProps) {\r\n    let $key1DA6CF56, $keyZ12E2DA53, $keyZ766AFC99;\r\n    const ss = components_HeaderPanel_48B15CAAInputProps.ss;\r\n    const s = components_HeaderPanel_48B15CAAInputProps.s;\r\n    return createElement(\"div\", {\r\n        className: \"header-panel\",\r\n        children: Interop_reactApi.Children.toArray([($key1DA6CF56 = (FSharpSet__get_Count(s.GameState.KnownFacts) | 0), createElement(PanelUtils_PanelButton_1A63F12A, {\r\n            text: \"Факты\",\r\n            icon: \"img/free-icon-bulb.png\",\r\n            key: $key1DA6CF56,\r\n            $key: $key1DA6CF56,\r\n            onClick: () => {\r\n                ss(new GlobalState(s.DevTools, new OpenedPanel(2), s.GameState, s.RenderedState, s.Animation));\r\n            },\r\n        })), ($keyZ12E2DA53 = 999999999, createElement(PanelUtils_PanelButton_1A63F12A, {\r\n            text: \"История\",\r\n            icon: \"img/free-icon-comment-alt.png\",\r\n            key: $keyZ12E2DA53,\r\n            $key: $keyZ12E2DA53,\r\n            onClick: () => {\r\n                ss(new GlobalState(s.DevTools, new OpenedPanel(1), s.GameState, s.RenderedState, s.Animation));\r\n            },\r\n        })), ($keyZ766AFC99 = 999999990, createElement(PanelUtils_PanelButton_1A63F12A, {\r\n            text: \"Дебаггер\",\r\n            icon: \"img/debug.png\",\r\n            key: $keyZ766AFC99,\r\n            $key: $keyZ766AFC99,\r\n            onClick: () => {\r\n                ss(new GlobalState(s.DevTools, new OpenedPanel(3), s.GameState, s.RenderedState, s.Animation));\r\n            },\r\n        }))]),\r\n    });\r\n}\r\n\r\nexport function Components_PopupPanel_48B15CAA(components_PopupPanel_48B15CAAInputProps) {\r\n    const ss = components_PopupPanel_48B15CAAInputProps.ss;\r\n    const s = components_PopupPanel_48B15CAAInputProps.s;\r\n    const openClosedStyle = (property) => {\r\n        if (!property) {\r\n            return \"animate__animated animate__fadeOutUp animate__faster\";\r\n        }\r\n        else {\r\n            return \"animate__animated animate__fadeInDown animate__faster\";\r\n        }\r\n    };\r\n    const anyPanelStyle = openClosedStyle(!equals(s.Panel, new OpenedPanel(0)));\r\n    const close = (_arg4) => {\r\n        ss(new GlobalState(s.DevTools, new OpenedPanel(0), s.GameState, s.RenderedState, s.Animation));\r\n    };\r\n    const renderSpecificPanel = (name, renderer) => ofArray([createElement(PanelUtils_PanelHeader_700867CD, {\r\n        header: name,\r\n        onClose: close,\r\n    }), renderer]);\r\n    let genChildren;\r\n    const matchValue_1 = s.Panel;\r\n    switch (matchValue_1.tag) {\r\n        case 2: {\r\n            genChildren = renderSpecificPanel(\"Факты\", createElement(FactsPanelRenderer_FactsPanel_1334CEF1, {\r\n                facts: toList(s.GameState.KnownFacts),\r\n            }));\r\n            break;\r\n        }\r\n        case 1: {\r\n            genChildren = renderSpecificPanel(\"История\", createElement(HistoryPanelRenderer_HistoryPanel_Z2893C411, {\r\n                records: toArray(s.GameState.InteractionHistory),\r\n            }));\r\n            break;\r\n        }\r\n        case 3: {\r\n            genChildren = renderSpecificPanel(\"Дебаггер\", createElement(DebuggerPanelRenderer_DebuggerPanel_Z745B8E35, s.GameState));\r\n            break;\r\n        }\r\n        default: {\r\n            genChildren = empty();\r\n        }\r\n    }\r\n    return createElement(\"div\", {\r\n        className: \"popup-panel-holder \" + anyPanelStyle,\r\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\r\n            className: \"popup-panel\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(genChildren)),\r\n        }), createElement(\"button\", {\r\n            className: \"popup-panel-close-button\",\r\n            children: \"закрыть\",\r\n            onClick: close,\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function Components_LocationHubView_5F5458E3(components_LocationHubView_5F5458E3InputProps) {\r\n    const setUpdatedGameState = components_LocationHubView_5F5458E3InputProps.setUpdatedGameState;\r\n    const setstate = components_LocationHubView_5F5458E3InputProps.setstate;\r\n    const a = components_LocationHubView_5F5458E3InputProps.a;\r\n    const s = components_LocationHubView_5F5458E3InputProps.s;\r\n    const loc = components_LocationHubView_5F5458E3InputProps.loc;\r\n    const animation = (s.Animation.tag === 1) ? \"animate__animated animate__fadeOutRight\" : \"animate__animated animate__fadeInLeft animate__faster\";\r\n    const renderVariant = (el) => {\r\n        const matchValue_1 = el.IsLocked;\r\n        switch (matchValue_1.tag) {\r\n            case 0: {\r\n                return [(tupledArg_1) => createElement(Components_LockedDialogButton_Z5E785266, {\r\n                    prp: tupledArg_1[0],\r\n                    s: tupledArg_1[1],\r\n                    a: tupledArg_1[2],\r\n                    setter: tupledArg_1[3],\r\n                    setgs: tupledArg_1[4],\r\n                    i: tupledArg_1[5],\r\n                }), el];\r\n            }\r\n            case 2: {\r\n                return void 0;\r\n            }\r\n            default: {\r\n                return [(tupledArg) => createElement(Components_DialogButton_Z5E785266, {\r\n                    prp: tupledArg[0],\r\n                    s: tupledArg[1],\r\n                    a: tupledArg[2],\r\n                    setter: tupledArg[3],\r\n                    onClickAction: tupledArg[4],\r\n                    i: tupledArg[5],\r\n                }), el];\r\n            }\r\n        }\r\n    };\r\n    const toSimpleVariants = (l) => map((r) => r.Variant, l);\r\n    const setgs = (action, actionText) => {\r\n        setUpdatedGameState(executeDialogStateUpdate(s.GameState, toString(loc.Text), loc.DisplayName, action, actionText));\r\n    };\r\n    const renderedVariants = mapIndexed((i, tupledArg_2) => {\r\n        const render = tupledArg_2[0];\r\n        const d = tupledArg_2[1];\r\n        return render([d, s, a, setstate, curry(2, setgs), i]);\r\n    }, choose(renderVariant, loc.Variants));\r\n    const renderedLocations = mapIndexed((i_1, tupledArg_3) => {\r\n        const render_1 = tupledArg_3[0];\r\n        const d_1 = tupledArg_3[1];\r\n        return render_1([d_1, s, a, setstate, curry(2, setgs), i_1]);\r\n    }, choose(renderVariant, toSimpleVariants(loc.Locations)));\r\n    const renderedPersons = mapIndexed((i_2, tupledArg_4) => {\r\n        const render_2 = tupledArg_4[0];\r\n        const d_2 = tupledArg_4[1];\r\n        return render_2([d_2, s, a, setstate, curry(2, setgs), i_2]);\r\n    }, choose(renderVariant, toSimpleVariants(loc.Persons)));\r\n    return createElement(\"div\", {\r\n        className: \"location-hub-window dialog-window\",\r\n        children: Interop_reactApi.Children.toArray([createElement(DialogTextComponents_DialogtextRenderer_Z2CC8FB9B, {\r\n            animation: animation,\r\n            gameAnimation: new UIAnimation(0),\r\n            text: loc.Text,\r\n            s: s.GameState,\r\n            iteration: s.GameState.Iteration,\r\n        }), createElement(\"div\", {\r\n            className: \"variants\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(append(renderedVariants, append(singleton(createElement(\"div\", {\r\n                dangerouslySetInnerHTML: {\r\n                    __html: \"people to talk\",\r\n                },\r\n            })), append(renderedPersons, append(singleton(createElement(\"div\", {\r\n                dangerouslySetInnerHTML: {\r\n                    __html: \"places to go\",\r\n                },\r\n            })), renderedLocations)))))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function Components_PersonHubView_Z582D79F5(components_PersonHubView_Z582D79F5InputProps) {\r\n    const setUpdatedGameState = components_PersonHubView_Z582D79F5InputProps.setUpdatedGameState;\r\n    const setstate = components_PersonHubView_Z582D79F5InputProps.setstate;\r\n    const a = components_PersonHubView_Z582D79F5InputProps.a;\r\n    const s = components_PersonHubView_Z582D79F5InputProps.s;\r\n    const loc = components_PersonHubView_Z582D79F5InputProps.loc;\r\n    const animation = (s.Animation.tag === 1) ? \"animate__animated animate__fadeOutRight\" : \"animate__animated animate__fadeInLeft animate__faster\";\r\n    const renderVariant = (el) => {\r\n        const matchValue_1 = el.IsLocked;\r\n        switch (matchValue_1.tag) {\r\n            case 0: {\r\n                return [(tupledArg_1) => createElement(Components_LockedDialogButton_Z5E785266, {\r\n                    prp: tupledArg_1[0],\r\n                    s: tupledArg_1[1],\r\n                    a: tupledArg_1[2],\r\n                    setter: tupledArg_1[3],\r\n                    setgs: tupledArg_1[4],\r\n                    i: tupledArg_1[5],\r\n                }), el];\r\n            }\r\n            case 2: {\r\n                return void 0;\r\n            }\r\n            default: {\r\n                return [(tupledArg) => createElement(Components_DialogButton_Z5E785266, {\r\n                    prp: tupledArg[0],\r\n                    s: tupledArg[1],\r\n                    a: tupledArg[2],\r\n                    setter: tupledArg[3],\r\n                    onClickAction: tupledArg[4],\r\n                    i: tupledArg[5],\r\n                }), el];\r\n            }\r\n        }\r\n    };\r\n    const setgs = (action, actionText) => {\r\n        setUpdatedGameState(executeDialogStateUpdate(s.GameState, toString(loc.Text), loc.DisplayName, action, actionText));\r\n    };\r\n    const renderedVariants = mapIndexed((i, tupledArg_2) => {\r\n        const render = tupledArg_2[0];\r\n        const d = tupledArg_2[1];\r\n        return render([d, s, a, setstate, curry(2, setgs), i + 1000]);\r\n    }, choose(renderVariant, loc.Variants));\r\n    const specialKeys = mapIndexed((iter, key) => createElement(Components_SpecialDialogButton_15141237, {\r\n        k: key,\r\n        s: s,\r\n        a: a,\r\n        setter: setstate,\r\n        onClickAction: curry(2, setgs),\r\n        i: iter,\r\n        delay: 2,\r\n    }), loc.SpecialKeys);\r\n    return createElement(\"div\", {\r\n        className: \"location-hub-window dialog-window\",\r\n        children: Interop_reactApi.Children.toArray([createElement(DialogTextComponents_DialogtextRenderer_Z2CC8FB9B, {\r\n            animation: animation,\r\n            gameAnimation: new UIAnimation(0),\r\n            text: loc.Text,\r\n            s: s.GameState,\r\n            iteration: s.GameState.Iteration,\r\n        }), createElement(\"div\", {\r\n            className: \"variants\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(append(renderedVariants, singleton(createElement(\"div\", {\r\n                className: \"personhub-tools\",\r\n                children: Interop_reactApi.Children.toArray(Array.from(specialKeys)),\r\n            }))))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function Components_DialogWindowView_4F99E13F(components_DialogWindowView_4F99E13FInputProps) {\r\n    const setUpdatedGameState = components_DialogWindowView_4F99E13FInputProps.setUpdatedGameState;\r\n    const setstate = components_DialogWindowView_4F99E13FInputProps.setstate;\r\n    const uia = components_DialogWindowView_4F99E13FInputProps.uia;\r\n    const a = components_DialogWindowView_4F99E13FInputProps.a;\r\n    const s = components_DialogWindowView_4F99E13FInputProps.s;\r\n    const w = components_DialogWindowView_4F99E13FInputProps.w;\r\n    const animation = (s.Animation.tag === 1) ? \"animate__animated animate__fadeOutRight\" : \"animate__animated animate__fadeInLeft animate__faster\";\r\n    const render = (el) => {\r\n        const matchValue_1 = el.IsLocked;\r\n        switch (matchValue_1.tag) {\r\n            case 0: {\r\n                return [(tupledArg_1) => createElement(Components_LockedDialogButton_Z5E785266, {\r\n                    prp: tupledArg_1[0],\r\n                    s: tupledArg_1[1],\r\n                    a: tupledArg_1[2],\r\n                    setter: tupledArg_1[3],\r\n                    setgs: tupledArg_1[4],\r\n                    i: tupledArg_1[5],\r\n                }), el];\r\n            }\r\n            case 2: {\r\n                return void 0;\r\n            }\r\n            default: {\r\n                return [(tupledArg) => createElement(Components_DialogButton_Z5E785266, {\r\n                    prp: tupledArg[0],\r\n                    s: tupledArg[1],\r\n                    a: tupledArg[2],\r\n                    setter: tupledArg[3],\r\n                    onClickAction: tupledArg[4],\r\n                    i: tupledArg[5],\r\n                }), el];\r\n            }\r\n        }\r\n    };\r\n    const setgs = (action, actionText) => {\r\n        setUpdatedGameState(executeDialogStateUpdate(s.GameState, toString(w.Text), DialogActorView__asString(w.Actor), action, actionText));\r\n    };\r\n    return createElement(\"div\", {\r\n        className: \"dialog-window\",\r\n        children: Interop_reactApi.Children.toArray([createElement(DialogTextComponents_AuthorRenderer_Z312F9B9, {\r\n            author: w.Actor,\r\n        }), createElement(DialogTextComponents_DialogtextRenderer_Z2CC8FB9B, {\r\n            animation: animation,\r\n            gameAnimation: uia,\r\n            text: w.Text,\r\n            s: s.GameState,\r\n            iteration: s.GameState.Iteration,\r\n        }), createElement(\"div\", {\r\n            className: \"variants\",\r\n            children: Interop_reactApi.Children.toArray(Array.from(mapIndexed((i, tupledArg_2) => {\r\n                const render_1 = tupledArg_2[0];\r\n                const d = tupledArg_2[1];\r\n                return render_1([d, s, a, setstate, curry(2, setgs), i]);\r\n            }, choose(render, w.Variants)))),\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function Components_DialogButton_Z5E785266(components_DialogButton_Z5E785266InputProps) {\r\n    const i = components_DialogButton_Z5E785266InputProps.i;\r\n    const onClickAction = components_DialogButton_Z5E785266InputProps.onClickAction;\r\n    const setter = components_DialogButton_Z5E785266InputProps.setter;\r\n    const a = components_DialogButton_Z5E785266InputProps.a;\r\n    const s = components_DialogButton_Z5E785266InputProps.s;\r\n    const prp = components_DialogButton_Z5E785266InputProps.prp;\r\n    const withAnimation = () => {\r\n        void setTimeout(() => {\r\n            const value = onClickAction(prp.Action)(prp.Text);\r\n        }, 250);\r\n        setter(new GlobalState(s.DevTools, s.Panel, s.GameState, s.RenderedState, new AnimationProgress(1, i)));\r\n    };\r\n    const calcDelay = (i_1) => {\r\n        if (i_1 === 0) {\r\n            return \"\";\r\n        }\r\n        else {\r\n            return toText(printf(\"animate__delay-%ds\"))(i_1);\r\n        }\r\n    };\r\n    const addClassesByAnimation = (_arg1) => {\r\n        let x;\r\n        if (_arg1.tag === 1) {\r\n            if (x = (_arg1.fields[0] | 0), x === i) {\r\n                const x_1 = _arg1.fields[0] | 0;\r\n                return \"animate__animated animate__zoomOutDown animate__faster\";\r\n            }\r\n            else if (_arg1.tag === 1) {\r\n                return \"animate__animated animate__fadeOut animate__faster\";\r\n            }\r\n            else {\r\n                throw (new Error(\"Match failure\"));\r\n            }\r\n        }\r\n        else {\r\n            return \"animate__animated animate__fadeInDown animate__faster \" + calcDelay(i);\r\n        }\r\n    };\r\n    let addClassesByAction;\r\n    const matchValue = prp.Action;\r\n    addClassesByAction = ((matchValue instanceof OnlyOnce) ? \"onlyonce\" : ((matchValue instanceof Pop) ? \"pop\" : ((matchValue instanceof Push) ? \"push\" : ((matchValue instanceof Conditional) ? \"conditional\" : ((matchValue instanceof ToWindow) ? \"towindow\" : ((matchValue instanceof ToWindowMod) ? \"towindiw towindowmod\" : \"\"))))));\r\n    return createElement(\"button\", {\r\n        children: prp.Text,\r\n        key: s.GameState.Iteration,\r\n        className: (addClassesByAction + \" variant \") + addClassesByAnimation(s.Animation),\r\n        onClick: (_arg6) => {\r\n            if (a.tag === 0) {\r\n                withAnimation();\r\n            }\r\n        },\r\n    });\r\n}\r\n\r\nexport function Components_SpecialDialogButton_15141237(components_SpecialDialogButton_15141237InputProps) {\r\n    const delay = components_SpecialDialogButton_15141237InputProps.delay;\r\n    const i = components_SpecialDialogButton_15141237InputProps.i;\r\n    const onClickAction = components_SpecialDialogButton_15141237InputProps.onClickAction;\r\n    const setter = components_SpecialDialogButton_15141237InputProps.setter;\r\n    const a = components_SpecialDialogButton_15141237InputProps.a;\r\n    const s = components_SpecialDialogButton_15141237InputProps.s;\r\n    const k = components_SpecialDialogButton_15141237InputProps.k;\r\n    let patternInput;\r\n    if (k.tag === 0) {\r\n        const d_1 = k.fields[0];\r\n        patternInput = [d_1, \" exit \", \"dialog-exit-icon\"];\r\n    }\r\n    else {\r\n        const d = k.fields[0];\r\n        patternInput = [d, \"\", \"\"];\r\n    }\r\n    const specialClass = patternInput[1];\r\n    const prp = patternInput[0];\r\n    const icon = patternInput[2];\r\n    const iconUrl = lookupIcon(icon, \"img/omment-info.png\");\r\n    const withAnimation = () => {\r\n        void setTimeout(() => {\r\n            const value = onClickAction(prp.Action)(prp.Text);\r\n        }, 250);\r\n        setter(new GlobalState(s.DevTools, s.Panel, s.GameState, s.RenderedState, new AnimationProgress(1, i)));\r\n    };\r\n    const addClassesByAnimation = (_arg2) => {\r\n        let x;\r\n        if (_arg2.tag === 1) {\r\n            if (x = (_arg2.fields[0] | 0), x === i) {\r\n                const x_1 = _arg2.fields[0] | 0;\r\n                return \"animate__animated animate__bounceOut animate__faster\";\r\n            }\r\n            else if (_arg2.tag === 1) {\r\n                return \"animate__animated animate__fadeOut animate__faster\";\r\n            }\r\n            else {\r\n                throw (new Error(\"Match failure\"));\r\n            }\r\n        }\r\n        else {\r\n            return \"animate__animated animate__fadeInUp animate__faster \" + toText(printf(\"animate__delay-%ds\"))(delay);\r\n        }\r\n    };\r\n    return createElement(\"button\", {\r\n        key: s.GameState.Iteration,\r\n        className: (specialClass + \" bigvariant \") + addClassesByAnimation(s.Animation),\r\n        onClick: (_arg8) => {\r\n            if (a.tag === 0) {\r\n                withAnimation();\r\n            }\r\n        },\r\n        children: Interop_reactApi.Children.toArray([createElement(\"img\", {\r\n            src: iconUrl,\r\n            alt: icon,\r\n        }), createElement(\"span\", {\r\n            children: prp.Text,\r\n        })]),\r\n    });\r\n}\r\n\r\nexport function Components_LockedDialogButton_Z5E785266(components_LockedDialogButton_Z5E785266InputProps) {\r\n    const i = components_LockedDialogButton_Z5E785266InputProps.i;\r\n    const setgs = components_LockedDialogButton_Z5E785266InputProps.setgs;\r\n    const setter = components_LockedDialogButton_Z5E785266InputProps.setter;\r\n    const a = components_LockedDialogButton_Z5E785266InputProps.a;\r\n    const s = components_LockedDialogButton_Z5E785266InputProps.s;\r\n    const prp = components_LockedDialogButton_Z5E785266InputProps.prp;\r\n    const calcDelay = (i_1) => {\r\n        if (i_1 === 0) {\r\n            return \"\";\r\n        }\r\n        else {\r\n            return toText(printf(\"animate__delay-%ds\"))(i_1);\r\n        }\r\n    };\r\n    const addClassesByAnimation = (_arg3) => {\r\n        let x;\r\n        if (_arg3.tag === 1) {\r\n            if (x = (_arg3.fields[0] | 0), x === i) {\r\n                const x_1 = _arg3.fields[0] | 0;\r\n                return \"animate__animated animate__zoomOutDown\";\r\n            }\r\n            else if (_arg3.tag === 1) {\r\n                return \"animate__animated animate__fadeOut animate__faster\";\r\n            }\r\n            else {\r\n                throw (new Error(\"Match failure\"));\r\n            }\r\n        }\r\n        else {\r\n            return \"animate__animated animate__fadeInDown animate__faster \" + calcDelay(i);\r\n        }\r\n    };\r\n    return createElement(\"button\", {\r\n        children: prp.Text,\r\n        key: s.GameState.Iteration,\r\n        className: \"variant locked \" + addClassesByAnimation(s.Animation),\r\n    });\r\n}\r\n\r\nexport function Components_Counter() {\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(0);\r\n    const setCount = patternInput[1];\r\n    const count = patternInput[0] | 0;\r\n    const children = ofArray([createElement(\"h1\", {\r\n        children: [count],\r\n    }), createElement(\"button\", {\r\n        onClick: (_arg9) => {\r\n            setCount(count + 1);\r\n        },\r\n        children: \"Increment\",\r\n    })]);\r\n    return createElement(\"div\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\r\n    });\r\n}\r\n\r\nexport function Components_Router() {\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(RouterModule_urlSegments(window.location.hash, 1));\r\n    const updateUrl = patternInput[1];\r\n    const currentUrl = patternInput[0];\r\n    return RouterModule_router({\r\n        onUrlChanged: updateUrl,\r\n        application: react.createElement(react.Fragment, {}, ...toList(delay_1(() => {\r\n            let otherwise;\r\n            return (!isEmpty(currentUrl)) ? ((head(currentUrl) === \"hello\") ? (isEmpty(tail(currentUrl)) ? singleton_1(createElement(Components_HelloWorld, null)) : (otherwise = currentUrl, singleton_1(createElement(\"h1\", {\r\n                children: [\"Not found\"],\r\n            })))) : ((head(currentUrl) === \"counter\") ? (isEmpty(tail(currentUrl)) ? singleton_1(createElement(Components_Counter, null)) : (otherwise = currentUrl, singleton_1(createElement(\"h1\", {\r\n                children: [\"Not found\"],\r\n            })))) : (otherwise = currentUrl, singleton_1(createElement(\"h1\", {\r\n                children: [\"Not found\"],\r\n            }))))) : singleton_1(createElement(\"h1\", {\r\n                children: [\"Index\"],\r\n            }));\r\n        }))),\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=Components.fs.js.map\r\n","import { init } from \"./Game/GameDva.fs.js\";\r\nimport { render } from \"react-dom\";\r\nimport { createElement } from \"react\";\r\nimport { Components_HelloWorld } from \"./UserInterface/Components.fs.js\";\r\nimport \"./styles/global.scss\";\r\n\r\n\r\ninit();\r\n\r\nrender(createElement(Components_HelloWorld, null), document.getElementById(\"feliz-app\"));\r\n\r\n//# sourceMappingURL=Main.fs.js.map\r\n"],"sourceRoot":""}